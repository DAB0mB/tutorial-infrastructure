From 5eaa87775f63b6928a6f20a4c31495d66fdc025e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 16 Jun 2016 18:44:36 +0300
Subject: [PATCH 01/70] Added missing files

---
 .meteor/.finished-upgraders |  13 +++++
 .meteor/.gitignore          |   1 +
 .meteor/.id                 |   7 +++
 .meteor/packages            |  71 ++++++++++++++++++++++++
 .meteor/platforms           |   4 ++
 .meteor/release             |   1 +
 .meteor/versions            | 132 ++++++++++++++++++++++++++++++++++++++++++++
 7 files changed, 229 insertions(+)
 create mode 100755 .meteor/.finished-upgraders
 create mode 100755 .meteor/.gitignore
 create mode 100755 .meteor/.id
 create mode 100755 .meteor/packages
 create mode 100755 .meteor/platforms
 create mode 100644 .meteor/release
 create mode 100644 .meteor/versions

diff --git a/.meteor/.finished-upgraders b/.meteor/.finished-upgraders
new file mode 100755
index 0000000..dacc2c0
--- /dev/null
+++ b/.meteor/.finished-upgraders
@@ -0,0 +1,13 @@
+# This file contains information which helps Meteor properly upgrade your
+# app when you run 'meteor update'. You should check it into version control
+# with your project.
+
+notices-for-0.9.0
+notices-for-0.9.1
+0.9.4-platform-file
+notices-for-facebook-graph-api-2
+1.2.0-standard-minifiers-package
+1.2.0-meteor-platform-split
+1.2.0-cordova-changes
+1.2.0-breaking-changes
+1.3.0-split-minifiers-package
diff --git a/.meteor/.gitignore b/.meteor/.gitignore
new file mode 100755
index 0000000..4083037
--- /dev/null
+++ b/.meteor/.gitignore
@@ -0,0 +1 @@
+local
diff --git a/.meteor/.id b/.meteor/.id
new file mode 100755
index 0000000..c27c0e4
--- /dev/null
+++ b/.meteor/.id
@@ -0,0 +1,7 @@
+# This file contains a token that is unique to your project.
+# Check it into your repository along with the rest of this directory.
+# It can be used for purposes such as:
+#   - ensuring you don't accidentally deploy one app on top of another
+#   - providing package authors with aggregated statistics
+
+vqze4o4fmojp1vxyybb
diff --git a/.meteor/packages b/.meteor/packages
new file mode 100755
index 0000000..84de7d0
--- /dev/null
+++ b/.meteor/packages
@@ -0,0 +1,71 @@
+# Meteor packages used by this project one per line.
+# Check this file (and the other files in this directory) into your repository.
+#
+# 'meteor add' and 'meteor remove' will edit this file for you
+# but you can also edit it by hand.
+
+# meteor libraries
+meteor-base
+ecmascript
+es5-shim
+check
+tracker
+
+# standard libraries
+jquery
+underscore
+less
+
+# ui
+blaze-html-templates
+reactive-dict
+reactive-var
+aldeed:template-extension
+percolate:momentum
+
+# data
+mongo
+aldeed:simple-schema
+aldeed:collection2
+dburles:collection-helpers
+reywood:publish-composite
+mdg:validated-method
+mdg:validation-error
+
+# routing
+kadira:flow-router@2.11.0
+kadira:blaze-layout
+arillo:flow-router-helpers
+zimme:active-route
+
+# i18n
+tap:i18n
+
+# accounts
+accounts-password
+useraccounts:unstyled
+useraccounts:flow-routing
+softwarerero:accounts-t9n
+
+# mobile
+crosswalk
+mobile-experience
+chriswessels:hammer
+
+# production
+juliancwirko:postcss@1.0.0-beta.11
+standard-minifier-js
+ddp-rate-limiter
+app-prod-security
+
+# rest apis
+simple:rest-accounts-password
+simple:rest
+
+# testing
+factory
+xolvio:cleaner
+dispatch:mocha-phantomjs
+practicalmeteor:mocha@2.1.1-rc.1
+hwillson:stub-collections
+johanbrook:publication-collector
diff --git a/.meteor/platforms b/.meteor/platforms
new file mode 100755
index 0000000..0c5aaa5
--- /dev/null
+++ b/.meteor/platforms
@@ -0,0 +1,4 @@
+server
+browser
+android
+ios
diff --git a/.meteor/release b/.meteor/release
new file mode 100644
index 0000000..b2d8cda
--- /dev/null
+++ b/.meteor/release
@@ -0,0 +1 @@
+METEOR@1.3.3
diff --git a/.meteor/versions b/.meteor/versions
new file mode 100644
index 0000000..d8ddf64
--- /dev/null
+++ b/.meteor/versions
@@ -0,0 +1,132 @@
+accounts-base@1.2.7
+accounts-password@1.1.10
+aldeed:collection2@2.9.1
+aldeed:collection2-core@1.1.1
+aldeed:schema-deny@1.0.1
+aldeed:schema-index@1.0.1
+aldeed:simple-schema@1.5.3
+aldeed:template-extension@4.0.0
+allow-deny@1.0.5
+app-prod-security@0.0.0
+arillo:flow-router-helpers@0.5.2
+autoupdate@1.2.10
+babel-compiler@6.8.0
+babel-runtime@0.1.9
+base64@1.0.9
+binary-heap@1.0.9
+blaze@2.1.8
+blaze-html-templates@1.0.4
+blaze-tools@1.0.9
+boilerplate-generator@1.0.9
+browser-policy@1.0.9
+browser-policy-common@1.0.10
+browser-policy-content@1.0.11
+browser-policy-framing@1.0.11
+caching-compiler@1.0.5
+caching-html-compiler@1.0.6
+callback-hook@1.0.9
+cfs:http-methods@0.0.32
+check@1.2.2
+chriswessels:hammer@4.0.2
+coffeescript@1.1.0
+crosswalk@1.6.2
+dburles:collection-helpers@1.0.4
+ddp@1.2.5
+ddp-client@1.2.8
+ddp-common@1.2.6
+ddp-rate-limiter@1.0.5
+ddp-server@1.2.7
+deps@1.0.12
+diff-sequence@1.0.6
+dispatch:mocha-core@0.0.2
+dispatch:mocha-phantomjs@0.1.5
+dispatch:phantomjs-tests@0.0.5
+ecmascript@0.4.4
+ecmascript-runtime@0.2.11
+ejson@1.0.12
+email@1.0.13
+es5-shim@4.5.11
+factory@1.0.0
+fastclick@1.0.12
+force-ssl@1.0.12
+geojson-utils@1.0.9
+hot-code-push@1.0.4
+html-tools@1.0.10
+htmljs@1.0.10
+http@1.1.6
+hwillson:stub-collections@1.0.1
+id-map@1.0.8
+johanbrook:publication-collector@1.0.0
+jquery@1.11.9
+juliancwirko:postcss@1.1.1
+kadira:blaze-layout@2.3.0
+kadira:flow-router@2.12.1
+launch-screen@1.0.12
+less@2.6.1
+livedata@1.0.18
+localstorage@1.0.11
+logging@1.0.13
+mdg:validated-method@1.1.0
+mdg:validation-error@0.5.1
+meteor@1.1.15
+meteor-base@1.0.4
+meteorspark:util@0.2.0
+minifier-css@1.1.12
+minifier-js@1.1.12
+minimongo@1.0.17
+mobile-experience@1.0.4
+mobile-status-bar@1.0.12
+modules@0.6.2
+modules-runtime@0.6.4
+mongo@1.1.8
+mongo-id@1.0.5
+npm-bcrypt@0.8.6_1
+npm-mongo@1.4.44
+observe-sequence@1.0.12
+ordered-dict@1.0.8
+percolate:momentum@0.7.2
+percolate:velocityjs@1.1.0
+practicalmeteor:chai@2.1.0_1
+practicalmeteor:loglevel@1.2.0_2
+practicalmeteor:mocha@2.4.5_2
+practicalmeteor:mocha-core@0.1.4
+practicalmeteor:sinon@1.14.1_2
+promise@0.7.2
+raix:eventemitter@0.1.3
+random@1.0.9
+rate-limit@1.0.5
+reactive-dict@1.1.8
+reactive-var@1.0.10
+reload@1.1.9
+retry@1.0.8
+reywood:publish-composite@1.4.2
+routepolicy@1.0.11
+service-configuration@1.0.10
+session@1.1.6
+sha@1.0.8
+simple:authenticate-user-by-token@1.0.1
+simple:json-routes@2.1.0
+simple:rest@1.1.1
+simple:rest-accounts-password@1.1.2
+simple:rest-bearer-token-parser@1.0.1
+simple:rest-json-error-handler@1.0.1
+softwarerero:accounts-t9n@1.3.4
+spacebars@1.0.12
+spacebars-compiler@1.0.12
+srp@1.0.9
+standard-minifier-js@1.0.7
+tap:i18n@1.8.2
+templating@1.1.10
+templating-tools@1.0.4
+tmeasday:test-reporter-helpers@0.2.1
+tracker@1.0.14
+ui@1.0.11
+underscore@1.0.9
+url@1.0.10
+useraccounts:core@1.14.2
+useraccounts:flow-routing@1.14.2
+useraccounts:unstyled@1.14.2
+webapp@1.2.9
+webapp-hashing@1.0.9
+xolvio:cleaner@0.3.1
+zimme:active-route@2.3.2
-- 
2.6.4


From c784d2d7bb7e6abe31e61fd70e8853513d2a7bfe Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:17:07 +0300
Subject: [PATCH 02/70] Step 1.1: Add Angular 2 compilers

---
 .meteor/packages | 1 +
 .meteor/versions | 6 ++++++
 2 files changed, 7 insertions(+)
 mode change 100755 => 100644 .meteor/packages

diff --git a/.meteor/packages b/.meteor/packages
old mode 100755
new mode 100644
index 84de7d0..d46ec8e
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -69,3 +69,4 @@ dispatch:mocha-phantomjs
 practicalmeteor:mocha@2.1.1-rc.1
 hwillson:stub-collections
 johanbrook:publication-collector
+angular2-with-blaze-compilers
diff --git a/.meteor/versions b/.meteor/versions
index d8ddf64..b91253d 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -7,11 +7,17 @@ aldeed:schema-index@1.0.1
 aldeed:simple-schema@1.5.3
 aldeed:template-extension@4.0.0
 allow-deny@1.0.5
+angular2-css@0.1.0
+angular2-html-templates@0.5.3
+angular2-with-blaze-compilers@0.5.7
 app-prod-security@0.0.0
 arillo:flow-router-helpers@0.5.2
 autoupdate@1.2.10
 babel-compiler@6.8.0
 babel-runtime@0.1.9
+barbatus:typescript@0.3.3
+barbatus:typescript-compiler@0.6.1
+barbatus:typescript-runtime@0.1.2
 base64@1.0.9
 binary-heap@1.0.9
 blaze@2.1.8
-- 
2.6.4


From ee69a33a13f08db108c483e763315c4abf9bcab7 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:19:26 +0300
Subject: [PATCH 03/70] Step 1.2: Add angular2 , angular2-meteor and polyfills

---
 package.json | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)
 mode change 100755 => 100644 package.json

diff --git a/package.json b/package.json
old mode 100755
new mode 100644
index 49fa9dd..e29a6ea
--- a/package.json
+++ b/package.json
@@ -9,8 +9,13 @@
     "chimp-watch": "chimp --ddp=http://localhost:3000 --watch --mocha --path=tests"
   },
   "dependencies": {
-    "autoprefixer": "^6.3.1",
-    "faker": "^3.0.1"
+    "@angular/compiler": "2.0.0-rc.1",
+    "@angular/platform-browser-dynamic": "2.0.0-rc.1",
+    "@angular/router-deprecated": "2.0.0-rc.1",
+    "angular2-meteor": "0.5.5",
+    "angular2-meteor-polyfills": "0.1.1",
+    "autoprefixer": "6.3.1",
+    "faker": "3.0.1"
   },
   "devDependencies": {
     "eslint": "^2.3.0",
-- 
2.6.4


From a9d1cf09d2b4916c216146915095a8e633ce804d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:20:04 +0300
Subject: [PATCH 04/70] Step 1.3: Add angular 2 runtime package from Atmosphere

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index d46ec8e..25a1410 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -70,3 +70,4 @@ practicalmeteor:mocha@2.1.1-rc.1
 hwillson:stub-collections
 johanbrook:publication-collector
 angular2-with-blaze-compilers
+barbatus:angular2-runtime
diff --git a/.meteor/versions b/.meteor/versions
index b91253d..67bfd2f 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -15,6 +15,7 @@ arillo:flow-router-helpers@0.5.2
 autoupdate@1.2.10
 babel-compiler@6.8.0
 babel-runtime@0.1.9
+barbatus:angular2-runtime@0.5.0
 barbatus:typescript@0.3.3
 barbatus:typescript-compiler@0.6.1
 barbatus:typescript-runtime@0.1.2
-- 
2.6.4


From 0743708049ce36d6fcdf1a6a4b342e3eff21f8a0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:29:53 +0300
Subject: [PATCH 05/70] Step 1.4: Removed less dependency

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 25a1410..d706fec 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -14,7 +14,6 @@ tracker
 # standard libraries
 jquery
 underscore
-less
 
 # ui
 blaze-html-templates
diff --git a/.meteor/versions b/.meteor/versions
index 67bfd2f..8fcc2c6 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -69,7 +69,6 @@ juliancwirko:postcss@1.1.1
 kadira:blaze-layout@2.3.0
 kadira:flow-router@2.12.1
 launch-screen@1.0.12
-less@2.6.1
 livedata@1.0.18
 localstorage@1.0.11
 logging@1.0.13
-- 
2.6.4


From af7c39f2230eee6315dfb6dc5310cb33c86d8322 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:31:00 +0300
Subject: [PATCH 06/70] Step 1.5: Added angular2-blaze-template package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index e29a6ea..492d3b2 100644
--- a/package.json
+++ b/package.json
@@ -12,6 +12,7 @@
     "@angular/compiler": "2.0.0-rc.1",
     "@angular/platform-browser-dynamic": "2.0.0-rc.1",
     "@angular/router-deprecated": "2.0.0-rc.1",
+    "angular2-blaze-template": "0.0.1",
     "angular2-meteor": "0.5.5",
     "angular2-meteor-polyfills": "0.1.1",
     "autoprefixer": "6.3.1",
-- 
2.6.4


From 007e43208cb4973ef8b72e9cd1b664fc83b511f3 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:33:14 +0300
Subject: [PATCH 07/70] Step 1.6: Change the extension of the main file

---
 client/main.js | 1 -
 client/main.ts | 1 +
 2 files changed, 1 insertion(+), 1 deletion(-)
 delete mode 100755 client/main.js
 create mode 100755 client/main.ts

diff --git a/client/main.js b/client/main.js
deleted file mode 100755
index 090ed9e..0000000
--- a/client/main.js
+++ /dev/null
@@ -1 +0,0 @@
-import '/imports/startup/client';
diff --git a/client/main.ts b/client/main.ts
new file mode 100755
index 0000000..090ed9e
--- /dev/null
+++ b/client/main.ts
@@ -0,0 +1 @@
+import '/imports/startup/client';
-- 
2.6.4


From 3e1c84b590de8debf81a2e2f973a144e1226628b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:41:23 +0300
Subject: [PATCH 08/70] Step 2.1: Create the MainComponent

---
 client/main.ts | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index 090ed9e..6d7311b 100755
--- a/client/main.ts
+++ b/client/main.ts
@@ -1 +1,14 @@
 import '/imports/startup/client';
+
+import {bootstrap} from "@angular/platform-browser-dynamic";
+import {Component} from "@angular/core";
+
+@Component({
+  selector: 'app',
+  template: ''
+})
+class MainComponent {
+  constructor() {}
+}
+
+bootstrap(MainComponent, []);
\ No newline at end of file
-- 
2.6.4


From d3589871d52cb78ec325b4175cc911e0015b2450 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:42:10 +0300
Subject: [PATCH 09/70] Step 2.2: Changed the name of the main HTML file

---
 client/head.html      | 8 --------
 client/index.ng2.html | 8 ++++++++
 2 files changed, 8 insertions(+), 8 deletions(-)
 delete mode 100755 client/head.html
 create mode 100755 client/index.ng2.html

diff --git a/client/head.html b/client/head.html
deleted file mode 100755
index 6bf9f6f..0000000
--- a/client/head.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<head>
-  <meta charset="utf-8">
-  <title>Todos - All your todos synced wherever you happen to be</title>
-  <meta name="description" content="The simple todo list that keeps your todos in sync everywhere free forever. Todos is open source and powered by Meteor.">
-  <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
-  <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
-  <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
-</head>
\ No newline at end of file
diff --git a/client/index.ng2.html b/client/index.ng2.html
new file mode 100755
index 0000000..6bf9f6f
--- /dev/null
+++ b/client/index.ng2.html
@@ -0,0 +1,8 @@
+<head>
+  <meta charset="utf-8">
+  <title>Todos - All your todos synced wherever you happen to be</title>
+  <meta name="description" content="The simple todo list that keeps your todos in sync everywhere free forever. Todos is open source and powered by Meteor.">
+  <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
+  <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
+  <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
+</head>
\ No newline at end of file
-- 
2.6.4


From 531af27ca7aed3829f6e06202e04b2cfef578893 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:42:32 +0300
Subject: [PATCH 10/70] Step 2.3: Added app tag to the main HTML file

---
 client/index.ng2.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/index.ng2.html b/client/index.ng2.html
index 6bf9f6f..9670ce7 100755
--- a/client/index.ng2.html
+++ b/client/index.ng2.html
@@ -5,4 +5,7 @@
   <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
   <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
   <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
-</head>
\ No newline at end of file
+</head>
+<body>
+    <app></app>
+</body>
\ No newline at end of file
-- 
2.6.4


From 9a9204778cd0946f2be8b2f1c9d8ce403a37702e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:49:52 +0300
Subject: [PATCH 11/70] Step 3.1: Commented all the FlowRouter definitions

---
 imports/startup/client/routes.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 6c61877..5bebb6e 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -11,6 +11,7 @@ import '../../ui/pages/app-not-found.js';
 // Import to override accounts templates
 import '../../ui/accounts/accounts-templates.js';
 
+/*
 FlowRouter.route('/lists/:_id', {
   name: 'Lists.show',
   action() {
@@ -48,3 +49,4 @@ AccountsTemplates.configureRoute('resetPwd', {
   name: 'resetPwd',
   path: '/reset-password',
 });
+*/
\ No newline at end of file
-- 
2.6.4


From d7aaa46059bf4958967e7a00f055b79de8d32af2 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:51:58 +0300
Subject: [PATCH 12/70] Step 3.2: Added routes definitions using Angular 2
 router

---
 client/main.ts | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/client/main.ts b/client/main.ts
index 6d7311b..1aa4fdf 100755
--- a/client/main.ts
+++ b/client/main.ts
@@ -2,13 +2,19 @@ import '/imports/startup/client';
 
 import {bootstrap} from "@angular/platform-browser-dynamic";
 import {Component} from "@angular/core";
+import {ROUTER_DIRECTIVES, ROUTER_PROVIDERS, RouteConfig} from "@angular/router-deprecated";
 
 @Component({
-  selector: 'app',
-  template: ''
+  selector: "app",
+  directives: [ROUTER_DIRECTIVES],
+  template: `<router-outlet></router-outlet>`,
 })
+@RouteConfig([
+  {path: '/', name: 'Home', component: MainContainerComponent },
+  {path: '/lists/:_id', name: 'ListShow', component: ListShowComponent }
+])
 class MainComponent {
   constructor() {}
 }
 
-bootstrap(MainComponent, []);
\ No newline at end of file
+bootstrap(MainComponent, [ROUTER_PROVIDERS]);
\ No newline at end of file
-- 
2.6.4


From 5e52f881a91032341185f6127242ed0f53100e99 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:34:18 +0300
Subject: [PATCH 13/70] Step 3.3: Added base tag

---
 client/index.ng2.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/index.ng2.html b/client/index.ng2.html
index 9670ce7..e80ca6a 100755
--- a/client/index.ng2.html
+++ b/client/index.ng2.html
@@ -5,6 +5,7 @@
   <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
   <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
   <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
+  <base href="/">
 </head>
 <body>
     <app></app>
-- 
2.6.4


From 27f0263ac8fbdb030b80c27340d423bad95fe030 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:57:05 +0300
Subject: [PATCH 14/70] Step 3.4: Created a stub for MainContainerComponent

---
 client/imports/components/main-container.component.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/components/main-container.component.ts

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
new file mode 100644
index 0000000..daeb148
--- /dev/null
+++ b/client/imports/components/main-container.component.ts
@@ -0,0 +1,8 @@
+import {Component} from "@angular/core";
+
+@Component({
+  template: 'Hello MainContainer!'
+})
+export class MainContainerComponent {
+
+}
\ No newline at end of file
-- 
2.6.4


From c0c78b136cbe904bb35294f6694ef6f48b7fbe87 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:57:33 +0300
Subject: [PATCH 15/70] Step 3.5: Created a stub for ListShowComponent

---
 client/imports/components/list-show.component.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/components/list-show.component.ts

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
new file mode 100644
index 0000000..cdc5fba
--- /dev/null
+++ b/client/imports/components/list-show.component.ts
@@ -0,0 +1,8 @@
+import {Component} from "@angular/core";
+
+@Component({
+  template: 'Hello ListShow!'
+})
+export class ListShowComponent {
+
+}
\ No newline at end of file
-- 
2.6.4


From f2c8c5391c143dcf41890287430483de43e8a690 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:57:58 +0300
Subject: [PATCH 16/70] Step 3.6: Added imports

---
 client/main.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index 1aa4fdf..362c403 100755
--- a/client/main.ts
+++ b/client/main.ts
@@ -3,6 +3,8 @@ import '/imports/startup/client';
 import {bootstrap} from "@angular/platform-browser-dynamic";
 import {Component} from "@angular/core";
 import {ROUTER_DIRECTIVES, ROUTER_PROVIDERS, RouteConfig} from "@angular/router-deprecated";
+import {MainContainerComponent} from "./imports/components/main-container.component";
+import {ListShowComponent} from "./imports/components/list-show.component";
 
 @Component({
   selector: "app",
-- 
2.6.4


From 580380cab059df50c92d618828015de4261264d3 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:08:48 +0300
Subject: [PATCH 17/70] Step 4.1: Added MeteorComponent

---
 client/imports/components/main-container.component.ts | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index daeb148..999e0c3 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -1,8 +1,11 @@
 import {Component} from "@angular/core";
+import {MeteorComponent} from "angular2-meteor";
 
 @Component({
-  template: 'Hello MainContainer!'
+  directives: [],
+  template: ''
 })
-export class MainContainerComponent {
-
+export class MainContainerComponent extends MeteorComponent {
+  constructor() {
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 878fa9a4fa433d4889f6d504e6ff07fc9d378e54 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:10:45 +0300
Subject: [PATCH 18/70] Step 4.2: Added router redirection

---
 client/imports/components/main-container.component.ts | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 999e0c3..fc07ba1 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -1,11 +1,16 @@
 import {Component} from "@angular/core";
 import {MeteorComponent} from "angular2-meteor";
+import {Lists} from "../../../imports/api/lists/lists.js";
+import {Router} from "@angular/router-deprecated";
 
 @Component({
   directives: [],
   template: ''
 })
 export class MainContainerComponent extends MeteorComponent {
-  constructor() {
+  constructor(router : Router) {
+    if (Lists.findOne()) {
+      router.navigate(['ListShow', {_id: Lists.findOne()._id}]);
+    }
   }
 }
\ No newline at end of file
-- 
2.6.4


From 17aac887be6d0571412a78d7abbd937f384612c1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:17:31 +0300
Subject: [PATCH 19/70] Step 4.3: Added data subscription

---
 client/imports/components/main-container.component.ts | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index fc07ba1..6ec1952 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -9,8 +9,15 @@ import {Router} from "@angular/router-deprecated";
 })
 export class MainContainerComponent extends MeteorComponent {
   constructor(router : Router) {
-    if (Lists.findOne()) {
-      router.navigate(['ListShow', {_id: Lists.findOne()._id}]);
-    }
+    super();
+
+    this.subscribe('lists.public');
+    this.subscribe('lists.private');
+
+    this.autorun(() => {
+      if (Lists.findOne()) {
+        router.navigate(['ListShow', {_id: Lists.findOne()._id}]);
+      }
+    });
   }
 }
\ No newline at end of file
-- 
2.6.4


From 4ed93f5c7d298c15aab0fa8a8da2a4f9dc87e5b5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:18:39 +0300
Subject: [PATCH 20/70] Step 5.1: Get the ID of the list from the router

---
 client/imports/components/list-show.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index cdc5fba..085236e 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,8 +1,11 @@
 import {Component} from "@angular/core";
+import {RouteParams} from "@angular/router-deprecated";
 
 @Component({
   template: 'Hello ListShow!'
 })
 export class ListShowComponent {
-
+  constructor(params : RouteParams) {
+    let listId = params.get("_id");
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 52536c45120f5ebda6152a0ba09cdb098e287c9b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:21:50 +0300
Subject: [PATCH 21/70] Step 5.2: Added the template loading and context

---
 client/imports/components/list-show.component.ts | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 085236e..42202bf 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,11 +1,20 @@
 import {Component} from "@angular/core";
 import {RouteParams} from "@angular/router-deprecated";
+import {BlazeTemplate} from "angular2-blaze-template";
 
 @Component({
-  template: 'Hello ListShow!'
+  directives: [BlazeTemplate],
+  template: `<blaze-template name="App_body" [context]="templateContext"></blaze-template>`
 })
 export class ListShowComponent {
+  private templateContext : any;
+
   constructor(params : RouteParams) {
     let listId = params.get("_id");
+
+    this.templateContext = {
+      main: "Lists_show_page",
+      _id: listId
+    };
   }
 }
\ No newline at end of file
-- 
2.6.4


From 7d84aa3dfb4ea924b34da5e1be21acd388d5eea8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 19:27:46 +0300
Subject: [PATCH 22/70] Step 5.3: Changed the way of getting the list ID

---
 imports/ui/pages/lists-show-page.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/pages/lists-show-page.js b/imports/ui/pages/lists-show-page.js
index 4287674..3e33194 100755
--- a/imports/ui/pages/lists-show-page.js
+++ b/imports/ui/pages/lists-show-page.js
@@ -11,7 +11,7 @@ import './app-not-found.js';
 import '../components/lists-show.js';
 
 Template.Lists_show_page.onCreated(function listsShowPageOnCreated() {
-  this.getListId = () => FlowRouter.getParam('_id');
+  this.getListId = () => this.data._id;;
 
   this.autorun(() => {
     this.subscribe('todos.inList', this.getListId());
-- 
2.6.4


From 4448efc62bf6f495a2d08b69d7ca74e89a103b66 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 10:55:50 +0300
Subject: [PATCH 23/70] Step 6.1: Migrate the App_body template

---
 client/imports/components/main-container.ng2.html | 48 +++++++++++++++++++++++
 1 file changed, 48 insertions(+)
 create mode 100644 client/imports/components/main-container.ng2.html

diff --git a/client/imports/components/main-container.ng2.html b/client/imports/components/main-container.ng2.html
new file mode 100644
index 0000000..d81e697
--- /dev/null
+++ b/client/imports/components/main-container.ng2.html
@@ -0,0 +1,48 @@
+<div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
+    <section id="menu">
+        <div *ngIf="currentUser" class="btns-group-vertical">
+            <a href="#" class="js-user-menu btn-secondary">
+                <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
+                <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
+
+                {{emailLocalPart()}}
+            </a>
+            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
+        </div>
+        <div *ngIf="!currentUser" class="btns-group">
+            <a href="SIGNIN_LINK" class="btn-secondary">Sign In</a>
+            <a href="JOIN_LINK" class="btn-secondary">Join</a>
+        </div>
+
+        <div class="list-todos">
+            <a class="js-new-list link-list-new">
+                <span class="icon-plus"></span>
+                New List
+            </a>
+
+            <a *ngFor="let list of lists" href="LIST_LINK" [title]="list.name"
+               class="list-todo" [ngClass]="{'active': isCurrentList(list)}">
+                <span *ngIf="list.userId" class="icon-lock"></span>
+                <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
+
+                {{list.name}}
+            </a>
+        </div>
+    </section>
+
+    <div *ngIf="!isConnected()" class="notifications">
+        <div class="notification">
+            <span class="icon-sync"></span>
+            <div class="meta">
+                <div class="title-notification">Trying to connect</div>
+                <div class="description">There seems to be a connection issue</div>
+            </div>
+        </div>
+    </div>
+
+    <div class="content-overlay"></div>
+
+    <div id="content-container">
+        <router-outlet></router-outlet>
+    </div>
+</div>
-- 
2.6.4


From d662fc0cd9808743a15446401ac31533471db8f5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 10:56:03 +0300
Subject: [PATCH 24/70] Step 6.2: Use the new template and added stub methods

---
 .../imports/components/main-container.component.ts | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 6ec1952..1e656f4 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -1,11 +1,11 @@
 import {Component} from "@angular/core";
 import {MeteorComponent} from "angular2-meteor";
 import {Lists} from "../../../imports/api/lists/lists.js";
-import {Router} from "@angular/router-deprecated";
+import {Router, ROUTER_DIRECTIVES} from "@angular/router-deprecated";
 
 @Component({
-  directives: [],
-  template: ''
+  directives: [ROUTER_DIRECTIVES],
+  templateUrl: '/client/imports/components/main-container.ng2.html'
 })
 export class MainContainerComponent extends MeteorComponent {
   constructor(router : Router) {
@@ -14,10 +14,22 @@ export class MainContainerComponent extends MeteorComponent {
     this.subscribe('lists.public');
     this.subscribe('lists.private');
 
-    this.autorun(() => {
+    /*this.autorun(() => {
       if (Lists.findOne()) {
         router.navigate(['ListShow', {_id: Lists.findOne()._id}]);
       }
-    });
+    });*/
+  }
+
+  isConnected() {
+
+  }
+
+  isCurrentList() {
+
+  }
+
+  emailLocalPart() {
+
   }
 }
\ No newline at end of file
-- 
2.6.4


From efaba8e9e1ff6a88bb0bb93f5ec474add3346143 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 10:58:24 +0300
Subject: [PATCH 25/70] Step 6.3: Added the list of todo lists

---
 client/imports/components/main-container.component.ts | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 1e656f4..1f9964c 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -2,23 +2,27 @@ import {Component} from "@angular/core";
 import {MeteorComponent} from "angular2-meteor";
 import {Lists} from "../../../imports/api/lists/lists.js";
 import {Router, ROUTER_DIRECTIVES} from "@angular/router-deprecated";
+import {Mongo} from "meteor/mongo";
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
   templateUrl: '/client/imports/components/main-container.ng2.html'
 })
 export class MainContainerComponent extends MeteorComponent {
-  constructor(router : Router) {
+  private lists : Mongo.Cursor;
+
+  constructor() {
     super();
 
     this.subscribe('lists.public');
     this.subscribe('lists.private');
 
-    /*this.autorun(() => {
-      if (Lists.findOne()) {
-        router.navigate(['ListShow', {_id: Lists.findOne()._id}]);
-      }
-    });*/
+    this.autorun(() => {
+      this.lists = Lists.find({ $or: [
+        { userId: { $exists: false } },
+        { userId: Meteor.userId() },
+      ] });
+    }, true);
   }
 
   isConnected() {
-- 
2.6.4


From ed04c09748b603099b1609a659c60e71fbf568dd Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 11:18:18 +0300
Subject: [PATCH 26/70] Step 6.4: Implemented isConnect

---
 client/imports/components/main-container.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 1f9964c..b870293 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -3,6 +3,7 @@ import {MeteorComponent} from "angular2-meteor";
 import {Lists} from "../../../imports/api/lists/lists.js";
 import {Router, ROUTER_DIRECTIVES} from "@angular/router-deprecated";
 import {Mongo} from "meteor/mongo";
+import {Meteor} from "meteor/meteor";
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
@@ -26,7 +27,7 @@ export class MainContainerComponent extends MeteorComponent {
   }
 
   isConnected() {
-
+    return Meteor.status().connected;
   }
 
   isCurrentList() {
-- 
2.6.4


From edbba9c297a94ea1c280c86e804a7156a4d65de1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 11:20:33 +0300
Subject: [PATCH 27/70] Step 6.5: Implemented emailLocalPart method

---
 client/imports/components/main-container.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index b870293..9774afe 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -35,6 +35,13 @@ export class MainContainerComponent extends MeteorComponent {
   }
 
   emailLocalPart() {
-
+    if (Meteor.user()) {
+      const email = Meteor.user().emails[0].address;
+
+      return email.substring(0, email.indexOf('@'));
+    }
+    else {
+      return "";
+    }
   }
 }
\ No newline at end of file
-- 
2.6.4


From 0294b78918ae18554f5269f463bb4ab00d3cd4a5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:00:02 +0300
Subject: [PATCH 28/70] Step 6.6: Added ability to create child routes

---
 client/main.ts | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/client/main.ts b/client/main.ts
index 362c403..9b4472e 100755
--- a/client/main.ts
+++ b/client/main.ts
@@ -12,8 +12,7 @@ import {ListShowComponent} from "./imports/components/list-show.component";
   template: `<router-outlet></router-outlet>`,
 })
 @RouteConfig([
-  {path: '/', name: 'Home', component: MainContainerComponent },
-  {path: '/lists/:_id', name: 'ListShow', component: ListShowComponent }
+  {path: '/...', name: 'Home', component: MainContainerComponent }
 ])
 class MainComponent {
   constructor() {}
-- 
2.6.4


From 7fc8afd781944a7328ecf0b6a6edeac2b6d3339d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:00:17 +0300
Subject: [PATCH 29/70] Step 6.7: Added the child route in the main page

---
 client/imports/components/main-container.component.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 9774afe..5d13731 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -1,14 +1,18 @@
 import {Component} from "@angular/core";
 import {MeteorComponent} from "angular2-meteor";
 import {Lists} from "../../../imports/api/lists/lists.js";
-import {Router, ROUTER_DIRECTIVES} from "@angular/router-deprecated";
+import {Router, ROUTER_DIRECTIVES, RouteConfig} from "@angular/router-deprecated";
 import {Mongo} from "meteor/mongo";
 import {Meteor} from "meteor/meteor";
+import {ListShowComponent} from "./list-show.component";
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
   templateUrl: '/client/imports/components/main-container.ng2.html'
 })
+@RouteConfig([
+  {path: 'lists/:_id', name: 'ListShow', component: ListShowComponent }
+])
 export class MainContainerComponent extends MeteorComponent {
   private lists : Mongo.Cursor;
 
-- 
2.6.4


From 8a5f695766506920e2f9fa9429b2527b2220e351 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:01:30 +0300
Subject: [PATCH 30/70] Step 6.8: Update the list show component to load the
 child Template

---
 client/imports/components/list-show.component.ts | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 42202bf..cc2ddac 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -4,7 +4,7 @@ import {BlazeTemplate} from "angular2-blaze-template";
 
 @Component({
   directives: [BlazeTemplate],
-  template: `<blaze-template name="App_body" [context]="templateContext"></blaze-template>`
+  template: `<blaze-template name="Lists_show_page" [context]="templateContext"></blaze-template>`
 })
 export class ListShowComponent {
   private templateContext : any;
@@ -13,7 +13,6 @@ export class ListShowComponent {
     let listId = params.get("_id");
 
     this.templateContext = {
-      main: "Lists_show_page",
       _id: listId
     };
   }
-- 
2.6.4


From 4e882ef35a4ed7dd67defe88485ea2eada8b61b6 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:25:08 +0300
Subject: [PATCH 31/70] Step 6.9: Added default route for redirection

---
 client/imports/components/main-container.component.ts | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 5d13731..09f01dd 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -5,18 +5,20 @@ import {Router, ROUTER_DIRECTIVES, RouteConfig} from "@angular/router-deprecated
 import {Mongo} from "meteor/mongo";
 import {Meteor} from "meteor/meteor";
 import {ListShowComponent} from "./list-show.component";
+import {ListRedirectorComponent} from "./list-redirector.component";
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
   templateUrl: '/client/imports/components/main-container.ng2.html'
 })
 @RouteConfig([
-  {path: 'lists/:_id', name: 'ListShow', component: ListShowComponent }
+  {path: 'lists/:_id', name: 'ListShow', component: ListShowComponent },
+  {path: '', name: 'ListRedirector', component: ListRedirectorComponent, useAsDefault: true}
 ])
 export class MainContainerComponent extends MeteorComponent {
   private lists : Mongo.Cursor;
 
-  constructor() {
+  constructor(private router : Router) {
     super();
 
     this.subscribe('lists.public');
-- 
2.6.4


From 6afb600d2aa6697e5e9a41ed743e452d78dcb419 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:25:22 +0300
Subject: [PATCH 32/70] Step 6.10: Added the list redirector component

---
 .../imports/components/list-redirector.component.ts  | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 client/imports/components/list-redirector.component.ts

diff --git a/client/imports/components/list-redirector.component.ts b/client/imports/components/list-redirector.component.ts
new file mode 100644
index 0000000..a08e2ae
--- /dev/null
+++ b/client/imports/components/list-redirector.component.ts
@@ -0,0 +1,20 @@
+import {Component} from "@angular/core";
+import {Router} from "@angular/router-deprecated";
+import {Lists} from "../../../imports/api/lists/lists.js";
+import {MeteorComponent} from "angular2-meteor/build/index";
+
+@Component({
+  directives: [],
+  template: 'T'
+})
+export class ListRedirectorComponent extends MeteorComponent {
+  constructor(router : Router) {
+    super();
+
+    this.autorun(() => {
+      if (Lists.findOne()) {
+        router.navigate(['ListShow', {_id: Lists.findOne()._id}]);
+      }
+    }, true);
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 2376e2e2db202f0d6965a3c2aa8689a21ec44db7 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:34:11 +0300
Subject: [PATCH 33/70] Step 6.11: Implemented the isCurrentList logic

---
 client/imports/components/main-container.component.ts | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 09f01dd..01ddde0 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -17,6 +17,9 @@ import {ListRedirectorComponent} from "./list-redirector.component";
 ])
 export class MainContainerComponent extends MeteorComponent {
   private lists : Mongo.Cursor;
+  private isCordova : boolean;
+  private menuOpen : boolean = false;
+  private userMenuOpen : boolean = false;
 
   constructor(private router : Router) {
     super();
@@ -24,6 +27,8 @@ export class MainContainerComponent extends MeteorComponent {
     this.subscribe('lists.public');
     this.subscribe('lists.private');
 
+    this.isCordova = Meteor.isCordova;
+
     this.autorun(() => {
       this.lists = Lists.find({ $or: [
         { userId: { $exists: false } },
@@ -36,8 +41,12 @@ export class MainContainerComponent extends MeteorComponent {
     return Meteor.status().connected;
   }
 
-  isCurrentList() {
+  isCurrentList(list) {
+    if (this.router.currentInstruction) {
+      let currentRouteParams = this.router.currentInstruction.component.params;
 
+      return currentRouteParams._id === list._id;
+    }
   }
 
   emailLocalPart() {
-- 
2.6.4


From 37aa8de081e22e7c609b427dc99cd25c4c9e2750 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:48:06 +0300
Subject: [PATCH 34/70] Step 6.12: Added the routers link in the HTML file

---
 client/imports/components/main-container.ng2.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/client/imports/components/main-container.ng2.html b/client/imports/components/main-container.ng2.html
index d81e697..fdb9378 100644
--- a/client/imports/components/main-container.ng2.html
+++ b/client/imports/components/main-container.ng2.html
@@ -10,8 +10,8 @@
             <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
         </div>
         <div *ngIf="!currentUser" class="btns-group">
-            <a href="SIGNIN_LINK" class="btn-secondary">Sign In</a>
-            <a href="JOIN_LINK" class="btn-secondary">Join</a>
+            <a [routerLink]="['Signin']" class="btn-secondary">Sign In</a>
+            <a [routerLink]="['Join']" class="btn-secondary">Join</a>
         </div>
 
         <div class="list-todos">
@@ -20,7 +20,7 @@
                 New List
             </a>
 
-            <a *ngFor="let list of lists" href="LIST_LINK" [title]="list.name"
+            <a *ngFor="let list of lists" [routerLink]="['ListShow', {_id: list._id}]" [title]="list.name"
                class="list-todo" [ngClass]="{'active': isCurrentList(list)}">
                 <span *ngIf="list.userId" class="icon-lock"></span>
                 <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
-- 
2.6.4


From 1dd7191cf2db1d75a02e82617ad33d2626946b5b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:48:20 +0300
Subject: [PATCH 35/70] Step 6.13: Added the routes definitions

---
 client/imports/components/main-container.component.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 01ddde0..5df273a 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -6,6 +6,8 @@ import {Mongo} from "meteor/mongo";
 import {Meteor} from "meteor/meteor";
 import {ListShowComponent} from "./list-show.component";
 import {ListRedirectorComponent} from "./list-redirector.component";
+import {JoinComponent} from "./join.component";
+import {SigninComponent} from "./signin.component";
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
@@ -13,7 +15,9 @@ import {ListRedirectorComponent} from "./list-redirector.component";
 })
 @RouteConfig([
   {path: 'lists/:_id', name: 'ListShow', component: ListShowComponent },
-  {path: '', name: 'ListRedirector', component: ListRedirectorComponent, useAsDefault: true}
+  {path: '', name: 'ListRedirector', component: ListRedirectorComponent, useAsDefault: true},
+  {path: 'join', name: 'Join', component: JoinComponent},
+  {path: 'signin', name: 'Signin', component: SigninComponent}
 ])
 export class MainContainerComponent extends MeteorComponent {
   private lists : Mongo.Cursor;
-- 
2.6.4


From 07854ea82996c74158a2c1056dd69a867debf957 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:48:46 +0300
Subject: [PATCH 36/70] Step 6.14: Added stubs for signin/join components

---
 client/imports/components/join.component.ts   | 12 ++++++++++++
 client/imports/components/signin.component.ts | 12 ++++++++++++
 2 files changed, 24 insertions(+)
 create mode 100644 client/imports/components/join.component.ts
 create mode 100644 client/imports/components/signin.component.ts

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
new file mode 100644
index 0000000..d509962
--- /dev/null
+++ b/client/imports/components/join.component.ts
@@ -0,0 +1,12 @@
+import {Component} from "@angular/core";
+import {MeteorComponent} from "angular2-meteor/build/index";
+
+@Component({
+  directives: [],
+  template: 'Join!'
+})
+export class JoinComponent extends MeteorComponent {
+  constructor() {
+    super();
+  }
+}
\ No newline at end of file
diff --git a/client/imports/components/signin.component.ts b/client/imports/components/signin.component.ts
new file mode 100644
index 0000000..273f990
--- /dev/null
+++ b/client/imports/components/signin.component.ts
@@ -0,0 +1,12 @@
+import {Component} from "@angular/core";
+import {MeteorComponent} from "angular2-meteor/build/index";
+
+@Component({
+  directives: [],
+  template: 'Signin!'
+})
+export class SigninComponent extends MeteorComponent {
+  constructor() {
+    super();
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 69334479f60cbcf45bd92dfccead1c172b4dd204 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:54:48 +0300
Subject: [PATCH 37/70] Step 6.15: Added addNewList method to the main
 component

---
 client/imports/components/main-container.component.ts | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 5df273a..64e0dff 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -8,6 +8,8 @@ import {ListShowComponent} from "./list-show.component";
 import {ListRedirectorComponent} from "./list-redirector.component";
 import {JoinComponent} from "./join.component";
 import {SigninComponent} from "./signin.component";
+import { insert } from '../../../imports/api/lists/methods.js';
+
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
@@ -63,4 +65,15 @@ export class MainContainerComponent extends MeteorComponent {
       return "";
     }
   }
+
+  addNewList() {
+    const listId = insert.call((err) => {
+      if (err) {
+        this.router.navigate(['Home']);
+        alert('Could not create list.');
+      }
+    });
+
+    this.router.navigate(['ListShow', {_id: listId}]);
+  }
 }
\ No newline at end of file
-- 
2.6.4


From c103553805397c322d001d3b8500b467a317fa21 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:55:11 +0300
Subject: [PATCH 38/70] Step 6.16: Added click action to the new list button

---
 client/imports/components/main-container.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.ng2.html b/client/imports/components/main-container.ng2.html
index fdb9378..fc3da0d 100644
--- a/client/imports/components/main-container.ng2.html
+++ b/client/imports/components/main-container.ng2.html
@@ -15,7 +15,7 @@
         </div>
 
         <div class="list-todos">
-            <a class="js-new-list link-list-new">
+            <a class="js-new-list link-list-new" (click)="addNewList()">
                 <span class="icon-plus"></span>
                 New List
             </a>
-- 
2.6.4


From b97b5e611ed8bddad8136aabd918b25934e78ce8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:58:50 +0300
Subject: [PATCH 39/70] Step 6.17: Added logout method

---
 client/imports/components/main-container.component.ts | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 64e0dff..720496b 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -76,4 +76,20 @@ export class MainContainerComponent extends MeteorComponent {
 
     this.router.navigate(['ListShow', {_id: listId}]);
   }
+
+  logout() {
+    Meteor.logout();
+
+    if (this.router.currentInstruction) {
+      let currentRouteParams = this.router.currentInstruction.component.params;
+
+      if (currentRouteParams._id) {
+        const list = Lists.findOne(currentRouteParams._id);
+
+        if (list.userId) {
+          this.router.navigate(['ListShow', {_id: Lists.findOne({ userId: { $exists: false } })._id}]);
+        }
+      }
+    }
+  }
 }
\ No newline at end of file
-- 
2.6.4


From d8a0c74f3fb12f95f858733c24e5644f723d9d01 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 12:59:01 +0300
Subject: [PATCH 40/70] Step 6.18: Added logout click action

---
 client/imports/components/main-container.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.ng2.html b/client/imports/components/main-container.ng2.html
index fc3da0d..a35bc92 100644
--- a/client/imports/components/main-container.ng2.html
+++ b/client/imports/components/main-container.ng2.html
@@ -7,7 +7,7 @@
 
                 {{emailLocalPart()}}
             </a>
-            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
+            <a *ngIf="userMenuOpen" class="js-logout btn-secondary" (click)="logout()">Logout</a>
         </div>
         <div *ngIf="!currentUser" class="btns-group">
             <a [routerLink]="['Signin']" class="btn-secondary">Sign In</a>
-- 
2.6.4


From 430fd19e99c2af65ca62aceac7bf0c57e726c78f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 17:04:50 +0300
Subject: [PATCH 41/70] Step 6.19: Removed App_body and root_director templates

---
 imports/startup/client/routes.js      |   2 -
 imports/ui/layouts/app-body.html      |  75 -------------------
 imports/ui/layouts/app-body.js        | 136 ----------------------------------
 imports/ui/pages/root-redirector.html |   2 -
 imports/ui/pages/root-redirector.js   |  14 ----
 5 files changed, 229 deletions(-)
 delete mode 100755 imports/ui/layouts/app-body.html
 delete mode 100755 imports/ui/layouts/app-body.js
 delete mode 100755 imports/ui/pages/root-redirector.html
 delete mode 100755 imports/ui/pages/root-redirector.js

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 5bebb6e..4213bc4 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -3,8 +3,6 @@ import { BlazeLayout } from 'meteor/kadira:blaze-layout';
 import { AccountsTemplates } from 'meteor/useraccounts:core';
 
 // Import to load these templates
-import '../../ui/layouts/app-body.js';
-import '../../ui/pages/root-redirector.js';
 import '../../ui/pages/lists-show-page.js';
 import '../../ui/pages/app-not-found.js';
 
diff --git a/imports/ui/layouts/app-body.html b/imports/ui/layouts/app-body.html
deleted file mode 100755
index 96756fe..0000000
--- a/imports/ui/layouts/app-body.html
+++ /dev/null
@@ -1,75 +0,0 @@
-<template name="App_body">
-  {{#HammerTouchArea gestureMap=templateGestures}}
-    <div id="container" class="{{menuOpen}} {{cordova}}">
-      <section id="menu">
-        {{#if currentUser}}
-          <div class="btns-group-vertical">
-            <a href="#" class="js-user-menu btn-secondary">
-              {{#if userMenuOpen}}
-                <span class="icon-arrow-up"></span>
-                {{else}}
-                <span class="icon-arrow-down"></span>
-              {{/if}}
-
-              {{emailLocalPart}}
-            </a>
-            {{#if userMenuOpen}}
-              <a class="js-logout btn-secondary">{{_ 'Logout'}}</a>
-            {{/if}}
-          </div>
-        {{else}}
-          <div class="btns-group">
-            <a href="{{pathFor 'signin'}}" class="btn-secondary">{{_ 'Sign In'}}</a>
-            <a href="{{pathFor 'join'}}" class="btn-secondary">{{_ 'Join'}}</a>
-          </div>
-        {{/if}}
-
-        <div class="list-todos">
-          <a class="js-new-list link-list-new">
-            <span class="icon-plus"></span>
-            {{_ "New List"}}
-          </a>
-
-          {{#each list in lists}}
-            <a href="{{pathFor 'Lists.show' _id=list._id}}" title="{{list.name}}"
-                class="list-todo {{activeListClass list}}">
-              {{#if list.userId}}
-                <span class="icon-lock"></span>
-              {{/if}}
-
-              {{#if list.incompleteCount}}
-                <span class="count-list">{{list.incompleteCount}}</span>
-              {{/if}}
-
-              {{list.name}}
-            </a>
-          {{/each}}
-        </div>
-      </section>
-
-      {{#unless connected}}
-        <div class="notifications">
-          <div class="notification">
-            <span class="icon-sync"></span>
-            <div class="meta">
-              <div class="title-notification">Trying to connect</div>
-              <div class="description">There seems to be a connection issue</div>
-            </div>
-          </div>
-        </div>
-      {{/unless}}
-
-      <div class="content-overlay"></div>
-
-      <div id="content-container">
-        {{#momentum plugin="fade"}}
-          {{#if Template.subscriptionsReady}}
-            {{> Template.dynamic template=main}}
-          {{else}}
-            {{> App_loading}}
-          {{/if}}
-        {{/momentum}}
-      </div>
-    </div>
-  {{/HammerTouchArea}}
-</template>
diff --git a/imports/ui/layouts/app-body.js b/imports/ui/layouts/app-body.js
deleted file mode 100755
index f90a3a3..0000000
--- a/imports/ui/layouts/app-body.js
+++ /dev/null
@@ -1,136 +0,0 @@
-import './app-body.html';
-
-import { Meteor } from 'meteor/meteor';
-import { ReactiveVar } from 'meteor/reactive-var';
-import { ReactiveDict } from 'meteor/reactive-dict';
-import { Lists } from '../../api/lists/lists.js';
-import { Template } from 'meteor/templating';
-import { ActiveRoute } from 'meteor/zimme:active-route';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { TAPi18n } from 'meteor/tap:i18n';
-
-import { insert } from '../../api/lists/methods.js';
-
-import '../components/loading.js';
-
-const CONNECTION_ISSUE_TIMEOUT = 5000;
-
-// A store which is local to this file?
-const showConnectionIssue = new ReactiveVar(false);
-
-Meteor.startup(() => {
-  // Only show the connection error box if it has been 5 seconds since
-  // the app started
-  setTimeout(() => {
-    // FIXME:
-    // Launch screen handle created in lib/router.js
-    // dataReadyHold.release();
-
-    // Show the connection error box
-    showConnectionIssue.set(true);
-  }, CONNECTION_ISSUE_TIMEOUT);
-});
-
-Template.App_body.onCreated(function appBodyOnCreated() {
-  this.subscribe('lists.public');
-  this.subscribe('lists.private');
-
-  this.state = new ReactiveDict();
-  this.state.setDefault({
-    menuOpen: false,
-    userMenuOpen: false,
-  });
-});
-
-Template.App_body.helpers({
-  menuOpen() {
-    const instance = Template.instance();
-    return instance.state.get('menuOpen') && 'menu-open';
-  },
-  cordova() {
-    return Meteor.isCordova && 'cordova';
-  },
-  emailLocalPart() {
-    const email = Meteor.user().emails[0].address;
-    return email.substring(0, email.indexOf('@'));
-  },
-  userMenuOpen() {
-    const instance = Template.instance();
-    return instance.state.get('userMenuOpen');
-  },
-  lists() {
-    return Lists.find({ $or: [
-      { userId: { $exists: false } },
-      { userId: Meteor.userId() },
-    ] });
-  },
-  activeListClass(list) {
-    const active = ActiveRoute.name('Lists.show')
-      && FlowRouter.getParam('_id') === list._id;
-
-    return active && 'active';
-  },
-  connected() {
-    if (showConnectionIssue.get()) {
-      return Meteor.status().connected;
-    }
-
-    return true;
-  },
-  templateGestures: {
-    'swipeleft .cordova'(event, instance) {
-      instance.state.set('menuOpen', false);
-    },
-    'swiperight .cordova'(event, instance) {
-      instance.state.set('menuOpen', true);
-    },
-  },
-});
-
-Template.App_body.events({
-  'click .js-menu'(event, instance) {
-    instance.state.set('menuOpen', !instance.state.get('menuOpen'));
-  },
-
-  'click .content-overlay'(event, instance) {
-    instance.state.set('menuOpen', false);
-    event.preventDefault();
-  },
-
-  'click .js-user-menu'(event, instance) {
-    instance.state.set('userMenuOpen', !instance.state.get('userMenuOpen'));
-    // stop the menu from closing
-    event.stopImmediatePropagation();
-  },
-
-  'click #menu a'(event, instance) {
-    instance.state.set('menuOpen', false);
-  },
-
-  'click .js-logout'() {
-    Meteor.logout();
-
-    // if we are on a private list, we'll need to go to a public one
-    if (ActiveRoute.name('Lists.show')) {
-      // TODO -- test this code path
-      const list = Lists.findOne(FlowRouter.getParam('_id'));
-      if (list.userId) {
-        FlowRouter.go('Lists.show', Lists.findOne({ userId: { $exists: false } }));
-      }
-    }
-  },
-
-  'click .js-new-list'() {
-    const listId = insert.call((err) => {
-      if (err) {
-        // At this point, we have already redirected to the new list page, but
-        // for some reason the list didn't get created. This should almost never
-        // happen, but it's good to handle it anyway.
-        FlowRouter.go('App.home');
-        alert(TAPi18n.__('Could not create list.')); // eslint-disable-line no-alert
-      }
-    });
-
-    FlowRouter.go('Lists.show', { _id: listId });
-  },
-});
diff --git a/imports/ui/pages/root-redirector.html b/imports/ui/pages/root-redirector.html
deleted file mode 100755
index f4911b9..0000000
--- a/imports/ui/pages/root-redirector.html
+++ /dev/null
@@ -1,2 +0,0 @@
-<template name="app_rootRedirector">
-</template>
\ No newline at end of file
diff --git a/imports/ui/pages/root-redirector.js b/imports/ui/pages/root-redirector.js
deleted file mode 100755
index 5cb98d9..0000000
--- a/imports/ui/pages/root-redirector.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Template } from 'meteor/templating';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { Lists } from '../../api/lists/lists.js';
-
-import './root-redirector.html';
-
-Template.app_rootRedirector.onCreated(() => {
-  // We need to set a timeout here so that we don't redirect from inside a redirection
-  //   which is a no-no in FR.
-  Meteor.defer(() => {
-    FlowRouter.go('Lists.show', Lists.findOne());
-  });
-});
-- 
2.6.4


From 01528f775cba6f923f936b6a196fb71ea17d37b4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 14:53:41 +0300
Subject: [PATCH 42/70] Step 7.1: Take the layout of the join form

---
 client/imports/components/join.ng2.html | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 client/imports/components/join.ng2.html

diff --git a/client/imports/components/join.ng2.html b/client/imports/components/join.ng2.html
new file mode 100644
index 0000000..fbbd088
--- /dev/null
+++ b/client/imports/components/join.ng2.html
@@ -0,0 +1,24 @@
+<div class="page auth">
+    <nav>
+        <div class="nav-group">
+            <a href="#" class="js-menu nav-item">
+                <span class="icon-list-unordered"></span>
+            </a>
+        </div>
+    </nav>
+
+    <div class="content-scrollable">
+        <div class="wrapper-auth">
+            <div class="at-form">
+                <h1 class="title-auth">Join</h1>
+                <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="at-pwd-form">
+                    <form role="form" id="at-pwd-form">
+
+                    </form>
+                </div>
+            </div>
+
+        </div>
+    </div>
+</div>
\ No newline at end of file
-- 
2.6.4


From ead20a7a965319975ac1e3cc9dc9d5d9e772e7d5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 14:53:55 +0300
Subject: [PATCH 43/70] Step 7.2: Use the new template

---
 client/imports/components/join.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
index d509962..979f1a7 100644
--- a/client/imports/components/join.component.ts
+++ b/client/imports/components/join.component.ts
@@ -3,7 +3,7 @@ import {MeteorComponent} from "angular2-meteor/build/index";
 
 @Component({
   directives: [],
-  template: 'Join!'
+  templateUrl: '/client/imports/components/join.ng2.html'
 })
 export class JoinComponent extends MeteorComponent {
   constructor() {
-- 
2.6.4


From 893bc190af79acea0f920bee2f8441ae0b1f409a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 16:47:20 +0300
Subject: [PATCH 44/70] Step 7.3: Added the join form HTML

---
 client/imports/components/join.ng2.html | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/client/imports/components/join.ng2.html b/client/imports/components/join.ng2.html
index fbbd088..fd16b02 100644
--- a/client/imports/components/join.ng2.html
+++ b/client/imports/components/join.ng2.html
@@ -6,19 +6,31 @@
             </a>
         </div>
     </nav>
-
     <div class="content-scrollable">
         <div class="wrapper-auth">
             <div class="at-form">
                 <h1 class="title-auth">Join</h1>
                 <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="list-errors">
+                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
+                </div>
                 <div class="at-pwd-form">
-                    <form role="form" id="at-pwd-form">
-
+                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
+                        <div class="input">
+                            <input [(ngModel)]="model.email" ngControl="email" #email="ngForm" type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.password" ngControl="password" #password="ngForm" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.passwordVerify" ngControl="passwordVerify" #passwordVerify="ngForm" required type="password" id="password_verify" class="form-control" name="password_verify" placeholder="Password (Again)" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
+                            REGISTER
+                        </button>
                     </form>
                 </div>
             </div>
-
         </div>
     </div>
 </div>
\ No newline at end of file
-- 
2.6.4


From a6f4a1e28b28d720cd3987148257c09490c1f4c6 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 16:47:41 +0300
Subject: [PATCH 45/70] Step 7.4: Added the logic for join component

---
 client/imports/components/join.component.ts | 42 ++++++++++++++++++++++++++++-
 1 file changed, 41 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
index 979f1a7..fbf7c5c 100644
--- a/client/imports/components/join.component.ts
+++ b/client/imports/components/join.component.ts
@@ -1,12 +1,52 @@
 import {Component} from "@angular/core";
 import {MeteorComponent} from "angular2-meteor/build/index";
+import {Accounts} from "meteor/accounts-base";
+import {Router} from "@angular/router-deprecated";
+
+class JoinModel {
+  constructor(public email : string, public password : string, public passwordVerify : string) {
+
+  }
+}
 
 @Component({
   directives: [],
   templateUrl: '/client/imports/components/join.ng2.html'
 })
 export class JoinComponent extends MeteorComponent {
-  constructor() {
+  private model : JoinModel;
+  private errors : Array<string> = [];
+
+  constructor(private router : Router) {
     super();
+
+    this.model = new JoinModel('', '', '');
+  }
+
+  resetErrors() {
+    this.errors = [];
+  }
+
+  join() {
+    this.resetErrors();
+
+    if (this.model.password !== this.model.passwordVerify) {
+      this.errors.push("Passwords does not match!");
+
+      return;
+    }
+
+    Accounts.createUser({
+      email: this.model.email,
+      password: this.model.email
+    }, (err) => {
+      if (err) {
+        this.errors.push(err.reason);
+
+        return;
+      }
+
+      this.router.root.navigate(['Home']);
+    });
   }
 }
\ No newline at end of file
-- 
2.6.4


From 6c1bab196ba03c8f5d2e933644411733acd62272 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 16:48:11 +0300
Subject: [PATCH 46/70] Step 7.5: Removed Blaze accounts packages

---
 .meteor/packages                                   |  3 --
 .meteor/versions                                   |  4 --
 imports/startup/client/index.js                    |  1 -
 imports/startup/client/routes.js                   | 46 +---------------------
 .../startup/client/useraccounts-configuration.js   | 20 ----------
 5 files changed, 1 insertion(+), 73 deletions(-)
 delete mode 100755 imports/startup/client/useraccounts-configuration.js

diff --git a/.meteor/packages b/.meteor/packages
index d706fec..7ff072c 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -42,9 +42,6 @@ tap:i18n
 
 # accounts
 accounts-password
-useraccounts:unstyled
-useraccounts:flow-routing
-softwarerero:accounts-t9n
 
 # mobile
 crosswalk
diff --git a/.meteor/versions b/.meteor/versions
index 8fcc2c6..78e859b 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -116,7 +116,6 @@ simple:rest@1.1.1
 simple:rest-accounts-password@1.1.2
 simple:rest-bearer-token-parser@1.0.1
 simple:rest-json-error-handler@1.0.1
-softwarerero:accounts-t9n@1.3.4
 spacebars@1.0.12
 spacebars-compiler@1.0.12
 srp@1.0.9
@@ -129,9 +128,6 @@ tracker@1.0.14
 ui@1.0.11
 underscore@1.0.9
 url@1.0.10
-useraccounts:core@1.14.2
-useraccounts:flow-routing@1.14.2
-useraccounts:unstyled@1.14.2
 webapp@1.2.9
 webapp-hashing@1.0.9
 xolvio:cleaner@0.3.1
diff --git a/imports/startup/client/index.js b/imports/startup/client/index.js
index a36a1b1..b0b0f47 100755
--- a/imports/startup/client/index.js
+++ b/imports/startup/client/index.js
@@ -1,2 +1 @@
-import './useraccounts-configuration.js';
 import './routes.js';
diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 4213bc4..dbd1a96 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -1,50 +1,6 @@
 import { FlowRouter } from 'meteor/kadira:flow-router';
 import { BlazeLayout } from 'meteor/kadira:blaze-layout';
-import { AccountsTemplates } from 'meteor/useraccounts:core';
 
 // Import to load these templates
 import '../../ui/pages/lists-show-page.js';
-import '../../ui/pages/app-not-found.js';
-
-// Import to override accounts templates
-import '../../ui/accounts/accounts-templates.js';
-
-/*
-FlowRouter.route('/lists/:_id', {
-  name: 'Lists.show',
-  action() {
-    BlazeLayout.render('App_body', { main: 'Lists_show_page' });
-  },
-});
-
-FlowRouter.route('/', {
-  name: 'App.home',
-  action() {
-    BlazeLayout.render('App_body', { main: 'app_rootRedirector' });
-  },
-});
-
-// the App_notFound template is used for unknown routes and missing lists
-FlowRouter.notFound = {
-  action() {
-    BlazeLayout.render('App_body', { main: 'App_notFound' });
-  },
-};
-
-AccountsTemplates.configureRoute('signIn', {
-  name: 'signin',
-  path: '/signin',
-});
-
-AccountsTemplates.configureRoute('signUp', {
-  name: 'join',
-  path: '/join',
-});
-
-AccountsTemplates.configureRoute('forgotPwd');
-
-AccountsTemplates.configureRoute('resetPwd', {
-  name: 'resetPwd',
-  path: '/reset-password',
-});
-*/
\ No newline at end of file
+import '../../ui/pages/app-not-found.js';
\ No newline at end of file
diff --git a/imports/startup/client/useraccounts-configuration.js b/imports/startup/client/useraccounts-configuration.js
deleted file mode 100755
index a24d28c..0000000
--- a/imports/startup/client/useraccounts-configuration.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import { AccountsTemplates } from 'meteor/useraccounts:core';
-import { TAPi18n } from 'meteor/tap:i18n';
-
-AccountsTemplates.configure({
-  showForgotPasswordLink: true,
-  texts: {
-    errors: {
-      loginForbidden: TAPi18n.__('Incorrect username or password'),
-      pwdMismatch: TAPi18n.__('Passwords don\'t match'),
-    },
-    title: {
-      signIn: TAPi18n.__('Sign In'),
-      signUp: TAPi18n.__('Join'),
-    },
-  },
-  defaultTemplate: 'Auth_page',
-  defaultLayout: 'App_body',
-  defaultContentRegion: 'main',
-  defaultLayoutRegions: {},
-});
-- 
2.6.4


From 7d02e08274ec688405a27563b9dc50044e801e3f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 16:49:58 +0300
Subject: [PATCH 47/70] Step 7.6: Added current user to the main page

---
 client/imports/components/main-container.component.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 720496b..1333107 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -26,6 +26,7 @@ export class MainContainerComponent extends MeteorComponent {
   private isCordova : boolean;
   private menuOpen : boolean = false;
   private userMenuOpen : boolean = false;
+  private currentUser : Meteor.User;
 
   constructor(private router : Router) {
     super();
@@ -40,6 +41,8 @@ export class MainContainerComponent extends MeteorComponent {
         { userId: { $exists: false } },
         { userId: Meteor.userId() },
       ] });
+
+      this.currentUser = Meteor.user();
     }, true);
   }
 
-- 
2.6.4


From b11dc184bec9fc1c1f3baf4cf4479719060f9b28 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 16:51:22 +0300
Subject: [PATCH 48/70] Step 7.7: Fix the user menu toggle

---
 client/imports/components/main-container.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/main-container.ng2.html b/client/imports/components/main-container.ng2.html
index a35bc92..0ff0645 100644
--- a/client/imports/components/main-container.ng2.html
+++ b/client/imports/components/main-container.ng2.html
@@ -1,7 +1,7 @@
 <div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
     <section id="menu">
         <div *ngIf="currentUser" class="btns-group-vertical">
-            <a href="#" class="js-user-menu btn-secondary">
+            <a class="js-user-menu btn-secondary" (click)="userMenuOpen = !userMenuOpen">
                 <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
                 <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
 
-- 
2.6.4


From 981007d86d2744e7d21eead54db2bb6477490238 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 17:00:21 +0300
Subject: [PATCH 49/70] Step 7.8: Added sign in template HTML

---
 client/imports/components/signin.ng2.html | 33 +++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)
 create mode 100644 client/imports/components/signin.ng2.html

diff --git a/client/imports/components/signin.ng2.html b/client/imports/components/signin.ng2.html
new file mode 100644
index 0000000..5c71bfa
--- /dev/null
+++ b/client/imports/components/signin.ng2.html
@@ -0,0 +1,33 @@
+<div class="page auth">
+    <nav>
+        <div class="nav-group">
+            <a href="#" class="js-menu nav-item">
+                <span class="icon-list-unordered"></span>
+            </a>
+        </div>
+    </nav>
+    <div class="content-scrollable">
+        <div class="wrapper-auth">
+            <div class="at-form">
+                <h1 class="title-auth">Signin</h1>
+                <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="list-errors">
+                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
+                </div>
+                <div class="at-pwd-form">
+                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
+                        <div class="input">
+                            <input [(ngModel)]="model.email" ngControl="email" #email="ngForm" type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.password" ngControl="password" #password="ngForm" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
+                            SIGN IN
+                        </button>
+                    </form>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
-- 
2.6.4


From b0701f44408f34b6b07416b971e8d2c424925851 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 17:00:30 +0300
Subject: [PATCH 50/70] Step 7.9: Added sign in component login

---
 client/imports/components/signin.component.ts | 34 +++++++++++++++++++++++++--
 1 file changed, 32 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/signin.component.ts b/client/imports/components/signin.component.ts
index 273f990..fe90288 100644
--- a/client/imports/components/signin.component.ts
+++ b/client/imports/components/signin.component.ts
@@ -1,12 +1,42 @@
 import {Component} from "@angular/core";
 import {MeteorComponent} from "angular2-meteor/build/index";
+import {Router} from "@angular/router-deprecated";
+
+class SigninModel {
+  constructor(public email : string, public password : string) {
+
+  }
+}
 
 @Component({
   directives: [],
-  template: 'Signin!'
+  templateUrl: '/client/imports/components/signin.ng2.html'
 })
 export class SigninComponent extends MeteorComponent {
-  constructor() {
+  private model : SigninModel;
+  private errors : Array<string> = [];
+
+  constructor(private router : Router) {
     super();
+
+    this.model = new SigninModel('', '');
+  }
+
+  resetErrors() {
+    this.errors = [];
+  }
+
+  join() {
+    this.resetErrors();
+
+    Meteor.loginWithPassword(this.model.email, this.model.password, (err) => {
+      if (err) {
+        this.errors.push(err.reason);
+
+        return;
+      }
+
+      this.router.root.navigate(['Home']);
+    });
   }
 }
\ No newline at end of file
-- 
2.6.4


From 2ffd1382d30e1838eea418337d1f311818f44e09 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 17:55:17 +0300
Subject: [PATCH 51/70] Step 8.1: Migrate the list show template

---
 client/imports/components/list-show.ng2.html | 65 ++++++++++++++++++++++++++++
 1 file changed, 65 insertions(+)
 create mode 100644 client/imports/components/list-show.ng2.html

diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
new file mode 100644
index 0000000..6b99a25
--- /dev/null
+++ b/client/imports/components/list-show.ng2.html
@@ -0,0 +1,65 @@
+<div class="page lists-show">
+    <nav class="js-title-nav" *ngIf="list">
+        <form *ngIf="editing" class="js-edit-form list-edit-form">
+            <input type="text" name="name" [value]="editModel.name">
+            <div class="nav-group right">
+                <a href="#" class="js-cancel nav-item">
+                    <span class="icon-close js-cancel" title="Cancel"></span>
+                </a>
+            </div>
+        </form>
+        <div *ngIf="!editing">
+            <div class="nav-group">
+                <a href="#" class="js-menu nav-item">
+                    <span class="icon-list-unordered" title="Show Menu"></span>
+                </a>
+            </div>
+
+            <h1 class="js-edit-list title-page">
+                <span class="title-wrapper">{{list.name}}</span>
+                <span class="count-list">{{list.incompleteCount}}</span>
+            </h1>
+
+            <div class="nav-group right">
+                <div class="nav-item options-mobile">
+                    <select class="list-edit">
+                        <option disabled selected>Select an action</option>
+                        <option *ngIf="list.userId" value="public">Make Public</option>
+                        <option *ngIf="!list.userId" value="private">Make Private</option>
+                        <option value="delete">Delete</option>
+                    </select>
+                    <span class="icon-cog"></span>
+                </div>
+                <div class="options-web">
+                    <a class="js-toggle-list-privacy nav-item">
+                        <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
+                        <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
+                    </a>
+                    <a class="js-delete-list nav-item">
+                        <span class="icon-trash" title="Delete list"></span>
+                    </a>
+                </div>
+            </div>
+        </div>
+
+        <form class="js-todo-new todo-new input-symbol">
+            <input type="text" placeholder="Type to add new tasks">
+            <span class="icon-add js-todo-add"></span>
+        </form>
+    </nav>
+
+    <div class="content-scrollable list-items">
+        <div *ngIf="todosReady">
+            <div *ngFor="let todo of todos">
+                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
+            </div>
+            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
+                <div class="title-message">No tasks here</div>
+                <div class="subtitle-message">Add new tasks using the field above</div>
+            </div>
+        </div>
+        <div *ngIf="!todosReady" class="wrapper-message">
+            <div class="title-message">Loading tasks...</div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
-- 
2.6.4


From bc6aaa6d9adef6c0852d75f0373420a77e4aa993 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 23 Jun 2016 17:55:39 +0300
Subject: [PATCH 52/70] Step 8.2: Added logic to ListShowComponent

---
 client/imports/components/list-show.component.ts | 34 +++++++++++++++++++-----
 1 file changed, 28 insertions(+), 6 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index cc2ddac..e3ffb51 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,19 +1,41 @@
 import {Component} from "@angular/core";
 import {RouteParams} from "@angular/router-deprecated";
 import {BlazeTemplate} from "angular2-blaze-template";
+import {Lists} from "../../../imports/api/lists/lists.js"
+import {MeteorComponent} from "angular2-meteor";
 
 @Component({
   directives: [BlazeTemplate],
-  template: `<blaze-template name="Lists_show_page" [context]="templateContext"></blaze-template>`
+  templateUrl: '/client/imports/components/list-show.ng2.html'
 })
-export class ListShowComponent {
-  private templateContext : any;
+export class ListShowComponent extends MeteorComponent {
+  private list : any;
+  private todosReady : boolean = false;
+  private todos : Array<any>;
+  private editing : boolean = false;
 
   constructor(params : RouteParams) {
+    super();
+
     let listId = params.get("_id");
+    this.subscribe('todos.inList', listId);
+
+    this.autorun(() => {
+      if (listId && Lists.findOne(listId)) {
+        this.list = Lists.findOne(listId);
+        this.todosReady = true;
+        this.todos = this.list.todos();
+      }
+    }, true);
+  }
+
+  getContextForItem(todo) {
+    return {
+      todo: todo,
+      editing: false,
+      onEditingChange(editing) {
 
-    this.templateContext = {
-      _id: listId
-    };
+      },
+    }
   }
 }
\ No newline at end of file
-- 
2.6.4


From b757f70f408f057f706734122942027f7cfbf5f6 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 11:00:31 +0300
Subject: [PATCH 53/70] Step 8.3: Implemented the events in the UI

---
 client/imports/components/list-show.ng2.html | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
index 6b99a25..2a23675 100644
--- a/client/imports/components/list-show.ng2.html
+++ b/client/imports/components/list-show.ng2.html
@@ -1,9 +1,9 @@
 <div class="page lists-show">
     <nav class="js-title-nav" *ngIf="list">
-        <form *ngIf="editing" class="js-edit-form list-edit-form">
-            <input type="text" name="name" [value]="editModel.name">
+        <form *ngIf="editing" class="js-edit-form list-edit-form" (ngSubmit)="saveList()">
+            <input type="text" name="name" [(ngModel)]="editModel.name" (blur)="saveList()">
             <div class="nav-group right">
-                <a href="#" class="js-cancel nav-item">
+                <a href="#" class="js-cancel nav-item" (click)="editList(false)">
                     <span class="icon-close js-cancel" title="Cancel"></span>
                 </a>
             </div>
@@ -15,7 +15,7 @@
                 </a>
             </div>
 
-            <h1 class="js-edit-list title-page">
+            <h1 class="js-edit-list title-page" (click)="editList(true)">
                 <span class="title-wrapper">{{list.name}}</span>
                 <span class="count-list">{{list.incompleteCount}}</span>
             </h1>
@@ -31,19 +31,19 @@
                     <span class="icon-cog"></span>
                 </div>
                 <div class="options-web">
-                    <a class="js-toggle-list-privacy nav-item">
+                    <a class="js-toggle-list-privacy nav-item" (click)="toggleListPrivacy()">
                         <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
                         <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
                     </a>
-                    <a class="js-delete-list nav-item">
+                    <a class="js-delete-list nav-item" (click)="deleteList()">
                         <span class="icon-trash" title="Delete list"></span>
                     </a>
                 </div>
             </div>
         </div>
 
-        <form class="js-todo-new todo-new input-symbol">
-            <input type="text" placeholder="Type to add new tasks">
+        <form class="js-todo-new todo-new input-symbol" (ngSubmit)="addNew()">
+            <input type="text" placeholder="Type to add new tasks" [(ngModel)]="newItemModel">
             <span class="icon-add js-todo-add"></span>
         </form>
     </nav>
-- 
2.6.4


From 3eae8ea768e6bbd55e7f564ab0eaefe7c96b977b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 11:00:50 +0300
Subject: [PATCH 54/70] Step 8.4: Migrate the events code to the Component

---
 client/imports/components/list-show.component.ts | 78 +++++++++++++++++++++++-
 1 file changed, 76 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index e3ffb51..d9f9997 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,8 +1,20 @@
 import {Component} from "@angular/core";
-import {RouteParams} from "@angular/router-deprecated";
+import {RouteParams, Router} from "@angular/router-deprecated";
 import {BlazeTemplate} from "angular2-blaze-template";
 import {Lists} from "../../../imports/api/lists/lists.js"
 import {MeteorComponent} from "angular2-meteor";
+import {
+  updateName,
+  makePublic,
+  makePrivate,
+  remove,
+} from '../../../imports/api/lists/methods.js';
+
+import {
+  insert,
+} from '../../../imports/api/todos/methods.js';
+
+import { displayError } from '../../../imports/ui/lib/errors.js';
 
 @Component({
   directives: [BlazeTemplate],
@@ -13,8 +25,10 @@ export class ListShowComponent extends MeteorComponent {
   private todosReady : boolean = false;
   private todos : Array<any>;
   private editing : boolean = false;
+  private editModel : any;
+  private newItemModel : string = '';
 
-  constructor(params : RouteParams) {
+  constructor(params : RouteParams, private router : Router) {
     super();
 
     let listId = params.get("_id");
@@ -27,6 +41,66 @@ export class ListShowComponent extends MeteorComponent {
         this.todos = this.list.todos();
       }
     }, true);
+
+    this.editModel = {
+      name: ''
+    }
+  }
+
+  deleteList() {
+    const list = this.list;
+    const message = `Are you sure you want to delete the list?`;
+
+    if (confirm(message)) {
+      remove.call({
+        listId: list._id,
+      }, displayError);
+
+      this.router.root.navigate(['Home']);
+
+      return true;
+    }
+
+    return false;
+  }
+
+  editList(toggle) {
+    this.editModel.name = this.list.name;
+    this.editing = toggle;
+  }
+
+  toggleListPrivacy() {
+    const list = this.list;
+
+    if (list.userId) {
+      makePublic.call({ listId: list._id }, displayError);
+    } else {
+      makePrivate.call({ listId: list._id }, displayError);
+    }
+  }
+
+  addNew() {
+    if (this.newItemModel == '') {
+      return;
+    }
+
+    insert.call({
+      listId: this.list._id,
+      text: this.newItemModel,
+    }, displayError);
+
+    this.newItemModel = '';
+  }
+
+  saveList() {
+    if (this.editing) {
+      updateName.call({
+        listId: this.list._id,
+        newName: this.editModel.name,
+      }, displayError);
+
+      this.editing = false;
+    }
   }
 
   getContextForItem(todo) {
-- 
2.6.4


From ad5448554c23db2611f07ae96f77b82a55faeab1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 11:05:25 +0300
Subject: [PATCH 55/70] Step 8.5: Remove the old template code

---
 imports/startup/client/routes.js      |   4 +-
 imports/ui/components/lists-show.html |  80 ---------------
 imports/ui/components/lists-show.js   | 188 ----------------------------------
 imports/ui/pages/lists-show-page.html |   9 --
 imports/ui/pages/lists-show-page.js   |  57 -----------
 5 files changed, 2 insertions(+), 336 deletions(-)
 delete mode 100755 imports/ui/components/lists-show.html
 delete mode 100755 imports/ui/components/lists-show.js
 delete mode 100755 imports/ui/pages/lists-show-page.html
 delete mode 100755 imports/ui/pages/lists-show-page.js

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index dbd1a96..3cd6bc1 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -2,5 +2,5 @@ import { FlowRouter } from 'meteor/kadira:flow-router';
 import { BlazeLayout } from 'meteor/kadira:blaze-layout';
 
 // Import to load these templates
-import '../../ui/pages/lists-show-page.js';
-import '../../ui/pages/app-not-found.js';
\ No newline at end of file
+import '../../ui/pages/app-not-found.js';
+import '../../ui/components/todos-item.js';
\ No newline at end of file
diff --git a/imports/ui/components/lists-show.html b/imports/ui/components/lists-show.html
deleted file mode 100755
index bbc8340..0000000
--- a/imports/ui/components/lists-show.html
+++ /dev/null
@@ -1,80 +0,0 @@
-<template name="Lists_show">
-  <div class="page lists-show">
-    <nav class="js-title-nav">
-      {{#momentum plugin="fade"}}
-        {{#if editing}}
-          <form class="js-edit-form list-edit-form">
-            <input type="text" name="name" value="{{name}}">
-            <div class="nav-group right">
-              <a href="#" class="js-cancel nav-item">
-                <span class="icon-close js-cancel" title={{_ 'Cancel'}}></span>
-              </a>
-            </div>
-          </form>
-        {{else}}
-          <div class="nav-group">
-            <a href="#" class="js-menu nav-item">
-              <span class="icon-list-unordered" title={{_ 'Show Menu'}}></span>
-            </a>
-          </div>
-
-          <h1 class="js-edit-list title-page">
-            <span class="title-wrapper">{{list.name}}</span>
-            <span class="count-list">{{list.incompleteCount}}</span>
-          </h1>
-
-          <div class="nav-group right">
-            <div class="nav-item options-mobile">
-              <select class="list-edit">
-                <option disabled selected>{{_ 'Select an action'}}</option>
-                {{#if list.userId}}
-                  <option value="public">{{_ 'Make Public'}}</option>
-                {{else}}
-                  <option value="private">{{_ 'Make Private'}}</option>
-                {{/if}}
-                <option value="delete">{{_ 'Delete'}}</option>
-              </select>
-              <span class="icon-cog"></span>
-            </div>
-            <div class="options-web">
-              <a class="js-toggle-list-privacy nav-item">
-                {{#if list.userId}}
-                  <span class="icon-lock" title={{_ 'Make list public'}}></span>
-                {{else}}
-                  <span class="icon-unlock" title={{_ 'Make list private'}}></span>
-                {{/if}}
-              </a>
-
-              <a class="js-delete-list nav-item">
-                <span class="icon-trash" title={{_ 'Delete list'}}></span>
-              </a>
-            </div>
-          </div>
-        {{/if}}
-      {{/momentum}}
-
-      <form class="js-todo-new todo-new input-symbol">
-        <input type="text" placeholder={{_ 'Type to add new tasks'}}>
-        <span class="icon-add js-todo-add"></span>
-      </form>
-    </nav>
-
-
-    <div class="content-scrollable list-items">
-      {{#if todosReady}}
-        {{#each todo in todos}}
-          {{> Todos_item (todoArgs todo)}}
-        {{else}}
-          <div class="wrapper-message">
-            <div class="title-message">{{_ 'No tasks here'}}</div>
-            <div class="subtitle-message">{{_ 'Add new tasks using the field above'}}</div>
-          </div>
-        {{/each}}
-      {{else}}
-          <div class="wrapper-message">
-            <div class="title-message">{{_ 'Loading tasks...'}}</div>
-          </div>
-      {{/if}}
-    </div>
-  </div>
-</template>
diff --git a/imports/ui/components/lists-show.js b/imports/ui/components/lists-show.js
deleted file mode 100755
index fde64de..0000000
--- a/imports/ui/components/lists-show.js
+++ /dev/null
@@ -1,188 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Template } from 'meteor/templating';
-import { Mongo } from 'meteor/mongo';
-import { ReactiveDict } from 'meteor/reactive-dict';
-import { Tracker } from 'meteor/tracker';
-import { $ } from 'meteor/jquery';
-
-import './lists-show.html';
-
-// Component used in the template
-import './todos-item.js';
-
-import {
-  updateName,
-  makePublic,
-  makePrivate,
-  remove,
-} from '../../api/lists/methods.js';
-
-import {
-  insert,
-} from '../../api/todos/methods.js';
-
-import { displayError } from '../lib/errors.js';
-
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { SimpleSchema } from 'meteor/aldeed:simple-schema';
-import { TAPi18n } from 'meteor/tap:i18n';
-
-Template.Lists_show.onCreated(function listShowOnCreated() {
-  this.autorun(() => {
-    new SimpleSchema({
-      list: { type: Function },
-      todosReady: { type: Boolean },
-      todos: { type: Mongo.Cursor },
-    }).validate(Template.currentData());
-  });
-
-  this.state = new ReactiveDict();
-  this.state.setDefault({
-    editing: false,
-    editingTodo: false,
-  });
-
-  this.saveList = () => {
-    this.state.set('editing', false);
-
-    const newName = this.$('[name=name]').val().trim();
-    if (newName) {
-      updateName.call({
-        listId: this.data.list()._id,
-        newName,
-      }, displayError);
-    }
-  };
-
-  this.editList = () => {
-    this.state.set('editing', true);
-
-    // force the template to redraw based on the reactive change
-    Tracker.flush();
-    // We need to wait for the fade in animation to complete to reliably focus the input
-    Meteor.setTimeout(() => {
-      this.$('.js-edit-form input[type=text]').focus();
-    }, 400);
-  };
-
-  this.deleteList = () => {
-    const list = this.data.list();
-    const message = `${TAPi18n.__('Are you sure you want to delete the list')} ${list.name}?`;
-
-    if (confirm(message)) { // eslint-disable-line no-alert
-      remove.call({
-        listId: list._id,
-      }, displayError);
-
-      FlowRouter.go('App.home');
-      return true;
-    }
-
-    return false;
-  };
-
-  this.toggleListPrivacy = () => {
-    const list = this.data.list();
-    if (list.userId) {
-      makePublic.call({ listId: list._id }, displayError);
-    } else {
-      makePrivate.call({ listId: list._id }, displayError);
-    }
-  };
-});
-
-Template.Lists_show.helpers({
-  todoArgs(todo) {
-    const instance = Template.instance();
-    return {
-      todo,
-      editing: instance.state.equals('editingTodo', todo._id),
-      onEditingChange(editing) {
-        instance.state.set('editingTodo', editing ? todo._id : false);
-      },
-    };
-  },
-  editing() {
-    const instance = Template.instance();
-    return instance.state.get('editing');
-  },
-});
-
-Template.Lists_show.events({
-  'click .js-cancel'(event, instance) {
-    instance.state.set('editing', false);
-  },
-
-  'keydown input[type=text]'(event) {
-    // ESC
-    if (event.which === 27) {
-      event.preventDefault();
-      $(event.target).blur();
-    }
-  },
-
-  'blur input[type=text]'(event, instance) {
-    // if we are still editing (we haven't just clicked the cancel button)
-    if (instance.state.get('editing')) {
-      instance.saveList();
-    }
-  },
-
-  'submit .js-edit-form'(event, instance) {
-    event.preventDefault();
-    instance.saveList();
-  },
-
-  // handle mousedown otherwise the blur handler above will swallow the click
-  // on iOS, we still require the click event so handle both
-  'mousedown .js-cancel, click .js-cancel'(event, instance) {
-    event.preventDefault();
-    instance.state.set('editing', false);
-  },
-
-  // This is for the mobile dropdown
-  'change .list-edit'(event, instance) {
-    const target = event.target;
-    if ($(target).val() === 'edit') {
-      instance.editList();
-    } else if ($(target).val() === 'delete') {
-      instance.deleteList();
-    } else {
-      instance.toggleListPrivacy();
-    }
-
-    target.selectedIndex = 0;
-  },
-
-  'click .js-edit-list'(event, instance) {
-    instance.editList();
-  },
-
-  'click .js-toggle-list-privacy'(event, instance) {
-    instance.toggleListPrivacy();
-  },
-
-  'click .js-delete-list'(event, instance) {
-    instance.deleteList();
-  },
-
-  'click .js-todo-add'(event, instance) {
-    instance.$('.js-todo-new input').focus();
-  },
-
-  'submit .js-todo-new'(event) {
-    event.preventDefault();
-
-    const $input = $(event.target).find('[type=text]');
-    if (!$input.val()) {
-      return;
-    }
-
-    insert.call({
-      listId: this.list()._id,
-      text: $input.val(),
-    }, displayError);
-
-    $input.val('');
-  },
-});
diff --git a/imports/ui/pages/lists-show-page.html b/imports/ui/pages/lists-show-page.html
deleted file mode 100755
index 91c8662..0000000
--- a/imports/ui/pages/lists-show-page.html
+++ /dev/null
@@ -1,9 +0,0 @@
-<template name="Lists_show_page">
-  {{#if listIdArray}}
-    {{#each listId in listIdArray}}
-      {{> Lists_show (listArgs listId)}}
-    {{/each}}
-  {{else}}
-    {{> App_notFound}}
-  {{/if}}
-</template>
diff --git a/imports/ui/pages/lists-show-page.js b/imports/ui/pages/lists-show-page.js
deleted file mode 100755
index 3e33194..0000000
--- a/imports/ui/pages/lists-show-page.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import { Template } from 'meteor/templating';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-
-import { Lists } from '../../api/lists/lists.js';
-
-import { listRenderHold } from '../launch-screen.js';
-import './lists-show-page.html';
-
-// Components used inside the template
-import './app-not-found.js';
-import '../components/lists-show.js';
-
-Template.Lists_show_page.onCreated(function listsShowPageOnCreated() {
-  this.getListId = () => this.data._id;;
-
-  this.autorun(() => {
-    this.subscribe('todos.inList', this.getListId());
-  });
-});
-
-Template.Lists_show_page.onRendered(function listsShowPageOnRendered() {
-  this.autorun(() => {
-    if (this.subscriptionsReady()) {
-      listRenderHold.release();
-    }
-  });
-});
-
-Template.Lists_show_page.helpers({
-  // We use #each on an array of one item so that the "list" template is
-  // removed and a new copy is added when changing lists, which is
-  // important for animation purposes.
-  listIdArray() {
-    const instance = Template.instance();
-    const listId = instance.getListId();
-    return Lists.findOne(listId) ? [listId] : [];
-  },
-  listArgs(listId) {
-    const instance = Template.instance();
-    // By finding the list with only the `_id` field set, we don't create a dependency on the
-    // `list.incompleteCount`, and avoid re-rendering the todos when it changes
-    const list = Lists.findOne(listId, { fields: { _id: true } });
-    const todos = list && list.todos();
-    return {
-      todosReady: instance.subscriptionsReady(),
-      // We pass `list` (which contains the full list, with all fields, as a function
-      // because we want to control reactivity. When you check a todo item, the
-      // `list.incompleteCount` changes. If we didn't do this the entire list would
-      // re-render whenever you checked an item. By isolating the reactiviy on the list
-      // to the area that cares about it, we stop it from happening.
-      list() {
-        return Lists.findOne(listId);
-      },
-      todos,
-    };
-  },
-});
-- 
2.6.4


From 83997cb76cbf225325bc5cb1a1431f503daa3020 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:16:26 +0300
Subject: [PATCH 56/70] Step 9.1: Add the todo item component with migrated
 code

---
 client/imports/components/list-item.component.ts | 53 ++++++++++++++++++++++++
 1 file changed, 53 insertions(+)
 create mode 100644 client/imports/components/list-item.component.ts

diff --git a/client/imports/components/list-item.component.ts b/client/imports/components/list-item.component.ts
new file mode 100644
index 0000000..5c197e1
--- /dev/null
+++ b/client/imports/components/list-item.component.ts
@@ -0,0 +1,53 @@
+import {Component, Input, Output, EventEmitter} from '@angular/core';
+
+import {
+  setCheckedStatus,
+  updateText,
+  remove,
+} from '../../../imports/api/todos/methods.js';
+
+import {displayError} from '../../../imports/ui/lib/errors.js';
+
+@Component({
+  selector: 'list-item',
+  templateUrl: '/client/imports/components/list-item.ng2.html'
+})
+export class ListItem {
+  @Input() todo:any;
+  @Input() editing:boolean;
+  @Output() editChange = new EventEmitter();
+
+  constructor() {
+  }
+
+  toggleEdit(isEdit) {
+    if (!isEdit || (isEdit && this.editing)) {
+      this.editChange.emit({
+        editing: isEdit,
+        todoId: this.todo._id
+      });
+    }
+  }
+
+  remove() {
+    remove.call({
+      todoId: this.todo._id,
+    }, displayError);
+  }
+
+  checkedChange(event) {
+    setCheckedStatus.call({
+      todoId: this.todo._id,
+      newCheckedStatus: event.target.checked,
+    });
+  }
+
+  updateText(event) {
+    _.throttle((event) => {
+      updateText.call({
+        todoId: this.todo._id,
+        newText: event.target.value,
+      }, displayError);
+    }, 300)(event);
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 50ae51db45e08f78f4fcb555ab2425f53ab2da5e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:16:40 +0300
Subject: [PATCH 57/70] Step 9.2: Add the todo item template

---
 client/imports/components/list-item.ng2.html | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 client/imports/components/list-item.ng2.html

diff --git a/client/imports/components/list-item.ng2.html b/client/imports/components/list-item.ng2.html
new file mode 100644
index 0000000..db122e4
--- /dev/null
+++ b/client/imports/components/list-item.ng2.html
@@ -0,0 +1,11 @@
+<div class="list-item" [ngClass]="{'editing': editing, 'checked': todo.checked}">
+    <label class="checkbox">
+        <input type="checkbox" [checked]="todo.checked" (change)="checkedChange($event)" name="checked">
+        <span class="checkbox-custom"></span>
+    </label>
+
+    <input type="text" [value]="todo.text" (blur)="toggleEdit(false)" (focus)="toggleEdit(true)" (keyup)="updateText($event)" placeholder="Task name">
+    <a class="js-delete-item delete-item" (click)="remove()">
+        <span class="icon-trash"></span>
+    </a>
+</div>
-- 
2.6.4


From 3213813fae610758b4b0a20887bfcf33827afc83 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:16:57 +0300
Subject: [PATCH 58/70] Step 9.3: Changed the usage of the template

---
 client/imports/components/list-show.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
index 2a23675..3c25ee4 100644
--- a/client/imports/components/list-show.ng2.html
+++ b/client/imports/components/list-show.ng2.html
@@ -51,7 +51,7 @@
     <div class="content-scrollable list-items">
         <div *ngIf="todosReady">
             <div *ngFor="let todo of todos">
-                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
+                <list-item [todo]="todo" [editing]="editingTodo" (editChange)="onTodoItemEditChange($event)"></list-item>
             </div>
             <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
                 <div class="title-message">No tasks here</div>
-- 
2.6.4


From bac495727b699fabeff38a7d0c46d6104685a34c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:17:42 +0300
Subject: [PATCH 59/70] Step 9.4: Added events and usage of the new component

---
 client/imports/components/list-show.component.ts | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index d9f9997..1d63065 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,6 +1,5 @@
 import {Component} from "@angular/core";
 import {RouteParams, Router} from "@angular/router-deprecated";
-import {BlazeTemplate} from "angular2-blaze-template";
 import {Lists} from "../../../imports/api/lists/lists.js"
 import {MeteorComponent} from "angular2-meteor";
 import {
@@ -15,9 +14,10 @@ import {
 } from '../../../imports/api/todos/methods.js';
 
 import { displayError } from '../../../imports/ui/lib/errors.js';
+import {ListItem} from "./list-item.component";
 
 @Component({
-  directives: [BlazeTemplate],
+  directives: [ListItem],
   templateUrl: '/client/imports/components/list-show.ng2.html'
 })
 export class ListShowComponent extends MeteorComponent {
@@ -27,6 +27,7 @@ export class ListShowComponent extends MeteorComponent {
   private editing : boolean = false;
   private editModel : any;
   private newItemModel : string = '';
+  private editingTodo : number | boolean;
 
   constructor(params : RouteParams, private router : Router) {
     super();
@@ -47,6 +48,15 @@ export class ListShowComponent extends MeteorComponent {
     }
   }
 
+  onTodoItemEditChange(event) {
+    if (event.editing) {
+      this.editingTodo = event.todoId;
+    }
+    else {
+      this.editingTodo = false;
+    }
+  }
+
   deleteList() {
     const list = this.list;
     const message = `Are you sure you want to delete the list?`;
-- 
2.6.4


From af1e7a33a7778be4230cc03d925035a2033b7fa5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:19:56 +0300
Subject: [PATCH 60/70] Step 9.5: Removed old todo item template

---
 imports/startup/client/routes.js      |  3 +-
 imports/ui/components/todos-item.html | 13 ------
 imports/ui/components/todos-item.js   | 81 -----------------------------------
 3 files changed, 1 insertion(+), 96 deletions(-)
 delete mode 100755 imports/ui/components/todos-item.html
 delete mode 100755 imports/ui/components/todos-item.js

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 3cd6bc1..e065b9a 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -2,5 +2,4 @@ import { FlowRouter } from 'meteor/kadira:flow-router';
 import { BlazeLayout } from 'meteor/kadira:blaze-layout';
 
 // Import to load these templates
-import '../../ui/pages/app-not-found.js';
-import '../../ui/components/todos-item.js';
\ No newline at end of file
+import '../../ui/pages/app-not-found.js';
\ No newline at end of file
diff --git a/imports/ui/components/todos-item.html b/imports/ui/components/todos-item.html
deleted file mode 100755
index 0c538e4..0000000
--- a/imports/ui/components/todos-item.html
+++ /dev/null
@@ -1,13 +0,0 @@
-<template name="Todos_item">
-  <div class="list-item {{checkedClass todo}} {{editingClass editing}}">
-    <label class="checkbox">
-      <input type="checkbox" checked="{{todo.checked}}" name="checked">
-      <span class="checkbox-custom"></span>
-    </label>
-
-    <input type="text" value="{{todo.text}}" placeholder={{_ 'Task name'}}>
-    <a class="js-delete-item delete-item" href="#">
-      <span class="icon-trash"></span>
-    </a>
-  </div>
-</template>
diff --git a/imports/ui/components/todos-item.js b/imports/ui/components/todos-item.js
deleted file mode 100755
index 3610aca..0000000
--- a/imports/ui/components/todos-item.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import { Template } from 'meteor/templating';
-import { SimpleSchema } from 'meteor/aldeed:simple-schema';
-import { $ } from 'meteor/jquery';
-import { _ } from 'meteor/underscore';
-
-import './todos-item.html';
-import { Todos } from '../../api/todos/todos.js';
-
-import {
-  setCheckedStatus,
-  updateText,
-  remove,
-} from '../../api/todos/methods.js';
-
-import { displayError } from '../lib/errors.js';
-
-Template.Todos_item.onCreated(function todosItemOnCreated() {
-  this.autorun(() => {
-    new SimpleSchema({
-      todo: { type: Todos._helpers },
-      editing: { type: Boolean, optional: true },
-      onEditingChange: { type: Function },
-    }).validate(Template.currentData());
-  });
-});
-
-Template.Todos_item.helpers({
-  checkedClass(todo) {
-    return todo.checked && 'checked';
-  },
-  editingClass(editing) {
-    return editing && 'editing';
-  },
-});
-
-Template.Todos_item.events({
-  'change [type=checkbox]'(event) {
-    const checked = $(event.target).is(':checked');
-
-    setCheckedStatus.call({
-      todoId: this.todo._id,
-      newCheckedStatus: checked,
-    });
-  },
-
-  'focus input[type=text]'() {
-    this.onEditingChange(true);
-  },
-
-  'blur input[type=text]'() {
-    if (this.editing) {
-      this.onEditingChange(false);
-    }
-  },
-
-  'keydown input[type=text]'(event) {
-    // ESC or ENTER
-    if (event.which === 27 || event.which === 13) {
-      event.preventDefault();
-      event.target.blur();
-    }
-  },
-
-  // update the text of the item on keypress but throttle the event to ensure
-  // we don't flood the server with updates (handles the event at most once
-  // every 300ms)
-  'keyup input[type=text]': _.throttle(function todosItemKeyUpInner(event) {
-    updateText.call({
-      todoId: this.todo._id,
-      newText: event.target.value,
-    }, displayError);
-  }, 300),
-
-  // handle mousedown otherwise the blur handler above will swallow the click
-  // on iOS, we still require the click event so handle both
-  'mousedown .js-delete-item, click .js-delete-item'() {
-    remove.call({
-      todoId: this.todo._id,
-    }, displayError);
-  },
-});
-- 
2.6.4


From 2629371f3b361fd4b0fba054556a0a37be910a8a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:56:22 +0300
Subject: [PATCH 61/70] Step 10.1: Removed main Blaze import

---
 client/main.ts | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/client/main.ts b/client/main.ts
index 9b4472e..4c08e63 100755
--- a/client/main.ts
+++ b/client/main.ts
@@ -1,10 +1,7 @@
-import '/imports/startup/client';
-
 import {bootstrap} from "@angular/platform-browser-dynamic";
 import {Component} from "@angular/core";
 import {ROUTER_DIRECTIVES, ROUTER_PROVIDERS, RouteConfig} from "@angular/router-deprecated";
 import {MainContainerComponent} from "./imports/components/main-container.component";
-import {ListShowComponent} from "./imports/components/list-show.component";
 
 @Component({
   selector: "app",
-- 
2.6.4


From f947ce6fc0994911894c5cdf11ebdea556d5ddff Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:57:14 +0300
Subject: [PATCH 62/70] Step 10.2: Move all the stylesheets to the same folder
 under imports

---
 imports/stylesheets/base.less               |  77 +++++++++++++++
 imports/stylesheets/button.less             |  55 +++++++++++
 imports/stylesheets/form.less               | 119 +++++++++++++++++++++++
 imports/stylesheets/icon.less               |  79 ++++++++++++++++
 imports/stylesheets/layout.less             |  84 +++++++++++++++++
 imports/stylesheets/link.less               |  12 +++
 imports/stylesheets/list-items.less         |  55 +++++++++++
 imports/stylesheets/lists-show.less         |  97 +++++++++++++++++++
 imports/stylesheets/menu.less               |  97 +++++++++++++++++++
 imports/stylesheets/message.less            |  20 ++++
 imports/stylesheets/nav.less                |  41 ++++++++
 imports/stylesheets/notification.less       |  57 +++++++++++
 imports/stylesheets/reset.less              | 140 ++++++++++++++++++++++++++++
 imports/stylesheets/util/fontface.less      |  24 +++++
 imports/stylesheets/util/helpers.less       |   9 ++
 imports/stylesheets/util/text.less          |  21 +++++
 imports/stylesheets/util/typography.less    |  58 ++++++++++++
 imports/stylesheets/util/variables.less     |  21 +++++
 imports/stylesheets/utils.less              |   5 +
 imports/ui/components/lists-show.less       |  97 -------------------
 imports/ui/stylesheets/base.less            |  77 ---------------
 imports/ui/stylesheets/button.less          |  55 -----------
 imports/ui/stylesheets/form.less            | 119 -----------------------
 imports/ui/stylesheets/icon.less            |  79 ----------------
 imports/ui/stylesheets/layout.less          |  84 -----------------
 imports/ui/stylesheets/link.less            |  12 ---
 imports/ui/stylesheets/list-items.less      |  55 -----------
 imports/ui/stylesheets/menu.less            |  97 -------------------
 imports/ui/stylesheets/message.less         |  20 ----
 imports/ui/stylesheets/nav.less             |  41 --------
 imports/ui/stylesheets/notification.less    |  57 -----------
 imports/ui/stylesheets/reset.less           | 140 ----------------------------
 imports/ui/stylesheets/util/fontface.less   |  24 -----
 imports/ui/stylesheets/util/helpers.less    |   9 --
 imports/ui/stylesheets/util/text.less       |  21 -----
 imports/ui/stylesheets/util/typography.less |  58 ------------
 imports/ui/stylesheets/util/variables.less  |  21 -----
 imports/ui/stylesheets/utils.less           |   5 -
 38 files changed, 1071 insertions(+), 1071 deletions(-)
 create mode 100755 imports/stylesheets/base.less
 create mode 100755 imports/stylesheets/button.less
 create mode 100755 imports/stylesheets/form.less
 create mode 100755 imports/stylesheets/icon.less
 create mode 100755 imports/stylesheets/layout.less
 create mode 100755 imports/stylesheets/link.less
 create mode 100755 imports/stylesheets/list-items.less
 create mode 100755 imports/stylesheets/lists-show.less
 create mode 100755 imports/stylesheets/menu.less
 create mode 100755 imports/stylesheets/message.less
 create mode 100755 imports/stylesheets/nav.less
 create mode 100755 imports/stylesheets/notification.less
 create mode 100755 imports/stylesheets/reset.less
 create mode 100755 imports/stylesheets/util/fontface.less
 create mode 100755 imports/stylesheets/util/helpers.less
 create mode 100755 imports/stylesheets/util/text.less
 create mode 100755 imports/stylesheets/util/typography.less
 create mode 100755 imports/stylesheets/util/variables.less
 create mode 100755 imports/stylesheets/utils.less
 delete mode 100755 imports/ui/components/lists-show.less
 delete mode 100755 imports/ui/stylesheets/base.less
 delete mode 100755 imports/ui/stylesheets/button.less
 delete mode 100755 imports/ui/stylesheets/form.less
 delete mode 100755 imports/ui/stylesheets/icon.less
 delete mode 100755 imports/ui/stylesheets/layout.less
 delete mode 100755 imports/ui/stylesheets/link.less
 delete mode 100755 imports/ui/stylesheets/list-items.less
 delete mode 100755 imports/ui/stylesheets/menu.less
 delete mode 100755 imports/ui/stylesheets/message.less
 delete mode 100755 imports/ui/stylesheets/nav.less
 delete mode 100755 imports/ui/stylesheets/notification.less
 delete mode 100755 imports/ui/stylesheets/reset.less
 delete mode 100755 imports/ui/stylesheets/util/fontface.less
 delete mode 100755 imports/ui/stylesheets/util/helpers.less
 delete mode 100755 imports/ui/stylesheets/util/text.less
 delete mode 100755 imports/ui/stylesheets/util/typography.less
 delete mode 100755 imports/ui/stylesheets/util/variables.less
 delete mode 100755 imports/ui/stylesheets/utils.less

diff --git a/imports/stylesheets/base.less b/imports/stylesheets/base.less
new file mode 100755
index 0000000..5ed4eac
--- /dev/null
+++ b/imports/stylesheets/base.less
@@ -0,0 +1,77 @@
+@import './utils.less';
+
+* {
+  box-sizing: border-box;
+  -webkit-tap-highlight-color:rgba(0,0,0,0);
+  -webkit-tap-highlight-color: transparent; // for some Androids
+}
+
+html, button, input, textarea, select {
+  outline: none;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+}
+
+body {
+  .type-regular;
+  color: @color-full;
+  font-size: 16px; //this sets the baseline so we can use multiples of 4 & (r)ems
+}
+
+// Default type layout
+h1, h2, h3, h4, h5, h6 {
+  .type-regular;
+  margin: 0;
+  padding: 0;
+}
+
+h1 {
+  .font-l1;
+}
+
+h2 {
+  .font-m3;
+}
+
+h3 {
+  .font-m2;
+}
+
+h4 {
+  .font-m1;
+}
+
+h5 {
+  .font-s2;
+  color: @color-medium-rare;
+  text-transform: uppercase;
+}
+
+h6 {
+  color: @color-medium;
+}
+
+p {
+  .font-s3;
+}
+
+sub,
+sup {
+  font-size: .8em;
+}
+
+sub {
+  bottom: -.2em;
+}
+
+sup {
+  top: -.2em;
+}
+
+b {
+  font-weight: bold;
+}
+
+em {
+  font-style: italic;
+}
diff --git a/imports/stylesheets/button.less b/imports/stylesheets/button.less
new file mode 100755
index 0000000..9449a5b
--- /dev/null
+++ b/imports/stylesheets/button.less
@@ -0,0 +1,55 @@
+@import './utils.less';
+
+[class^="btn-"],
+[class*=" btn-"] {
+  // Sizing
+  .font-s2;
+  line-height: 20px !important; //override line-height always so we can use em's to size
+  padding: 1em 1.25em; // 48px tall
+
+  // Style
+  .title-caps;
+  transition: all 200ms ease-in;
+  color: @color-empty;
+  display: inline-block;
+  position: relative;
+  text-align: center;
+  text-decoration: none !important; //prevents global <a> styles from applying
+  vertical-align: middle;
+  white-space: nowrap;
+
+  &[class*="primary"] {
+    background-color: @color-primary;
+    color: @color-empty;
+
+    &:hover { background-color: darken(@color-primary, 5%); }
+    &:active { box-shadow: rgba(0,0,0,.3) 0 1px 3px 0 inset; }
+  }
+
+  &[class*="secondary"] {
+    transition: all 300ms ease-in;
+    box-shadow: lighten(#517096, 5%) 0 0 0 1px inset;
+    color: @color-empty;
+
+    &:hover{ color: @color-rare; }
+    &:active,
+    &.active {
+      box-shadow: lighten(#517096, 25%) 0 0 0 1px inset;
+    }
+  }
+
+  &[disabled] { opacity: .5; }
+}
+
+.btns-group {
+  display: flex;
+  flex-wrap: wrap;
+  width: 100%;
+
+  [class*="btn-"] {
+    .ellipsized;
+    flex: 1;
+
+    & + [class*="btn-"] { margin-left: -1px; }
+  }
+}
diff --git a/imports/stylesheets/form.less b/imports/stylesheets/form.less
new file mode 100755
index 0000000..8a76781
--- /dev/null
+++ b/imports/stylesheets/form.less
@@ -0,0 +1,119 @@
+@import './utils.less';
+
+// Standard text input
+input[type="text"],
+input[type="email"],
+input[type="password"],
+textarea {
+  // Sizing
+  .font-s2;
+  .type-regular;
+  padding: .75rem 0; //total height ~48
+  line-height: 1.5rem !important;
+
+  // Style
+  ::placeholder {
+    color: @color-complementary;
+  }
+
+  border: none;
+  border-radius: 0;
+  box-sizing: border-box;
+  color: @color-full;
+  outline: none;
+
+  &[disabled] { opacity: .5; }
+}
+
+// Remove chrome/saf autofill yellow background
+input:-webkit-autofill {
+  -webkit-box-shadow: 0 0 0 1000px @color-empty inset;
+}
+
+// Custom checkbox
+.checkbox {
+  display: inline-block;
+  height: 3rem;
+  position: relative;
+  vertical-align: middle;
+  width: 44px;
+
+  input[type="checkbox"] {
+    font-size: 1em;
+    visibility: hidden;
+
+    & + span:before {
+      .position(absolute, 50%, auto, auto, 50%, .85em, .85em);
+      transform: translate3d(-50%, -50%, 0);
+      background: transparent;
+      box-shadow: #abdfe3 0 0 0 1px inset;
+      content: '';
+      display: block;
+    }
+
+    &:checked + span:before {
+      box-shadow: none;
+      color: @color-medium-rare;
+
+      // Icon family from icon.lessimport
+      font-family: 'todos';
+    	speak: none;
+    	font-style: normal;
+    	font-weight: normal;
+    	font-variant: normal;
+    	text-transform: none;
+    	line-height: 1;
+
+    	// Better Font Rendering
+    	-webkit-font-smoothing: antialiased;
+    	-moz-osx-font-smoothing: grayscale;
+
+    	// Checkmark icon
+      content: "\e612";
+    }
+  }
+}
+
+// Input with an icon
+.input-symbol {
+  display: inline-block;
+  position: relative;
+
+  &.error [class^="icon-"],
+  &.error [class*=" icon-"] {
+    color: @color-negative;
+  }
+
+  // Position & padding
+  [class^="icon-"],
+  [class*=" icon-"] {
+    left: 1em;
+  }
+
+  input { padding-left: 3em; }
+
+  // Styling
+  input {
+    width: 100%;
+
+    &:focus {
+      & + [class^="icon-"],
+      & + [class*=" icon-"] {
+        color: @color-primary;
+      }
+    }
+  }
+
+  [class^="icon-"],
+  [class*=" icon-"] {
+    transition: all 300ms ease-in;
+    transform: translate3d(0,-50%,0);
+    background: transparent;
+    color: @color-medium;
+    font-size: 1em;
+    height: 1em;
+    position: absolute;
+    top: 50%;
+    width: 1em;
+  }
+}
diff --git a/imports/stylesheets/icon.less b/imports/stylesheets/icon.less
new file mode 100755
index 0000000..4c93b1f
--- /dev/null
+++ b/imports/stylesheets/icon.less
@@ -0,0 +1,79 @@
+@import './utils.less';
+
+@font-face {
+	font-family: 'todos';
+	src:url('/icon/todos.eot?-5w3um4');
+	src:url('/icon/todos.eot?#iefix5w3um4') format('embedded-opentype'),
+		url('/icon/todos.woff?5w3um4') format('woff'),
+		url('/icon/todos.ttf?5w3um4') format('truetype'),
+		url('/icon/todos.svg?5w3um4#todos') format('svg');
+	font-weight: normal;
+	font-style: normal;
+}
+
+[class^="icon-"], [class*=" icon-"] {
+	font-family: 'todos';
+	speak: none;
+	font-style: normal;
+	font-weight: normal;
+	font-variant: normal;
+	text-transform: none;
+	line-height: 1;
+
+	// Better Font Rendering
+	-webkit-font-smoothing: antialiased;
+	-moz-osx-font-smoothing: grayscale;
+}
+
+
+.icon-unlock:before {
+	content: "\e600";
+}
+.icon-user-add:before {
+	content: "\e604";
+}
+.icon-cog:before {
+	content: "\e606";
+}
+.icon-trash:before {
+	content: "\e607";
+}
+.icon-edit:before {
+	content: "\e608";
+}
+.icon-add:before {
+	content: "\e60a";
+}
+.icon-plus:before {
+	content: "\e60b";
+}
+.icon-close:before {
+	content: "\e60c";
+}
+.icon-cross:before {
+	content: "\e60d";
+}
+.icon-sync:before {
+	content: "\e60e";
+}
+.icon-lock:before {
+	content: "\e610";
+}
+.icon-check:before {
+	content: "\e612";
+}
+.icon-share:before {
+	content: "\e617";
+}
+.icon-email:before {
+	content: "\e619";
+}
+.icon-arrow-up:before {
+	content: "\e623";
+}
+.icon-arrow-down:before {
+	content: "\e626";
+}
+.icon-list-unordered:before {
+	content: "\e634";
+}
diff --git a/imports/stylesheets/layout.less b/imports/stylesheets/layout.less
new file mode 100755
index 0000000..d3a3090
--- /dev/null
+++ b/imports/stylesheets/layout.less
@@ -0,0 +1,84 @@
+@import './utils.less';
+
+@menu-width: 270px;
+@column: 5.55555%;
+
+body {
+  .position(absolute, 0, 0, 0, 0);
+  background-color: #315481;
+  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
+  background-repeat: no-repeat;
+  background-attachment: fixed;
+}
+
+#container {
+  .position(absolute, 0, 0, 0, 0);
+
+  @media screen and (min-width: 60em) {
+    left: @column;
+    right: @column;
+  }
+
+  @media screen and (min-width: 80em) {
+    left: 2*@column;
+    right: 2*@column;
+  }
+
+  // Hide anything offscreen
+  overflow: hidden;
+}
+
+#menu {
+  .position(absolute, 0, 0, 0, 0, @menu-width);
+}
+
+#content-container {
+  .position(absolute, 0, 0, 0, 0);
+  transition: all 200ms ease-out;
+  transform: translate3d(0, 0, 0);
+  background: @color-tertiary;
+  opacity: 1;
+
+  .page {
+    .position(absolute, 0, 0, 0, 0);
+  }
+
+  @media screen and (min-width: 40em) {
+    left: @menu-width;
+  }
+
+  .content-scrollable {
+    .position(absolute, 0, 0, 0, 0);
+    transform: translate3d(0, 0, 0);
+    overflow-y: auto;
+    -webkit-overflow-scrolling: touch;
+  }
+
+  // Toggle menu on mobile
+  .menu-open & {
+    transform: translate3d(@menu-width, 0, 0);
+    opacity: .85;
+    left: 0;
+
+    @media screen and (min-width: 40em) {
+      // Show menu on desktop, negate .menu-open
+      transform: translate3d(0, 0, 0); //reset transform and use position properties instead
+      opacity: 1;
+      left: @menu-width;
+    }
+  }
+}
+
+// Transparent screen to prevent interactions on content when menu is open
+.content-overlay {
+  .position(absolute, 0, 0, 0, 0);
+  cursor: pointer;
+
+  .menu-open & {
+    transform: translate3d(@menu-width, 0, 0);
+    z-index: 1;
+  }
+
+  // Hide overlay on desktop
+  @media screen and (min-width: 40em) { display: none; }
+}
diff --git a/imports/stylesheets/link.less b/imports/stylesheets/link.less
new file mode 100755
index 0000000..c626beb
--- /dev/null
+++ b/imports/stylesheets/link.less
@@ -0,0 +1,12 @@
+@import './utils.less';
+
+a {
+  transition: all 200ms ease-in;
+  color: @color-secondary;
+  cursor: pointer;
+  text-decoration: none;
+
+  &:hover { color: darken(@color-primary, 10%); }
+  &:active { color: @color-well; }
+  &:focus { outline:none; } //removes FF dotted outline
+}
diff --git a/imports/stylesheets/list-items.less b/imports/stylesheets/list-items.less
new file mode 100755
index 0000000..7d10350
--- /dev/null
+++ b/imports/stylesheets/list-items.less
@@ -0,0 +1,55 @@
+@import './utils.less';
+
+.list-items .list-item {
+  .font-s2;
+
+  // Layout of list-item children
+  display: flex;
+  flex-wrap: wrap;
+  height: 3rem;
+  width: 100%;
+
+  .checkbox {
+    flex: 0, 0, 44px;
+    cursor: pointer;
+  }
+  input[type="text"] { flex: 1; }
+  .delete-item { flex: 0, 0, 3rem; }
+
+
+  // Style of list-item children
+  input[type="text"] {
+    background: transparent;
+    cursor: pointer;
+
+    &:focus { cursor: text; }
+  }
+
+  .delete-item {
+    color: @color-medium-rare;
+    line-height: 3rem;
+    text-align: center;
+
+    &:hover { color: @color-primary; }
+    &:active { color: @color-well; }
+    .icon-trash { font-size: 1.1em; }
+  }
+
+
+  // Border between list items
+  & + .list-item { border-top: 1px solid #f0f9fb; }
+
+  // Checked
+  &.checked {
+    input[type="text"] {
+      color: @color-medium-rare;
+      text-decoration: line-through;
+    }
+
+    .delete-item { display: inline-block; }
+  }
+
+  // Editing
+  .delete-item { display: none; }
+  &.editing .delete-item { display: inline-block; }
+}
diff --git a/imports/stylesheets/lists-show.less b/imports/stylesheets/lists-show.less
new file mode 100755
index 0000000..b705cde
--- /dev/null
+++ b/imports/stylesheets/lists-show.less
@@ -0,0 +1,97 @@
+@import '../stylesheets/utils.less';
+
+.page.lists-show {
+  .content-scrollable {
+    background: @color-empty;
+    top: 5em !important;
+  }
+
+  // Custom nav for lists-show
+  nav {
+    background: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
+    height: 5em;
+
+    text-align: center;
+    @media screen and (min-width: 40em) { text-align: left; }
+
+    .title-page {
+      .position(absolute, 0, 3rem, auto, 3rem);
+      @media screen and (min-width: 40em) {
+        left: 1rem;
+        right: 6rem;
+      }
+
+      cursor: pointer;
+      font-size: 1.125em; // 18px
+      white-space: nowrap;
+
+      .title-wrapper {
+        .ellipsized;
+        color: @color-ancillary;
+        display: inline-block;
+        padding-right: 1.5rem;
+        vertical-align: top;
+        max-width: 100%;
+      }
+
+      .count-list {
+        background: @color-primary;
+        border-radius: 1em;
+        color: @color-empty;
+        display: inline-block;
+        font-size: .7rem;
+        line-height: 1;
+        margin-left: -1.25rem;
+        margin-top: -4px;
+        padding: .3em .5em;
+        vertical-align: middle;
+      }
+    }
+    form.todo-new {
+      .position(absolute, 3em, 0, auto, 0);
+
+      input[type="text"] {
+        background: transparent;
+        padding-bottom: .25em;
+        padding-left: 44px !important;
+        padding-top: .25em;
+      }
+    }
+    form.list-edit-form {
+      position: relative;
+
+      input[type="text"] {
+        background: transparent;
+        font-size: 1.125em; // 18px
+        width: 100%;
+        padding-right: 3em;
+        padding-left: 1rem;
+      }
+    }
+
+    select.list-edit {
+      .font-s2;
+      .position(absolute, 0,0,0,0);
+      background: transparent;
+      opacity: 0; // allows the cog to appear
+    }
+
+    .options-web {
+      display: none;
+
+      .nav-item {
+        .font-s3;
+        width: 2rem;
+
+        &:last-child { margin-right: .5rem; }
+      }
+    }
+
+    // Hide & show options and nav icons
+    @media screen and (min-width: 40em) {
+      .nav-group:not(.right) { display: none !important; }
+      .options-mobile { display: none; }
+      .options-web {  display: block; }
+    }
+  }
+}
diff --git a/imports/stylesheets/menu.less b/imports/stylesheets/menu.less
new file mode 100755
index 0000000..f4a7967
--- /dev/null
+++ b/imports/stylesheets/menu.less
@@ -0,0 +1,97 @@
+@import './utils.less';
+
+#menu {
+  overflow-y: auto;
+  -webkit-overflow-scrolling: touch;
+
+  .btns-group,
+  .btns-group-vertical {
+    margin: 2em auto 2em;
+    width: 80%;
+
+    .btn-secondary {
+      .font-s1;
+      padding-top: .5em;
+      padding-bottom: .5em;
+    }
+  }
+
+  .btns-group-vertical .btn-secondary {
+    .force-wrap;
+    padding-right: 2.5em;
+    text-align: left;
+    text-indent: 0;
+    white-space: normal; // Resets wrapping
+    width: 100%;
+
+    & + .btn-secondary {
+      margin-top: .5rem;
+
+      &:before {
+        .position(absolute, -.5rem, 50%, auto, auto, 1px, .5rem);
+        background: lighten(#517096, 5%);
+        content: '';
+      }
+    }
+
+    [class^="icon-"],
+    [class*=" icon-"] {
+      .position(absolute, .5em, .5em, auto, auto);
+      line-height: 20px;
+    }
+  }
+
+  .list-todos {
+    a {
+      box-shadow: rgba(255,255,255,.15) 0 1px 0 0;
+      display: block;
+      line-height: 1.5em;
+      padding: .75em 2.5em;
+      position: relative;
+    }
+
+    .count-list {
+      transition: all 200ms ease-in;
+      background: rgba(255,255,255,.1);
+      border-radius: 1em;
+      float: right;
+      font-size: .7rem;
+      line-height: 1;
+      margin-top: .25rem;
+      margin-right: -1.5em;
+      padding: .3em .5em;
+    }
+
+    [class^="icon-"],
+    [class*=" icon-"] {
+      .font-s2;
+      float: left;
+      margin-left: -1.5rem;
+      margin-right: .5rem;
+      margin-top: .1rem;
+      width: 1em;
+    }
+
+    .icon-lock {
+      .font-s1;
+      margin-top: .2rem;
+      opacity: .8;
+    }
+
+    .list-todo {
+      color: rgba(255,255,255,.4);
+
+      &:hover,
+      &:active,
+      &.active {
+        color: @color-empty;
+        .count-list { background: @color-primary; }
+      }
+
+      .cordova &:hover {
+        // Prevent hover states from being noticeable on Cordova apps
+        color: rgba(255,255,255,.4);
+      }
+    }
+  }
+}
diff --git a/imports/stylesheets/message.less b/imports/stylesheets/message.less
new file mode 100755
index 0000000..2651c25
--- /dev/null
+++ b/imports/stylesheets/message.less
@@ -0,0 +1,20 @@
+@import './utils.less';
+
+// Empty states and 404 messages
+.wrapper-message {
+  .position(absolute, 45%, 0, auto, 0);
+  transform: translate3d(0, -50%, 0);
+  text-align: center;
+
+  .title-message {
+    .font-m2;
+    .type-light;
+    color: @color-ancillary;
+    margin-bottom: .5em;
+  }
+
+  .subtitle-message {
+    .font-s2;
+    color: @color-medium;
+  }
+}
diff --git a/imports/stylesheets/nav.less b/imports/stylesheets/nav.less
new file mode 100755
index 0000000..d56864b
--- /dev/null
+++ b/imports/stylesheets/nav.less
@@ -0,0 +1,41 @@
+@import './utils.less';
+
+// Generic nav positioning and styles
+nav {
+  .position(absolute, 0, 0, auto, 0);
+  transform: translate3d(0,0,0);
+  transition: all 200ms ease-out;
+  z-index: 10;
+
+  .nav-item {
+    .font-m1;
+    color: @color-ancillary;
+    display: inline-block;
+    height: 3rem;
+    text-align: center;
+    width: 3rem;
+
+    &:active { opacity: .5; }
+
+    [class^="icon-"],
+    [class*=" icon-"] {
+      line-height: 3rem;
+      vertical-align: middle;
+    }
+  }
+  .nav-group {
+    .position(absolute, 0, auto, auto, 0);
+    z-index: 1;
+
+    &.right {
+      left: auto;
+      right: 0;
+    }
+  }
+}
+
+// Custom nav for auth
+@media screen and (min-width: 40em) {
+  .page.auth .nav-group { display: none; }
+  .page.not-found .nav-group { display: none; }
+}
diff --git a/imports/stylesheets/notification.less b/imports/stylesheets/notification.less
new file mode 100755
index 0000000..1690c86
--- /dev/null
+++ b/imports/stylesheets/notification.less
@@ -0,0 +1,57 @@
+@import './utils.less';
+
+@-webkit-keyframes spin {
+  0% { transform: rotate(0deg); }
+  100% { transform: rotate(359deg); }
+}
+@keyframes spin {
+  0% { transform: rotate(0deg); }
+  100% { transform: rotate(359deg); }
+}
+
+
+// Notification message (e.g., when unable to connect)
+.notifications {
+  .position(absolute, auto, auto, 10px, 50%, 280px);
+  transform: translate3d(-50%, 0, 0);
+  z-index: 1;
+
+  @media screen and (min-width: 40em) {
+    transform: translate3d(0, 0, 0);
+    bottom: auto;
+    right: 1rem;
+    top: 1rem;
+    left: auto;
+  }
+
+  .notification {
+    .font-s1;
+    background: rgba(51,51,51, .85);
+    color: @color-empty;
+    margin-bottom: .25rem;
+    padding: .5rem .75rem;
+    position: relative;
+    width: 100%;
+
+    .icon-sync {
+      .position(absolute, 30%, auto, auto, 1rem);
+      animation: spin 2s infinite linear;
+      color: @color-empty;
+      font-size: 1.5em;
+    }
+
+    .meta {
+      overflow: hidden;
+      padding-left: 3em;
+
+      .title-notification {
+        .title-caps;
+        display: block;
+      }
+
+      .description {
+        display: block;
+      }
+    }
+  }
+}
diff --git a/imports/stylesheets/reset.less b/imports/stylesheets/reset.less
new file mode 100755
index 0000000..41fe7f8
--- /dev/null
+++ b/imports/stylesheets/reset.less
@@ -0,0 +1,140 @@
+/* Reset.less
+ * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here	that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
+ * ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
+
+
+// ERIC MEYER RESET
+// --------------------------------------------------
+
+html, body { margin: 0; padding: 0; }
+h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, cite, code, del, dfn, em, img, q, s, samp, small, strike, strong, sub, sup, tt, var, dd, dl, dt, li, ol, ul, fieldset, form, label, legend, button, table, caption, tbody, tfoot, thead, tr, th, td { margin: 0; padding: 0; border: 0; font-weight: normal; font-style: normal; font-size: 100%; line-height: 1; font-family: inherit; }
+table { border-collapse: collapse; border-spacing: 0; }
+ol, ul { list-style: none; }
+q:before, q:after, blockquote:before, blockquote:after { content: ""; }
+
+
+// Normalize.css
+// Pulling in select resets form the normalize.css project
+// --------------------------------------------------
+
+// Display in IE6-9 and FF3
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+html {
+  font-size: 100%;
+  -webkit-text-size-adjust: 100%;
+      -ms-text-size-adjust: 100%;
+}
+// Focus states
+a:focus {
+  outline: thin dotted;
+}
+// Hover & Active
+a:hover,
+a:active {
+  outline: 0;
+}
+
+// Display in IE6-9 and FF3
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+article,
+aside,
+details,
+figcaption,
+figure,
+footer,
+header,
+hgroup,
+nav,
+section {
+  display: block;
+}
+
+// Display block in IE6-9 and FF3
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+audio,
+canvas,
+video {
+  display: inline-block;
+  *display: inline;
+  *zoom: 1;
+}
+
+// Prevents modern browsers from displaying 'audio' without controls
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+audio:not([controls]) {
+    display: none;
+}
+
+// Prevents sub and sup affecting line-height in all browsers
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+sub,
+sup {
+  font-size: 75%;
+  line-height: 0;
+  position: relative;
+  vertical-align: baseline;
+}
+sup {
+  top: -0.5em;
+}
+sub {
+  bottom: -0.25em;
+}
+
+// Img border in a's and image quality
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+img {
+    border: 0;
+    -ms-interpolation-mode: bicubic;
+}
+
+// Forms
+// -------------------------
+// Source: http://github.com/necolas/normalize.css
+
+// Font size in all browsers, margin changes, misc consistency
+button,
+input,
+select,
+textarea {
+  font-size: 100%;
+  margin: 0;
+  vertical-align: baseline;
+  *vertical-align: middle;
+}
+button,
+input {
+  line-height: normal; // FF3/4 have !important on line-height in UA stylesheet
+  *overflow: visible; // Inner spacing ie IE6/7
+}
+button::-moz-focus-inner,
+input::-moz-focus-inner { // Inner padding and border oddities in FF3/4
+  border: 0;
+  padding: 0;
+}
+button,
+input[type="button"],
+input[type="reset"],
+input[type="submit"] {
+  cursor: pointer; // Cursors on all buttons applied consistently
+  -webkit-appearance: button; // Style clicable inputs in iOS
+}
+input[type="search"] { // Appearance in Safari/Chrome
+  -webkit-appearance: textfield;
+  -webkit-box-sizing: content-box;
+     -moz-box-sizing: content-box;
+          box-sizing: content-box;
+}
+input[type="search"]::-webkit-search-decoration {
+  -webkit-appearance: none; // Inner-padding issues in Chrome OSX, Safari 5
+}
+textarea {
+  overflow: auto; // Remove vertical scrollbar in IE6-9
+  vertical-align: top; // Readability and alignment cross-browser
+}
\ No newline at end of file
diff --git a/imports/stylesheets/util/fontface.less b/imports/stylesheets/util/fontface.less
new file mode 100755
index 0000000..3829cef
--- /dev/null
+++ b/imports/stylesheets/util/fontface.less
@@ -0,0 +1,24 @@
+// Light
+@font-face {
+  font-family: 'Open Sans';
+  src: url('/font/OpenSans-Light-webfont.eot');
+  src: url('/font/OpenSans-Light-webfont.eot?#iefix') format('embedded-opentype'),
+       url('/font/OpenSans-Light-webfont.woff') format('woff'),
+       url('/font/OpenSans-Light-webfont.ttf') format('truetype'),
+       url('/font/OpenSans-Light-webfont.svg#OpenSansLight') format('svg');
+  font-weight: 200;
+  font-style: normal;
+}
+
+// Regular
+@font-face {
+  font-family: 'Open Sans';
+  src: url('/font/OpenSans-Regular-webfont.eot');
+  src: url('/font/OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
+       url('/font/OpenSans-Regular-webfont.woff') format('woff'),
+       url('/font/OpenSans-Regular-webfont.ttf') format('truetype'),
+       url('/font/OpenSans-Regular-webfont.svg#OpenSansRegular') format('svg');
+  font-weight: normal;
+  font-weight: 400;
+  font-style: normal;
+}
diff --git a/imports/stylesheets/util/helpers.less b/imports/stylesheets/util/helpers.less
new file mode 100755
index 0000000..6fbf0ea
--- /dev/null
+++ b/imports/stylesheets/util/helpers.less
@@ -0,0 +1,9 @@
+.position(@type; @top: auto; @right: auto; @bottom: auto; @left: auto; @width: auto; @height: auto) {
+  position: @type;
+  top: @top;
+  right: @right;
+  bottom: @bottom;
+  left: @left;
+  width: @width;
+  height: @height;
+}
\ No newline at end of file
diff --git a/imports/stylesheets/util/text.less b/imports/stylesheets/util/text.less
new file mode 100755
index 0000000..4e96b07
--- /dev/null
+++ b/imports/stylesheets/util/text.less
@@ -0,0 +1,21 @@
+// Caps styling used in headers
+.title-caps() {
+  letter-spacing: .3em;
+  text-indent: .3em;
+  text-transform: uppercase;
+}
+
+// Adds an ellipses at the end of overflowing strings
+.ellipsized() {
+  overflow: hidden;
+  text-overflow: ellipsis;
+  white-space: nowrap;
+}
+
+.force-wrap {
+  word-wrap: break-word;
+  word-break: break-all;
+ -ms-word-break: break-all;
+  word-break: break-word; // Non-standard for webkit
+  hyphens: auto;
+}
diff --git a/imports/stylesheets/util/typography.less b/imports/stylesheets/util/typography.less
new file mode 100755
index 0000000..a50e64c
--- /dev/null
+++ b/imports/stylesheets/util/typography.less
@@ -0,0 +1,58 @@
+.type-regular() {
+  font-family: 'Open Sans', "Helvetica Neue", Helvetica, Arial, sans-serif;
+  font-style: 400;
+}
+
+.type-light {
+  font-family: 'Open Sans', "Helvetica Neue", Helvetica, Arial, sans-serif;
+  font-weight: 300;
+}
+
+
+// Large fonts
+.font-l3() {
+  font-size: 56px;
+  line-height: 64px;
+}
+
+.font-l2() {
+  font-size: 48px;
+  line-height: 56px;
+}
+
+.font-l1() {
+  font-size: 40px;
+  line-height: 48px;
+}
+
+// Medium fonts
+.font-m3() {
+  font-size: 28px;
+  line-height: 32px;
+}
+
+.font-m2() {
+  font-size: 24px;
+  line-height: 28px;
+}
+
+.font-m1() {
+  font-size: 20px;
+  line-height: 24px;
+}
+
+// Small fonts
+.font-s3() {
+  font-size: 16px;
+  line-height: 24px;
+}
+
+.font-s2() {
+  font-size: 14px;
+  line-height: 20px;
+}
+
+.font-s1() {
+  font-size: 12px;
+  line-height: 16px;
+}
\ No newline at end of file
diff --git a/imports/stylesheets/util/variables.less b/imports/stylesheets/util/variables.less
new file mode 100755
index 0000000..63cd5f4
--- /dev/null
+++ b/imports/stylesheets/util/variables.less
@@ -0,0 +1,21 @@
+// Core
+@color-primary: #2cc5d2; //caribbean teal (buttons)
+@color-secondary: #5db9ff; //cerulean blue (menu new list)
+@color-tertiary: #d2edf4; //muted teal (join/signin bg)
+@color-ancillary: #1c3f53; //deep navy (nav heading, menu icon)
+@color-complementary: #778b91; //muted navy (add item placeholder)
+
+// Alert
+@color-negative: #ff4400; //error, alert
+@color-note: #f6fccf;
+
+// Greyscale
+@color-empty: white;
+@color-raw: #f8f8f8;
+@color-raw: #f2f2f2;
+@color-rare: #eee;
+@color-medium-rare: #ccc;
+@color-medium: #aaa;
+@color-medium-well: #666;
+@color-well: #555;
+@color-full: #333;
\ No newline at end of file
diff --git a/imports/stylesheets/utils.less b/imports/stylesheets/utils.less
new file mode 100755
index 0000000..e29b9a9
--- /dev/null
+++ b/imports/stylesheets/utils.less
@@ -0,0 +1,5 @@
+@import 'util/helpers.less';
+@import 'util/fontface.less';
+@import 'util/text.less';
+@import 'util/typography.less';
+@import 'util/variables.less';
diff --git a/imports/ui/components/lists-show.less b/imports/ui/components/lists-show.less
deleted file mode 100755
index b705cde..0000000
--- a/imports/ui/components/lists-show.less
+++ /dev/null
@@ -1,97 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.page.lists-show {
-  .content-scrollable {
-    background: @color-empty;
-    top: 5em !important;
-  }
-
-  // Custom nav for lists-show
-  nav {
-    background: linear-gradient(to bottom, #d0edf5, #e1e5f0 100%);
-    height: 5em;
-
-    text-align: center;
-    @media screen and (min-width: 40em) { text-align: left; }
-
-    .title-page {
-      .position(absolute, 0, 3rem, auto, 3rem);
-      @media screen and (min-width: 40em) {
-        left: 1rem;
-        right: 6rem;
-      }
-
-      cursor: pointer;
-      font-size: 1.125em; // 18px
-      white-space: nowrap;
-
-      .title-wrapper {
-        .ellipsized;
-        color: @color-ancillary;
-        display: inline-block;
-        padding-right: 1.5rem;
-        vertical-align: top;
-        max-width: 100%;
-      }
-
-      .count-list {
-        background: @color-primary;
-        border-radius: 1em;
-        color: @color-empty;
-        display: inline-block;
-        font-size: .7rem;
-        line-height: 1;
-        margin-left: -1.25rem;
-        margin-top: -4px;
-        padding: .3em .5em;
-        vertical-align: middle;
-      }
-    }
-    form.todo-new {
-      .position(absolute, 3em, 0, auto, 0);
-
-      input[type="text"] {
-        background: transparent;
-        padding-bottom: .25em;
-        padding-left: 44px !important;
-        padding-top: .25em;
-      }
-    }
-    form.list-edit-form {
-      position: relative;
-
-      input[type="text"] {
-        background: transparent;
-        font-size: 1.125em; // 18px
-        width: 100%;
-        padding-right: 3em;
-        padding-left: 1rem;
-      }
-    }
-
-    select.list-edit {
-      .font-s2;
-      .position(absolute, 0,0,0,0);
-      background: transparent;
-      opacity: 0; // allows the cog to appear
-    }
-
-    .options-web {
-      display: none;
-
-      .nav-item {
-        .font-s3;
-        width: 2rem;
-
-        &:last-child { margin-right: .5rem; }
-      }
-    }
-
-    // Hide & show options and nav icons
-    @media screen and (min-width: 40em) {
-      .nav-group:not(.right) { display: none !important; }
-      .options-mobile { display: none; }
-      .options-web {  display: block; }
-    }
-  }
-}
diff --git a/imports/ui/stylesheets/base.less b/imports/ui/stylesheets/base.less
deleted file mode 100755
index 5ed4eac..0000000
--- a/imports/ui/stylesheets/base.less
+++ /dev/null
@@ -1,77 +0,0 @@
-@import './utils.less';
-
-* {
-  box-sizing: border-box;
-  -webkit-tap-highlight-color:rgba(0,0,0,0);
-  -webkit-tap-highlight-color: transparent; // for some Androids
-}
-
-html, button, input, textarea, select {
-  outline: none;
-  -webkit-font-smoothing: antialiased;
-  -moz-osx-font-smoothing: grayscale;
-}
-
-body {
-  .type-regular;
-  color: @color-full;
-  font-size: 16px; //this sets the baseline so we can use multiples of 4 & (r)ems
-}
-
-// Default type layout
-h1, h2, h3, h4, h5, h6 {
-  .type-regular;
-  margin: 0;
-  padding: 0;
-}
-
-h1 {
-  .font-l1;
-}
-
-h2 {
-  .font-m3;
-}
-
-h3 {
-  .font-m2;
-}
-
-h4 {
-  .font-m1;
-}
-
-h5 {
-  .font-s2;
-  color: @color-medium-rare;
-  text-transform: uppercase;
-}
-
-h6 {
-  color: @color-medium;
-}
-
-p {
-  .font-s3;
-}
-
-sub,
-sup {
-  font-size: .8em;
-}
-
-sub {
-  bottom: -.2em;
-}
-
-sup {
-  top: -.2em;
-}
-
-b {
-  font-weight: bold;
-}
-
-em {
-  font-style: italic;
-}
diff --git a/imports/ui/stylesheets/button.less b/imports/ui/stylesheets/button.less
deleted file mode 100755
index 9449a5b..0000000
--- a/imports/ui/stylesheets/button.less
+++ /dev/null
@@ -1,55 +0,0 @@
-@import './utils.less';
-
-[class^="btn-"],
-[class*=" btn-"] {
-  // Sizing
-  .font-s2;
-  line-height: 20px !important; //override line-height always so we can use em's to size
-  padding: 1em 1.25em; // 48px tall
-
-  // Style
-  .title-caps;
-  transition: all 200ms ease-in;
-  color: @color-empty;
-  display: inline-block;
-  position: relative;
-  text-align: center;
-  text-decoration: none !important; //prevents global <a> styles from applying
-  vertical-align: middle;
-  white-space: nowrap;
-
-  &[class*="primary"] {
-    background-color: @color-primary;
-    color: @color-empty;
-
-    &:hover { background-color: darken(@color-primary, 5%); }
-    &:active { box-shadow: rgba(0,0,0,.3) 0 1px 3px 0 inset; }
-  }
-
-  &[class*="secondary"] {
-    transition: all 300ms ease-in;
-    box-shadow: lighten(#517096, 5%) 0 0 0 1px inset;
-    color: @color-empty;
-
-    &:hover{ color: @color-rare; }
-    &:active,
-    &.active {
-      box-shadow: lighten(#517096, 25%) 0 0 0 1px inset;
-    }
-  }
-
-  &[disabled] { opacity: .5; }
-}
-
-.btns-group {
-  display: flex;
-  flex-wrap: wrap;
-  width: 100%;
-
-  [class*="btn-"] {
-    .ellipsized;
-    flex: 1;
-
-    & + [class*="btn-"] { margin-left: -1px; }
-  }
-}
diff --git a/imports/ui/stylesheets/form.less b/imports/ui/stylesheets/form.less
deleted file mode 100755
index 8a76781..0000000
--- a/imports/ui/stylesheets/form.less
+++ /dev/null
@@ -1,119 +0,0 @@
-@import './utils.less';
-
-// Standard text input
-input[type="text"],
-input[type="email"],
-input[type="password"],
-textarea {
-  // Sizing
-  .font-s2;
-  .type-regular;
-  padding: .75rem 0; //total height ~48
-  line-height: 1.5rem !important;
-
-  // Style
-  ::placeholder {
-    color: @color-complementary;
-  }
-
-  border: none;
-  border-radius: 0;
-  box-sizing: border-box;
-  color: @color-full;
-  outline: none;
-
-  &[disabled] { opacity: .5; }
-}
-
-// Remove chrome/saf autofill yellow background
-input:-webkit-autofill {
-  -webkit-box-shadow: 0 0 0 1000px @color-empty inset;
-}
-
-// Custom checkbox
-.checkbox {
-  display: inline-block;
-  height: 3rem;
-  position: relative;
-  vertical-align: middle;
-  width: 44px;
-
-  input[type="checkbox"] {
-    font-size: 1em;
-    visibility: hidden;
-
-    & + span:before {
-      .position(absolute, 50%, auto, auto, 50%, .85em, .85em);
-      transform: translate3d(-50%, -50%, 0);
-      background: transparent;
-      box-shadow: #abdfe3 0 0 0 1px inset;
-      content: '';
-      display: block;
-    }
-
-    &:checked + span:before {
-      box-shadow: none;
-      color: @color-medium-rare;
-
-      // Icon family from icon.lessimport
-      font-family: 'todos';
-    	speak: none;
-    	font-style: normal;
-    	font-weight: normal;
-    	font-variant: normal;
-    	text-transform: none;
-    	line-height: 1;
-
-    	// Better Font Rendering
-    	-webkit-font-smoothing: antialiased;
-    	-moz-osx-font-smoothing: grayscale;
-
-    	// Checkmark icon
-      content: "\e612";
-    }
-  }
-}
-
-// Input with an icon
-.input-symbol {
-  display: inline-block;
-  position: relative;
-
-  &.error [class^="icon-"],
-  &.error [class*=" icon-"] {
-    color: @color-negative;
-  }
-
-  // Position & padding
-  [class^="icon-"],
-  [class*=" icon-"] {
-    left: 1em;
-  }
-
-  input { padding-left: 3em; }
-
-  // Styling
-  input {
-    width: 100%;
-
-    &:focus {
-      & + [class^="icon-"],
-      & + [class*=" icon-"] {
-        color: @color-primary;
-      }
-    }
-  }
-
-  [class^="icon-"],
-  [class*=" icon-"] {
-    transition: all 300ms ease-in;
-    transform: translate3d(0,-50%,0);
-    background: transparent;
-    color: @color-medium;
-    font-size: 1em;
-    height: 1em;
-    position: absolute;
-    top: 50%;
-    width: 1em;
-  }
-}
diff --git a/imports/ui/stylesheets/icon.less b/imports/ui/stylesheets/icon.less
deleted file mode 100755
index 4c93b1f..0000000
--- a/imports/ui/stylesheets/icon.less
+++ /dev/null
@@ -1,79 +0,0 @@
-@import './utils.less';
-
-@font-face {
-	font-family: 'todos';
-	src:url('/icon/todos.eot?-5w3um4');
-	src:url('/icon/todos.eot?#iefix5w3um4') format('embedded-opentype'),
-		url('/icon/todos.woff?5w3um4') format('woff'),
-		url('/icon/todos.ttf?5w3um4') format('truetype'),
-		url('/icon/todos.svg?5w3um4#todos') format('svg');
-	font-weight: normal;
-	font-style: normal;
-}
-
-[class^="icon-"], [class*=" icon-"] {
-	font-family: 'todos';
-	speak: none;
-	font-style: normal;
-	font-weight: normal;
-	font-variant: normal;
-	text-transform: none;
-	line-height: 1;
-
-	// Better Font Rendering
-	-webkit-font-smoothing: antialiased;
-	-moz-osx-font-smoothing: grayscale;
-}
-
-
-.icon-unlock:before {
-	content: "\e600";
-}
-.icon-user-add:before {
-	content: "\e604";
-}
-.icon-cog:before {
-	content: "\e606";
-}
-.icon-trash:before {
-	content: "\e607";
-}
-.icon-edit:before {
-	content: "\e608";
-}
-.icon-add:before {
-	content: "\e60a";
-}
-.icon-plus:before {
-	content: "\e60b";
-}
-.icon-close:before {
-	content: "\e60c";
-}
-.icon-cross:before {
-	content: "\e60d";
-}
-.icon-sync:before {
-	content: "\e60e";
-}
-.icon-lock:before {
-	content: "\e610";
-}
-.icon-check:before {
-	content: "\e612";
-}
-.icon-share:before {
-	content: "\e617";
-}
-.icon-email:before {
-	content: "\e619";
-}
-.icon-arrow-up:before {
-	content: "\e623";
-}
-.icon-arrow-down:before {
-	content: "\e626";
-}
-.icon-list-unordered:before {
-	content: "\e634";
-}
diff --git a/imports/ui/stylesheets/layout.less b/imports/ui/stylesheets/layout.less
deleted file mode 100755
index d3a3090..0000000
--- a/imports/ui/stylesheets/layout.less
+++ /dev/null
@@ -1,84 +0,0 @@
-@import './utils.less';
-
-@menu-width: 270px;
-@column: 5.55555%;
-
-body {
-  .position(absolute, 0, 0, 0, 0);
-  background-color: #315481;
-  background-image: linear-gradient(to bottom, #315481, #918e82 100%);
-  background-repeat: no-repeat;
-  background-attachment: fixed;
-}
-
-#container {
-  .position(absolute, 0, 0, 0, 0);
-
-  @media screen and (min-width: 60em) {
-    left: @column;
-    right: @column;
-  }
-
-  @media screen and (min-width: 80em) {
-    left: 2*@column;
-    right: 2*@column;
-  }
-
-  // Hide anything offscreen
-  overflow: hidden;
-}
-
-#menu {
-  .position(absolute, 0, 0, 0, 0, @menu-width);
-}
-
-#content-container {
-  .position(absolute, 0, 0, 0, 0);
-  transition: all 200ms ease-out;
-  transform: translate3d(0, 0, 0);
-  background: @color-tertiary;
-  opacity: 1;
-
-  .page {
-    .position(absolute, 0, 0, 0, 0);
-  }
-
-  @media screen and (min-width: 40em) {
-    left: @menu-width;
-  }
-
-  .content-scrollable {
-    .position(absolute, 0, 0, 0, 0);
-    transform: translate3d(0, 0, 0);
-    overflow-y: auto;
-    -webkit-overflow-scrolling: touch;
-  }
-
-  // Toggle menu on mobile
-  .menu-open & {
-    transform: translate3d(@menu-width, 0, 0);
-    opacity: .85;
-    left: 0;
-
-    @media screen and (min-width: 40em) {
-      // Show menu on desktop, negate .menu-open
-      transform: translate3d(0, 0, 0); //reset transform and use position properties instead
-      opacity: 1;
-      left: @menu-width;
-    }
-  }
-}
-
-// Transparent screen to prevent interactions on content when menu is open
-.content-overlay {
-  .position(absolute, 0, 0, 0, 0);
-  cursor: pointer;
-
-  .menu-open & {
-    transform: translate3d(@menu-width, 0, 0);
-    z-index: 1;
-  }
-
-  // Hide overlay on desktop
-  @media screen and (min-width: 40em) { display: none; }
-}
diff --git a/imports/ui/stylesheets/link.less b/imports/ui/stylesheets/link.less
deleted file mode 100755
index c626beb..0000000
--- a/imports/ui/stylesheets/link.less
+++ /dev/null
@@ -1,12 +0,0 @@
-@import './utils.less';
-
-a {
-  transition: all 200ms ease-in;
-  color: @color-secondary;
-  cursor: pointer;
-  text-decoration: none;
-
-  &:hover { color: darken(@color-primary, 10%); }
-  &:active { color: @color-well; }
-  &:focus { outline:none; } //removes FF dotted outline
-}
diff --git a/imports/ui/stylesheets/list-items.less b/imports/ui/stylesheets/list-items.less
deleted file mode 100755
index 7d10350..0000000
--- a/imports/ui/stylesheets/list-items.less
+++ /dev/null
@@ -1,55 +0,0 @@
-@import './utils.less';
-
-.list-items .list-item {
-  .font-s2;
-
-  // Layout of list-item children
-  display: flex;
-  flex-wrap: wrap;
-  height: 3rem;
-  width: 100%;
-
-  .checkbox {
-    flex: 0, 0, 44px;
-    cursor: pointer;
-  }
-  input[type="text"] { flex: 1; }
-  .delete-item { flex: 0, 0, 3rem; }
-
-
-  // Style of list-item children
-  input[type="text"] {
-    background: transparent;
-    cursor: pointer;
-
-    &:focus { cursor: text; }
-  }
-
-  .delete-item {
-    color: @color-medium-rare;
-    line-height: 3rem;
-    text-align: center;
-
-    &:hover { color: @color-primary; }
-    &:active { color: @color-well; }
-    .icon-trash { font-size: 1.1em; }
-  }
-
-
-  // Border between list items
-  & + .list-item { border-top: 1px solid #f0f9fb; }
-
-  // Checked
-  &.checked {
-    input[type="text"] {
-      color: @color-medium-rare;
-      text-decoration: line-through;
-    }
-
-    .delete-item { display: inline-block; }
-  }
-
-  // Editing
-  .delete-item { display: none; }
-  &.editing .delete-item { display: inline-block; }
-}
diff --git a/imports/ui/stylesheets/menu.less b/imports/ui/stylesheets/menu.less
deleted file mode 100755
index f4a7967..0000000
--- a/imports/ui/stylesheets/menu.less
+++ /dev/null
@@ -1,97 +0,0 @@
-@import './utils.less';
-
-#menu {
-  overflow-y: auto;
-  -webkit-overflow-scrolling: touch;
-
-  .btns-group,
-  .btns-group-vertical {
-    margin: 2em auto 2em;
-    width: 80%;
-
-    .btn-secondary {
-      .font-s1;
-      padding-top: .5em;
-      padding-bottom: .5em;
-    }
-  }
-
-  .btns-group-vertical .btn-secondary {
-    .force-wrap;
-    padding-right: 2.5em;
-    text-align: left;
-    text-indent: 0;
-    white-space: normal; // Resets wrapping
-    width: 100%;
-
-    & + .btn-secondary {
-      margin-top: .5rem;
-
-      &:before {
-        .position(absolute, -.5rem, 50%, auto, auto, 1px, .5rem);
-        background: lighten(#517096, 5%);
-        content: '';
-      }
-    }
-
-    [class^="icon-"],
-    [class*=" icon-"] {
-      .position(absolute, .5em, .5em, auto, auto);
-      line-height: 20px;
-    }
-  }
-
-  .list-todos {
-    a {
-      box-shadow: rgba(255,255,255,.15) 0 1px 0 0;
-      display: block;
-      line-height: 1.5em;
-      padding: .75em 2.5em;
-      position: relative;
-    }
-
-    .count-list {
-      transition: all 200ms ease-in;
-      background: rgba(255,255,255,.1);
-      border-radius: 1em;
-      float: right;
-      font-size: .7rem;
-      line-height: 1;
-      margin-top: .25rem;
-      margin-right: -1.5em;
-      padding: .3em .5em;
-    }
-
-    [class^="icon-"],
-    [class*=" icon-"] {
-      .font-s2;
-      float: left;
-      margin-left: -1.5rem;
-      margin-right: .5rem;
-      margin-top: .1rem;
-      width: 1em;
-    }
-
-    .icon-lock {
-      .font-s1;
-      margin-top: .2rem;
-      opacity: .8;
-    }
-
-    .list-todo {
-      color: rgba(255,255,255,.4);
-
-      &:hover,
-      &:active,
-      &.active {
-        color: @color-empty;
-        .count-list { background: @color-primary; }
-      }
-
-      .cordova &:hover {
-        // Prevent hover states from being noticeable on Cordova apps
-        color: rgba(255,255,255,.4);
-      }
-    }
-  }
-}
diff --git a/imports/ui/stylesheets/message.less b/imports/ui/stylesheets/message.less
deleted file mode 100755
index 2651c25..0000000
--- a/imports/ui/stylesheets/message.less
+++ /dev/null
@@ -1,20 +0,0 @@
-@import './utils.less';
-
-// Empty states and 404 messages
-.wrapper-message {
-  .position(absolute, 45%, 0, auto, 0);
-  transform: translate3d(0, -50%, 0);
-  text-align: center;
-
-  .title-message {
-    .font-m2;
-    .type-light;
-    color: @color-ancillary;
-    margin-bottom: .5em;
-  }
-
-  .subtitle-message {
-    .font-s2;
-    color: @color-medium;
-  }
-}
diff --git a/imports/ui/stylesheets/nav.less b/imports/ui/stylesheets/nav.less
deleted file mode 100755
index d56864b..0000000
--- a/imports/ui/stylesheets/nav.less
+++ /dev/null
@@ -1,41 +0,0 @@
-@import './utils.less';
-
-// Generic nav positioning and styles
-nav {
-  .position(absolute, 0, 0, auto, 0);
-  transform: translate3d(0,0,0);
-  transition: all 200ms ease-out;
-  z-index: 10;
-
-  .nav-item {
-    .font-m1;
-    color: @color-ancillary;
-    display: inline-block;
-    height: 3rem;
-    text-align: center;
-    width: 3rem;
-
-    &:active { opacity: .5; }
-
-    [class^="icon-"],
-    [class*=" icon-"] {
-      line-height: 3rem;
-      vertical-align: middle;
-    }
-  }
-  .nav-group {
-    .position(absolute, 0, auto, auto, 0);
-    z-index: 1;
-
-    &.right {
-      left: auto;
-      right: 0;
-    }
-  }
-}
-
-// Custom nav for auth
-@media screen and (min-width: 40em) {
-  .page.auth .nav-group { display: none; }
-  .page.not-found .nav-group { display: none; }
-}
diff --git a/imports/ui/stylesheets/notification.less b/imports/ui/stylesheets/notification.less
deleted file mode 100755
index 1690c86..0000000
--- a/imports/ui/stylesheets/notification.less
+++ /dev/null
@@ -1,57 +0,0 @@
-@import './utils.less';
-
-@-webkit-keyframes spin {
-  0% { transform: rotate(0deg); }
-  100% { transform: rotate(359deg); }
-}
-@keyframes spin {
-  0% { transform: rotate(0deg); }
-  100% { transform: rotate(359deg); }
-}
-
-
-// Notification message (e.g., when unable to connect)
-.notifications {
-  .position(absolute, auto, auto, 10px, 50%, 280px);
-  transform: translate3d(-50%, 0, 0);
-  z-index: 1;
-
-  @media screen and (min-width: 40em) {
-    transform: translate3d(0, 0, 0);
-    bottom: auto;
-    right: 1rem;
-    top: 1rem;
-    left: auto;
-  }
-
-  .notification {
-    .font-s1;
-    background: rgba(51,51,51, .85);
-    color: @color-empty;
-    margin-bottom: .25rem;
-    padding: .5rem .75rem;
-    position: relative;
-    width: 100%;
-
-    .icon-sync {
-      .position(absolute, 30%, auto, auto, 1rem);
-      animation: spin 2s infinite linear;
-      color: @color-empty;
-      font-size: 1.5em;
-    }
-
-    .meta {
-      overflow: hidden;
-      padding-left: 3em;
-
-      .title-notification {
-        .title-caps;
-        display: block;
-      }
-
-      .description {
-        display: block;
-      }
-    }
-  }
-}
diff --git a/imports/ui/stylesheets/reset.less b/imports/ui/stylesheets/reset.less
deleted file mode 100755
index 41fe7f8..0000000
--- a/imports/ui/stylesheets/reset.less
+++ /dev/null
@@ -1,140 +0,0 @@
-/* Reset.less
- * Props to Eric Meyer (meyerweb.com) for his CSS reset file. We're using an adapted version here	that cuts out some of the reset HTML elements we will never need here (i.e., dfn, samp, etc).
- * ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- */
-
-
-// ERIC MEYER RESET
-// --------------------------------------------------
-
-html, body { margin: 0; padding: 0; }
-h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, cite, code, del, dfn, em, img, q, s, samp, small, strike, strong, sub, sup, tt, var, dd, dl, dt, li, ol, ul, fieldset, form, label, legend, button, table, caption, tbody, tfoot, thead, tr, th, td { margin: 0; padding: 0; border: 0; font-weight: normal; font-style: normal; font-size: 100%; line-height: 1; font-family: inherit; }
-table { border-collapse: collapse; border-spacing: 0; }
-ol, ul { list-style: none; }
-q:before, q:after, blockquote:before, blockquote:after { content: ""; }
-
-
-// Normalize.css
-// Pulling in select resets form the normalize.css project
-// --------------------------------------------------
-
-// Display in IE6-9 and FF3
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-html {
-  font-size: 100%;
-  -webkit-text-size-adjust: 100%;
-      -ms-text-size-adjust: 100%;
-}
-// Focus states
-a:focus {
-  outline: thin dotted;
-}
-// Hover & Active
-a:hover,
-a:active {
-  outline: 0;
-}
-
-// Display in IE6-9 and FF3
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-article,
-aside,
-details,
-figcaption,
-figure,
-footer,
-header,
-hgroup,
-nav,
-section {
-  display: block;
-}
-
-// Display block in IE6-9 and FF3
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-audio,
-canvas,
-video {
-  display: inline-block;
-  *display: inline;
-  *zoom: 1;
-}
-
-// Prevents modern browsers from displaying 'audio' without controls
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-audio:not([controls]) {
-    display: none;
-}
-
-// Prevents sub and sup affecting line-height in all browsers
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-sub,
-sup {
-  font-size: 75%;
-  line-height: 0;
-  position: relative;
-  vertical-align: baseline;
-}
-sup {
-  top: -0.5em;
-}
-sub {
-  bottom: -0.25em;
-}
-
-// Img border in a's and image quality
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-img {
-    border: 0;
-    -ms-interpolation-mode: bicubic;
-}
-
-// Forms
-// -------------------------
-// Source: http://github.com/necolas/normalize.css
-
-// Font size in all browsers, margin changes, misc consistency
-button,
-input,
-select,
-textarea {
-  font-size: 100%;
-  margin: 0;
-  vertical-align: baseline;
-  *vertical-align: middle;
-}
-button,
-input {
-  line-height: normal; // FF3/4 have !important on line-height in UA stylesheet
-  *overflow: visible; // Inner spacing ie IE6/7
-}
-button::-moz-focus-inner,
-input::-moz-focus-inner { // Inner padding and border oddities in FF3/4
-  border: 0;
-  padding: 0;
-}
-button,
-input[type="button"],
-input[type="reset"],
-input[type="submit"] {
-  cursor: pointer; // Cursors on all buttons applied consistently
-  -webkit-appearance: button; // Style clicable inputs in iOS
-}
-input[type="search"] { // Appearance in Safari/Chrome
-  -webkit-appearance: textfield;
-  -webkit-box-sizing: content-box;
-     -moz-box-sizing: content-box;
-          box-sizing: content-box;
-}
-input[type="search"]::-webkit-search-decoration {
-  -webkit-appearance: none; // Inner-padding issues in Chrome OSX, Safari 5
-}
-textarea {
-  overflow: auto; // Remove vertical scrollbar in IE6-9
-  vertical-align: top; // Readability and alignment cross-browser
-}
\ No newline at end of file
diff --git a/imports/ui/stylesheets/util/fontface.less b/imports/ui/stylesheets/util/fontface.less
deleted file mode 100755
index 3829cef..0000000
--- a/imports/ui/stylesheets/util/fontface.less
+++ /dev/null
@@ -1,24 +0,0 @@
-// Light
-@font-face {
-  font-family: 'Open Sans';
-  src: url('/font/OpenSans-Light-webfont.eot');
-  src: url('/font/OpenSans-Light-webfont.eot?#iefix') format('embedded-opentype'),
-       url('/font/OpenSans-Light-webfont.woff') format('woff'),
-       url('/font/OpenSans-Light-webfont.ttf') format('truetype'),
-       url('/font/OpenSans-Light-webfont.svg#OpenSansLight') format('svg');
-  font-weight: 200;
-  font-style: normal;
-}
-
-// Regular
-@font-face {
-  font-family: 'Open Sans';
-  src: url('/font/OpenSans-Regular-webfont.eot');
-  src: url('/font/OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
-       url('/font/OpenSans-Regular-webfont.woff') format('woff'),
-       url('/font/OpenSans-Regular-webfont.ttf') format('truetype'),
-       url('/font/OpenSans-Regular-webfont.svg#OpenSansRegular') format('svg');
-  font-weight: normal;
-  font-weight: 400;
-  font-style: normal;
-}
diff --git a/imports/ui/stylesheets/util/helpers.less b/imports/ui/stylesheets/util/helpers.less
deleted file mode 100755
index 6fbf0ea..0000000
--- a/imports/ui/stylesheets/util/helpers.less
+++ /dev/null
@@ -1,9 +0,0 @@
-.position(@type; @top: auto; @right: auto; @bottom: auto; @left: auto; @width: auto; @height: auto) {
-  position: @type;
-  top: @top;
-  right: @right;
-  bottom: @bottom;
-  left: @left;
-  width: @width;
-  height: @height;
-}
\ No newline at end of file
diff --git a/imports/ui/stylesheets/util/text.less b/imports/ui/stylesheets/util/text.less
deleted file mode 100755
index 4e96b07..0000000
--- a/imports/ui/stylesheets/util/text.less
+++ /dev/null
@@ -1,21 +0,0 @@
-// Caps styling used in headers
-.title-caps() {
-  letter-spacing: .3em;
-  text-indent: .3em;
-  text-transform: uppercase;
-}
-
-// Adds an ellipses at the end of overflowing strings
-.ellipsized() {
-  overflow: hidden;
-  text-overflow: ellipsis;
-  white-space: nowrap;
-}
-
-.force-wrap {
-  word-wrap: break-word;
-  word-break: break-all;
- -ms-word-break: break-all;
-  word-break: break-word; // Non-standard for webkit
-  hyphens: auto;
-}
diff --git a/imports/ui/stylesheets/util/typography.less b/imports/ui/stylesheets/util/typography.less
deleted file mode 100755
index a50e64c..0000000
--- a/imports/ui/stylesheets/util/typography.less
+++ /dev/null
@@ -1,58 +0,0 @@
-.type-regular() {
-  font-family: 'Open Sans', "Helvetica Neue", Helvetica, Arial, sans-serif;
-  font-style: 400;
-}
-
-.type-light {
-  font-family: 'Open Sans', "Helvetica Neue", Helvetica, Arial, sans-serif;
-  font-weight: 300;
-}
-
-
-// Large fonts
-.font-l3() {
-  font-size: 56px;
-  line-height: 64px;
-}
-
-.font-l2() {
-  font-size: 48px;
-  line-height: 56px;
-}
-
-.font-l1() {
-  font-size: 40px;
-  line-height: 48px;
-}
-
-// Medium fonts
-.font-m3() {
-  font-size: 28px;
-  line-height: 32px;
-}
-
-.font-m2() {
-  font-size: 24px;
-  line-height: 28px;
-}
-
-.font-m1() {
-  font-size: 20px;
-  line-height: 24px;
-}
-
-// Small fonts
-.font-s3() {
-  font-size: 16px;
-  line-height: 24px;
-}
-
-.font-s2() {
-  font-size: 14px;
-  line-height: 20px;
-}
-
-.font-s1() {
-  font-size: 12px;
-  line-height: 16px;
-}
\ No newline at end of file
diff --git a/imports/ui/stylesheets/util/variables.less b/imports/ui/stylesheets/util/variables.less
deleted file mode 100755
index 63cd5f4..0000000
--- a/imports/ui/stylesheets/util/variables.less
+++ /dev/null
@@ -1,21 +0,0 @@
-// Core
-@color-primary: #2cc5d2; //caribbean teal (buttons)
-@color-secondary: #5db9ff; //cerulean blue (menu new list)
-@color-tertiary: #d2edf4; //muted teal (join/signin bg)
-@color-ancillary: #1c3f53; //deep navy (nav heading, menu icon)
-@color-complementary: #778b91; //muted navy (add item placeholder)
-
-// Alert
-@color-negative: #ff4400; //error, alert
-@color-note: #f6fccf;
-
-// Greyscale
-@color-empty: white;
-@color-raw: #f8f8f8;
-@color-raw: #f2f2f2;
-@color-rare: #eee;
-@color-medium-rare: #ccc;
-@color-medium: #aaa;
-@color-medium-well: #666;
-@color-well: #555;
-@color-full: #333;
\ No newline at end of file
diff --git a/imports/ui/stylesheets/utils.less b/imports/ui/stylesheets/utils.less
deleted file mode 100755
index e29b9a9..0000000
--- a/imports/ui/stylesheets/utils.less
+++ /dev/null
@@ -1,5 +0,0 @@
-@import 'util/helpers.less';
-@import 'util/fontface.less';
-@import 'util/text.less';
-@import 'util/typography.less';
-@import 'util/variables.less';
-- 
2.6.4


From d00437ad8ccada4c80757461eadd1ad89b45e04b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:57:58 +0300
Subject: [PATCH 63/70] Step 10.3: Update the imports path

---
 client/main.less | 29 +++++++++++++----------------
 1 file changed, 13 insertions(+), 16 deletions(-)

diff --git a/client/main.less b/client/main.less
index e893614..78a643a 100755
--- a/client/main.less
+++ b/client/main.less
@@ -1,22 +1,19 @@
-@import "{}/imports/ui/stylesheets/reset.less";
+@import "{}/imports/stylesheets/reset.less";
 
 // Global namespace
-@import "{}/imports/ui/stylesheets/base.less";
-@import '{}/imports/ui/stylesheets/button.less';
-@import '{}/imports/ui/stylesheets/form.less';
-@import '{}/imports/ui/stylesheets/icon.less';
-@import '{}/imports/ui/stylesheets/layout.less';
-@import '{}/imports/ui/stylesheets/link.less';
-@import '{}/imports/ui/stylesheets/menu.less';
-@import '{}/imports/ui/stylesheets/nav.less';
+@import "{}/imports/stylesheets/base.less";
+@import '{}/imports/stylesheets/button.less';
+@import '{}/imports/stylesheets/form.less';
+@import '{}/imports/stylesheets/icon.less';
+@import '{}/imports/stylesheets/layout.less';
+@import '{}/imports/stylesheets/link.less';
+@import '{}/imports/stylesheets/menu.less';
+@import '{}/imports/stylesheets/nav.less';
 
 // Global components
-@import '{}/imports/ui/stylesheets/list-items.less';
-@import '{}/imports/ui/stylesheets/message.less';
-@import '{}/imports/ui/stylesheets/notification.less';
+@import '{}/imports/stylesheets/list-items.less';
+@import '{}/imports/stylesheets/message.less';
+@import '{}/imports/stylesheets/notification.less';
 
 // Individual components
-@import "{}/imports/ui/components/lists-show.less";
-@import "{}/imports/ui/components/loading.less";
-@import "{}/imports/ui/pages/app-not-found.less";
-@import "{}/imports/ui/accounts/accounts-templates.less";
+@import "{}/imports/stylesheets/lists-show.less";
-- 
2.6.4


From d076044230a5be35535d4ed4ab579e32da1eb626 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 12:59:46 +0300
Subject: [PATCH 64/70] Step 10.4: Remove old UI files

---
 imports/errors.js                                |  9 +++
 imports/ui/accounts/accounts-templates.html      | 65 ----------------
 imports/ui/accounts/accounts-templates.js        | 11 ---
 imports/ui/accounts/accounts-templates.less      | 95 ------------------------
 imports/ui/components/client/lists-show.tests.js | 55 --------------
 imports/ui/components/client/todos-item.tests.js | 62 ----------------
 imports/ui/components/loading.html               |  3 -
 imports/ui/components/loading.js                 |  1 -
 imports/ui/components/loading.less               |  8 --
 imports/ui/launch-screen.js                      |  3 -
 imports/ui/lib/errors.js                         |  9 ---
 imports/ui/pages/app-not-found.html              | 15 ----
 imports/ui/pages/app-not-found.js                |  1 -
 imports/ui/pages/app-not-found.less              |  5 --
 imports/ui/pages/client/lists-show-page.tests.js | 58 ---------------
 imports/ui/test-helpers.js                       | 25 -------
 16 files changed, 9 insertions(+), 416 deletions(-)
 create mode 100644 imports/errors.js
 delete mode 100755 imports/ui/accounts/accounts-templates.html
 delete mode 100755 imports/ui/accounts/accounts-templates.js
 delete mode 100755 imports/ui/accounts/accounts-templates.less
 delete mode 100755 imports/ui/components/client/lists-show.tests.js
 delete mode 100755 imports/ui/components/client/todos-item.tests.js
 delete mode 100755 imports/ui/components/loading.html
 delete mode 100755 imports/ui/components/loading.js
 delete mode 100755 imports/ui/components/loading.less
 delete mode 100755 imports/ui/launch-screen.js
 delete mode 100755 imports/ui/lib/errors.js
 delete mode 100755 imports/ui/pages/app-not-found.html
 delete mode 100755 imports/ui/pages/app-not-found.js
 delete mode 100755 imports/ui/pages/app-not-found.less
 delete mode 100755 imports/ui/pages/client/lists-show-page.tests.js
 delete mode 100755 imports/ui/test-helpers.js

diff --git a/imports/errors.js b/imports/errors.js
new file mode 100644
index 0000000..f0b528f
--- /dev/null
+++ b/imports/errors.js
@@ -0,0 +1,9 @@
+import { TAPi18n } from 'meteor/tap:i18n';
+
+export const displayError = (error) => {
+  if (error) {
+    // It would be better to not alert the error here but inform the user in some
+    // more subtle way
+    alert(TAPi18n.__(error.error)); // eslint-disable-line no-alert
+  }
+};
diff --git a/imports/ui/accounts/accounts-templates.html b/imports/ui/accounts/accounts-templates.html
deleted file mode 100755
index 2dbe64d..0000000
--- a/imports/ui/accounts/accounts-templates.html
+++ /dev/null
@@ -1,65 +0,0 @@
-<template name="Auth_page">
-  <div class="page auth">
-    <nav>
-      <div class="nav-group">
-        <a href="#" class="js-menu nav-item">
-          <span class="icon-list-unordered"></span>
-        </a>
-      </div>
-    </nav>
-
-    <div class="content-scrollable">
-      <div class="wrapper-auth">
-        {{> atForm}}
-      </div>
-    </div>
-  </div>
-</template>
-
-<template name="override-atPwdFormBtn">
-  <button type="submit" class="btn-primary">
-    {{buttonText}}
-  </button>
-</template>
-
-<template name="override-atTextInput">
-  <div class="input {{#if isValidating}}validating{{/if}} {{#if hasError}}error{{/if}} {{#if hasSuccess}}has-success{{/if}} {{#if feedback}}has-feedback{{/if}}">
-    <input type="{{type}}" id="at-field-{{_id}}" name="at-field-{{_id}}" placeholder="{{placeholder}}" autocapitalize="none" autocorrect="off">
-    {{#if hasIcon}}
-        <span class="{{iconClass}}"></span>
-    {{/if}}
-    {{#if hasError}}
-      <span>{{errorText}}</span>
-    {{/if}}
-  </div>
-</template>
-
-<template name="override-atTitle">
-  <h1 class="title-auth">{{title}}</h1>
-  <p class="subtitle-auth">{{_ 'Signing in allows you to have private lists'}}</p>
-</template>
-
-<template name="override-atError">
-  <div class="list-errors">
-    {{#each error}}
-      <div class="list-item">{{errorText}}</div>
-    {{/each}}
-  </div>
-</template>
-
-<template name="override-atPwdForm">
-  <div class="at-pwd-form">
-    <form role="form" id="at-pwd-form" class="{{disabled}}" novalidate action="#" method="POST">
-      {{#each fields}}
-        {{> atInput}}
-      {{/each}}
-      {{#if showReCaptcha}}
-        {{> atReCaptcha}}
-      {{/if}}
-      {{> atPwdFormBtn}}
-      {{#if showForgotPasswordLink}}
-        {{> atPwdLink}}
-      {{/if}}
-    </form>
-  </div>
-</template>
diff --git a/imports/ui/accounts/accounts-templates.js b/imports/ui/accounts/accounts-templates.js
deleted file mode 100755
index 8bc25ef..0000000
--- a/imports/ui/accounts/accounts-templates.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { Template } from 'meteor/templating';
-
-import './accounts-templates.html';
-
-// We identified the templates that need to be overridden by looking at the available templates
-// here: https://github.com/meteor-useraccounts/unstyled/tree/master/lib
-Template['override-atPwdFormBtn'].replaces('atPwdFormBtn');
-Template['override-atPwdForm'].replaces('atPwdForm');
-Template['override-atTextInput'].replaces('atTextInput');
-Template['override-atTitle'].replaces('atTitle');
-Template['override-atError'].replaces('atError');
diff --git a/imports/ui/accounts/accounts-templates.less b/imports/ui/accounts/accounts-templates.less
deleted file mode 100755
index 9b222c4..0000000
--- a/imports/ui/accounts/accounts-templates.less
+++ /dev/null
@@ -1,95 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.page.auth {
-  text-align: center;
-
-  .content-scrollable { background: @color-tertiary; }
-
-  .wrapper-auth {
-    padding-top: 4em;
-
-    @media screen and (min-width: 40em) {
-      margin: 0 auto;
-      max-width: 480px;
-      width: 80%;
-    }
-
-    .title-auth {
-      .font-l1;
-      .type-light;
-      color: @color-ancillary;
-      margin-bottom: .75rem;
-    }
-
-    .subtitle-auth {
-      color: @color-medium-well;
-      margin: 0 15% 3rem;
-    }
-
-    form {
-      .input {
-        margin-bottom: 1px;
-        width: 100%;
-        display: block;
-
-        input {
-          width: 100%;
-          padding: .75rem;
-        }
-      }
-
-      label {
-        display: none;
-      }
-
-      .btn-primary {
-        margin: 1em 5% 0;
-        width: 90%;
-
-        @media screen and (min-width: 40em) {
-          margin-left: 0;
-          margin-right: 0;
-          width: 100%;
-        }
-      }
-
-      .at-pwd-link {
-        margin-top: 1em;
-      }
-    }
-    .list-errors {
-      margin-top: -2rem;
-      .list-item {
-        .title-caps;
-        background: @color-note;
-        color: @color-negative;
-        font-size: .625em; // 10px
-        margin-bottom: 1px;
-        padding: .7rem 0;
-      }
-    }
-
-    .at-message, .at-result {
-      margin-top: -2rem;
-      .title-caps;
-      background: @color-note;
-      color: @color-ancillary;
-      font-size: .625em; // 10px
-      margin-bottom: 1px;
-      padding: .7rem 0;
-    }
-  }
-
-  .at-signup-link, .at-signin-link {
-    .font-s1;
-    .position(absolute, auto, 0, 1em, 0);
-    color: @color-medium;
-    display: inline-block;
-
-    @media screen and (min-width: 40em) {
-      bottom: 0;
-      margin-top: 1rem;
-      position: relative;
-    }
-  }
-}
diff --git a/imports/ui/components/client/lists-show.tests.js b/imports/ui/components/client/lists-show.tests.js
deleted file mode 100755
index 73e998e..0000000
--- a/imports/ui/components/client/lists-show.tests.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/* eslint-env mocha */
-/* eslint-disable func-names, prefer-arrow-callback */
-
-import { Mongo } from 'meteor/mongo';
-import { Factory } from 'meteor/factory';
-import { chai } from 'meteor/practicalmeteor:chai';
-import { Template } from 'meteor/templating';
-import { _ } from 'meteor/underscore';
-import { $ } from 'meteor/jquery';
-
-import { withRenderedTemplate } from '../../test-helpers.js';
-import '../lists-show.js';
-import { Todos } from '../../../api/todos/todos.js';
-
-
-describe('Lists_show', function () {
-  beforeEach(function () {
-    Template.registerHelper('_', key => key);
-  });
-
-  afterEach(function () {
-    Template.deregisterHelper('_');
-  });
-
-  it('renders correctly with simple data', function () {
-    const list = Factory.build('list');
-    const timestamp = new Date();
-
-    // Create a local collection in order to get a cursor
-    // Note that we need to pass the transform in so the documents look right when they come out.
-    const todosCollection = new Mongo.Collection(null, { transform: Todos._transform });
-    _.times(3, i => {
-      const todo = Factory.build('todo', {
-        listId: list._id,
-        createdAt: new Date(timestamp - (3 - i)),
-      });
-      todosCollection.insert(todo);
-    });
-    const todosCursor = todosCollection.find({}, { sort: { createdAt: -1 } });
-
-    const data = {
-      list: () => list,
-      todosReady: true,
-      todos: todosCursor,
-    };
-
-    withRenderedTemplate('Lists_show', data, el => {
-      const todosText = todosCursor.map(t => t.text);
-      const renderedText = $(el).find('.list-items input[type=text]')
-        .map((i, e) => $(e).val())
-        .toArray();
-      chai.assert.deepEqual(renderedText, todosText);
-    });
-  });
-});
diff --git a/imports/ui/components/client/todos-item.tests.js b/imports/ui/components/client/todos-item.tests.js
deleted file mode 100755
index 464e990..0000000
--- a/imports/ui/components/client/todos-item.tests.js
+++ /dev/null
@@ -1,62 +0,0 @@
-/* eslint-env mocha */
-/* eslint-disable func-names, prefer-arrow-callback */
-
-import { Factory } from 'meteor/factory';
-import { chai } from 'meteor/practicalmeteor:chai';
-import { Template } from 'meteor/templating';
-import { $ } from 'meteor/jquery';
-
-
-import { withRenderedTemplate } from '../../test-helpers.js';
-import '../todos-item.js';
-
-describe('Todos_item', function () {
-  beforeEach(function () {
-    Template.registerHelper('_', key => key);
-  });
-
-  afterEach(function () {
-    Template.deregisterHelper('_');
-  });
-
-  it('renders correctly with simple data', function () {
-    const todo = Factory.build('todo', { checked: false });
-    const data = {
-      todo,
-      onEditingChange: () => 0,
-    };
-
-    withRenderedTemplate('Todos_item', data, el => {
-      chai.assert.equal($(el).find('input[type=text]').val(), todo.text);
-      chai.assert.equal($(el).find('.list-item.checked').length, 0);
-      chai.assert.equal($(el).find('.list-item.editing').length, 0);
-    });
-  });
-
-  it('renders correctly when checked', function () {
-    const todo = Factory.build('todo', { checked: true });
-    const data = {
-      todo,
-      onEditingChange: () => 0,
-    };
-
-    withRenderedTemplate('Todos_item', data, el => {
-      chai.assert.equal($(el).find('input[type=text]').val(), todo.text);
-      chai.assert.equal($(el).find('.list-item.checked').length, 1);
-    });
-  });
-
-  it('renders correctly when editing', function () {
-    const todo = Factory.build('todo');
-    const data = {
-      todo,
-      editing: true,
-      onEditingChange: () => 0,
-    };
-
-    withRenderedTemplate('Todos_item', data, el => {
-      chai.assert.equal($(el).find('input[type=text]').val(), todo.text);
-      chai.assert.equal($(el).find('.list-item.editing').length, 1);
-    });
-  });
-});
diff --git a/imports/ui/components/loading.html b/imports/ui/components/loading.html
deleted file mode 100755
index e6ad0fc..0000000
--- a/imports/ui/components/loading.html
+++ /dev/null
@@ -1,3 +0,0 @@
-<template name="App_loading">
-  <img src="/logo-todos.svg" class="loading-app" />
-</template>
diff --git a/imports/ui/components/loading.js b/imports/ui/components/loading.js
deleted file mode 100755
index 3b9f326..0000000
--- a/imports/ui/components/loading.js
+++ /dev/null
@@ -1 +0,0 @@
-import './loading.html';
diff --git a/imports/ui/components/loading.less b/imports/ui/components/loading.less
deleted file mode 100755
index 0fbd34d..0000000
--- a/imports/ui/components/loading.less
+++ /dev/null
@@ -1,8 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.loading-app {
-  .position(absolute, 50%, 50%, auto, auto, 50%);
-  transform: translate3d(50%, -50%, 0);
-  min-width: 160px;
-  max-width: 320px;
-}
diff --git a/imports/ui/launch-screen.js b/imports/ui/launch-screen.js
deleted file mode 100755
index 0d8ce42..0000000
--- a/imports/ui/launch-screen.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import { LaunchScreen } from 'meteor/launch-screen';
-
-export const listRenderHold = LaunchScreen.hold();
diff --git a/imports/ui/lib/errors.js b/imports/ui/lib/errors.js
deleted file mode 100755
index f0b528f..0000000
--- a/imports/ui/lib/errors.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import { TAPi18n } from 'meteor/tap:i18n';
-
-export const displayError = (error) => {
-  if (error) {
-    // It would be better to not alert the error here but inform the user in some
-    // more subtle way
-    alert(TAPi18n.__(error.error)); // eslint-disable-line no-alert
-  }
-};
diff --git a/imports/ui/pages/app-not-found.html b/imports/ui/pages/app-not-found.html
deleted file mode 100755
index 6630c65..0000000
--- a/imports/ui/pages/app-not-found.html
+++ /dev/null
@@ -1,15 +0,0 @@
-<template name="App_notFound">
-  <div class="page not-found">
-    <nav>
-      <div class="nav-group">
-        <a href="#" class="js-menu nav-item"><span class="icon-list-unordered"></span></a>
-      </div>
-    </nav>
-
-    <div class="content-scrollable">
-      <div class="wrapper-message">
-        <div class="title-message">{{_ 'Page not found'}}</div>
-      </div>
-    </div>
-  </div>
-</template>
\ No newline at end of file
diff --git a/imports/ui/pages/app-not-found.js b/imports/ui/pages/app-not-found.js
deleted file mode 100755
index fec0084..0000000
--- a/imports/ui/pages/app-not-found.js
+++ /dev/null
@@ -1 +0,0 @@
-import './app-not-found.html';
diff --git a/imports/ui/pages/app-not-found.less b/imports/ui/pages/app-not-found.less
deleted file mode 100755
index 83c6e72..0000000
--- a/imports/ui/pages/app-not-found.less
+++ /dev/null
@@ -1,5 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.page.not-found {
-  .content-scrollable { background: @color-tertiary; }
-}
diff --git a/imports/ui/pages/client/lists-show-page.tests.js b/imports/ui/pages/client/lists-show-page.tests.js
deleted file mode 100755
index e4ffc50..0000000
--- a/imports/ui/pages/client/lists-show-page.tests.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/* eslint-env mocha */
-/* eslint-disable func-names, prefer-arrow-callback */
-
-import { Meteor } from 'meteor/meteor';
-import { Factory } from 'meteor/factory';
-import { Random } from 'meteor/random';
-import { chai } from 'meteor/practicalmeteor:chai';
-import StubCollections from 'meteor/hwillson:stub-collections';
-import { Template } from 'meteor/templating';
-import { _ } from 'meteor/underscore';
-import { $ } from 'meteor/jquery';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { sinon } from 'meteor/practicalmeteor:sinon';
-
-
-import { withRenderedTemplate } from '../../test-helpers.js';
-import '../lists-show-page.js';
-
-import { Todos } from '../../../api/todos/todos.js';
-import { Lists } from '../../../api/lists/lists.js';
-
-describe('Lists_show_page', function () {
-  const listId = Random.id();
-
-  beforeEach(function () {
-    StubCollections.stub([Todos, Lists]);
-    Template.registerHelper('_', key => key);
-    sinon.stub(FlowRouter, 'getParam', () => listId);
-    sinon.stub(Meteor, 'subscribe', () => ({
-      subscriptionId: 0,
-      ready: () => true,
-    }));
-  });
-
-  afterEach(function () {
-    StubCollections.restore();
-    Template.deregisterHelper('_');
-    FlowRouter.getParam.restore();
-    Meteor.subscribe.restore();
-  });
-
-  it('renders correctly with simple data', function () {
-    Factory.create('list', { _id: listId });
-    const timestamp = new Date();
-    const todos = _.times(3, i => Factory.create('todo', {
-      listId,
-      createdAt: new Date(timestamp - (3 - i)),
-    }));
-
-    withRenderedTemplate('Lists_show_page', {}, el => {
-      const todosText = todos.map(t => t.text).reverse();
-      const renderedText = $(el).find('.list-items input[type=text]')
-        .map((i, e) => $(e).val())
-        .toArray();
-      chai.assert.deepEqual(renderedText, todosText);
-    });
-  });
-});
diff --git a/imports/ui/test-helpers.js b/imports/ui/test-helpers.js
deleted file mode 100755
index b79a2bc..0000000
--- a/imports/ui/test-helpers.js
+++ /dev/null
@@ -1,25 +0,0 @@
-// TODO -- this should probably be some kind of test package that people use
-
-import { _ } from 'meteor/underscore';
-import { Template } from 'meteor/templating';
-import { Blaze } from 'meteor/blaze';
-import { Tracker } from 'meteor/tracker';
-
-const withDiv = function withDiv(callback) {
-  const el = document.createElement('div');
-  document.body.appendChild(el);
-  try {
-    callback(el);
-  } finally {
-    document.body.removeChild(el);
-  }
-};
-
-export const withRenderedTemplate = function withRenderedTemplate(template, data, callback) {
-  withDiv((el) => {
-    const ourTemplate = _.isString(template) ? Template[template] : template;
-    Blaze.renderWithData(ourTemplate, data, el);
-    Tracker.flush();
-    callback(el);
-  });
-};
-- 
2.6.4


From db83a7c777cb88bb86173e0490e42c4e70926a05 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 13:00:12 +0300
Subject: [PATCH 65/70] Step 10.5:Updated imports path for errors helpers

---
 client/imports/components/list-item.component.ts | 2 +-
 client/imports/components/list-show.component.ts | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/list-item.component.ts b/client/imports/components/list-item.component.ts
index 5c197e1..bd08da1 100644
--- a/client/imports/components/list-item.component.ts
+++ b/client/imports/components/list-item.component.ts
@@ -6,7 +6,7 @@ import {
   remove,
 } from '../../../imports/api/todos/methods.js';
 
-import {displayError} from '../../../imports/ui/lib/errors.js';
+import {displayError} from '../../../imports/errors.js';
 
 @Component({
   selector: 'list-item',
diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 1d63065..1fc4229 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -13,7 +13,7 @@ import {
   insert,
 } from '../../../imports/api/todos/methods.js';
 
-import { displayError } from '../../../imports/ui/lib/errors.js';
+import { displayError } from '../../../imports/errors.js';
 import {ListItem} from "./list-item.component";
 
 @Component({
-- 
2.6.4


From 2e82e96916c5a0f60f4887d24489865b6cec3802 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 13:00:22 +0300
Subject: [PATCH 66/70] Step 10.6: Removed old startup files

---
 imports/startup/client/index.js           |  1 -
 imports/startup/client/routes.app-test.js | 56 -------------------------------
 imports/startup/client/routes.js          |  5 ---
 3 files changed, 62 deletions(-)
 delete mode 100755 imports/startup/client/index.js
 delete mode 100755 imports/startup/client/routes.app-test.js
 delete mode 100755 imports/startup/client/routes.js

diff --git a/imports/startup/client/index.js b/imports/startup/client/index.js
deleted file mode 100755
index b0b0f47..0000000
--- a/imports/startup/client/index.js
+++ /dev/null
@@ -1 +0,0 @@
-import './routes.js';
diff --git a/imports/startup/client/routes.app-test.js b/imports/startup/client/routes.app-test.js
deleted file mode 100755
index ecbffe8..0000000
--- a/imports/startup/client/routes.app-test.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/* eslint-env mocha */
-
-import { Meteor } from 'meteor/meteor';
-import { Tracker } from 'meteor/tracker';
-import { DDP } from 'meteor/ddp-client';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { assert } from 'meteor/practicalmeteor:chai';
-import { Promise } from 'meteor/promise';
-import { $ } from 'meteor/jquery';
-
-import { generateData } from './../../api/generate-data.app-tests.js';
-import { Lists } from '../../api/lists/lists.js';
-import { Todos } from '../../api/todos/todos.js';
-
-
-// Utility -- returns a promise which resolves when all subscriptions are done
-const waitForSubscriptions = () => new Promise(resolve => {
-  const poll = Meteor.setInterval(() => {
-    if (DDP._allSubscriptionsReady()) {
-      clearInterval(poll);
-      resolve();
-    }
-  }, 200);
-});
-
-// Tracker.afterFlush runs code when all consequent of a tracker based change
-//   (such as a route change) have occured. This makes it a promise.
-const afterFlushPromise = Promise.denodeify(Tracker.afterFlush);
-
-if (Meteor.isClient) {
-  describe('data available when routed', () => {
-    // First, ensure the data that we expect is loaded on the server
-    //   Then, route the app to the homepage
-    beforeEach(() => generateData().then(() => FlowRouter.go('/')));
-
-    describe('when logged out', () => {
-      it('has all public lists at homepage', () => {
-        assert.equal(Lists.find().count(), 3);
-      });
-
-      it('renders the correct list when routed to', () => {
-        const list = Lists.findOne();
-        FlowRouter.go('Lists.show', { _id: list._id });
-
-        return afterFlushPromise()
-          .then(() => {
-            assert.equal($('.title-wrapper').html(), list.name);
-          })
-          .then(() => waitForSubscriptions())
-          .then(() => {
-            assert.equal(Todos.find({ listId: list._id }).count(), 3);
-          });
-      });
-    });
-  });
-}
diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
deleted file mode 100755
index e065b9a..0000000
--- a/imports/startup/client/routes.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { BlazeLayout } from 'meteor/kadira:blaze-layout';
-
-// Import to load these templates
-import '../../ui/pages/app-not-found.js';
\ No newline at end of file
-- 
2.6.4


From 6968051c750527eb693c2ecdb2f6ddde9ce21d89 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 13:02:01 +0300
Subject: [PATCH 67/70] Step 10.7: Remove old Meteor packages

---
 .meteor/packages | 8 --------
 .meteor/versions | 6 ------
 2 files changed, 14 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 7ff072c..67b889f 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -16,10 +16,8 @@ jquery
 underscore
 
 # ui
-blaze-html-templates
 reactive-dict
 reactive-var
-aldeed:template-extension
 percolate:momentum
 
 # data
@@ -31,12 +29,6 @@ reywood:publish-composite
 mdg:validated-method
 mdg:validation-error
 
-# routing
-kadira:flow-router@2.11.0
-kadira:blaze-layout
-arillo:flow-router-helpers
-zimme:active-route
-
 # i18n
 tap:i18n
 
diff --git a/.meteor/versions b/.meteor/versions
index 78e859b..39dc1e3 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -5,13 +5,11 @@ aldeed:collection2-core@1.1.1
 aldeed:schema-deny@1.0.1
 aldeed:schema-index@1.0.1
 aldeed:simple-schema@1.5.3
-aldeed:template-extension@4.0.0
 allow-deny@1.0.5
 angular2-css@0.1.0
 angular2-html-templates@0.5.3
 angular2-with-blaze-compilers@0.5.7
 app-prod-security@0.0.0
-arillo:flow-router-helpers@0.5.2
 autoupdate@1.2.10
 babel-compiler@6.8.0
 babel-runtime@0.1.9
@@ -22,7 +20,6 @@ barbatus:typescript-runtime@0.1.2
 base64@1.0.9
 binary-heap@1.0.9
 blaze@2.1.8
-blaze-html-templates@1.0.4
 blaze-tools@1.0.9
 boilerplate-generator@1.0.9
 browser-policy@1.0.9
@@ -66,8 +63,6 @@ id-map@1.0.8
 johanbrook:publication-collector@1.0.0
 jquery@1.11.9
 juliancwirko:postcss@1.1.1
-kadira:blaze-layout@2.3.0
-kadira:flow-router@2.12.1
 launch-screen@1.0.12
 livedata@1.0.18
 localstorage@1.0.11
@@ -131,4 +126,3 @@ url@1.0.10
 webapp@1.2.9
 webapp-hashing@1.0.9
 xolvio:cleaner@0.3.1
-zimme:active-route@2.3.2
-- 
2.6.4


From 3b4d34a27148424b3dcec7a73759e3527bb97610 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 13:02:27 +0300
Subject: [PATCH 68/70] Step 10.8: Updated compilers package

---
 .meteor/packages | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/.meteor/packages b/.meteor/packages
index 67b889f..22a492d 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -57,5 +57,5 @@ dispatch:mocha-phantomjs
 practicalmeteor:mocha@2.1.1-rc.1
 hwillson:stub-collections
 johanbrook:publication-collector
-angular2-with-blaze-compilers
+angular2-compilers
 barbatus:angular2-runtime
-- 
2.6.4


From a5d6ef93078bd5451e692d245256a11d335917d5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 13:03:47 +0300
Subject: [PATCH 69/70] Step 10.9: Added back the LESS package

---
 .meteor/packages | 1 +
 .meteor/versions | 4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 22a492d..8d9eda5 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -58,4 +58,5 @@ practicalmeteor:mocha@2.1.1-rc.1
 hwillson:stub-collections
 johanbrook:publication-collector
 angular2-compilers
+less
 barbatus:angular2-runtime
diff --git a/.meteor/versions b/.meteor/versions
index 39dc1e3..0da31a6 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -6,9 +6,8 @@ aldeed:schema-deny@1.0.1
 aldeed:schema-index@1.0.1
 aldeed:simple-schema@1.5.3
 allow-deny@1.0.5
-angular2-css@0.1.0
+angular2-compilers@0.5.7
 angular2-html-templates@0.5.3
-angular2-with-blaze-compilers@0.5.7
 app-prod-security@0.0.0
 autoupdate@1.2.10
 babel-compiler@6.8.0
@@ -64,6 +63,7 @@ johanbrook:publication-collector@1.0.0
 jquery@1.11.9
 juliancwirko:postcss@1.1.1
 launch-screen@1.0.12
+less@2.6.1
 livedata@1.0.18
 localstorage@1.0.11
 logging@1.0.13
-- 
2.6.4


From f9246f10b5ca2519b91d33263ff242fe0123f957 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 30 Jun 2016 13:05:24 +0300
Subject: [PATCH 70/70] Step 10.10: Changed the templates extension to be
 "html"

---
 client/imports/components/join.component.ts        |  2 +-
 client/imports/components/join.html                | 36 ++++++++++++
 client/imports/components/join.ng2.html            | 36 ------------
 client/imports/components/list-item.component.ts   |  2 +-
 client/imports/components/list-item.html           | 11 ++++
 client/imports/components/list-item.ng2.html       | 11 ----
 client/imports/components/list-show.component.ts   |  2 +-
 client/imports/components/list-show.html           | 65 ++++++++++++++++++++++
 client/imports/components/list-show.ng2.html       | 65 ----------------------
 .../imports/components/main-container.component.ts |  2 +-
 client/imports/components/main-container.html      | 48 ++++++++++++++++
 client/imports/components/main-container.ng2.html  | 48 ----------------
 client/imports/components/signin.component.ts      |  2 +-
 client/imports/components/signin.html              | 33 +++++++++++
 client/imports/components/signin.ng2.html          | 33 -----------
 client/index.html                                  | 12 ++++
 client/index.ng2.html                              | 12 ----
 17 files changed, 210 insertions(+), 210 deletions(-)
 create mode 100644 client/imports/components/join.html
 delete mode 100644 client/imports/components/join.ng2.html
 create mode 100644 client/imports/components/list-item.html
 delete mode 100644 client/imports/components/list-item.ng2.html
 create mode 100644 client/imports/components/list-show.html
 delete mode 100644 client/imports/components/list-show.ng2.html
 create mode 100644 client/imports/components/main-container.html
 delete mode 100644 client/imports/components/main-container.ng2.html
 create mode 100644 client/imports/components/signin.html
 delete mode 100644 client/imports/components/signin.ng2.html
 create mode 100755 client/index.html
 delete mode 100755 client/index.ng2.html

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
index fbf7c5c..ed11b67 100644
--- a/client/imports/components/join.component.ts
+++ b/client/imports/components/join.component.ts
@@ -11,7 +11,7 @@ class JoinModel {
 
 @Component({
   directives: [],
-  templateUrl: '/client/imports/components/join.ng2.html'
+  templateUrl: '/client/imports/components/join.html'
 })
 export class JoinComponent extends MeteorComponent {
   private model : JoinModel;
diff --git a/client/imports/components/join.html b/client/imports/components/join.html
new file mode 100644
index 0000000..fd16b02
--- /dev/null
+++ b/client/imports/components/join.html
@@ -0,0 +1,36 @@
+<div class="page auth">
+    <nav>
+        <div class="nav-group">
+            <a href="#" class="js-menu nav-item">
+                <span class="icon-list-unordered"></span>
+            </a>
+        </div>
+    </nav>
+    <div class="content-scrollable">
+        <div class="wrapper-auth">
+            <div class="at-form">
+                <h1 class="title-auth">Join</h1>
+                <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="list-errors">
+                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
+                </div>
+                <div class="at-pwd-form">
+                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
+                        <div class="input">
+                            <input [(ngModel)]="model.email" ngControl="email" #email="ngForm" type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.password" ngControl="password" #password="ngForm" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.passwordVerify" ngControl="passwordVerify" #passwordVerify="ngForm" required type="password" id="password_verify" class="form-control" name="password_verify" placeholder="Password (Again)" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
+                            REGISTER
+                        </button>
+                    </form>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
diff --git a/client/imports/components/join.ng2.html b/client/imports/components/join.ng2.html
deleted file mode 100644
index fd16b02..0000000
--- a/client/imports/components/join.ng2.html
+++ /dev/null
@@ -1,36 +0,0 @@
-<div class="page auth">
-    <nav>
-        <div class="nav-group">
-            <a href="#" class="js-menu nav-item">
-                <span class="icon-list-unordered"></span>
-            </a>
-        </div>
-    </nav>
-    <div class="content-scrollable">
-        <div class="wrapper-auth">
-            <div class="at-form">
-                <h1 class="title-auth">Join</h1>
-                <p class="subtitle-auth">Signing in allows you to have private lists</p>
-                <div class="list-errors">
-                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
-                </div>
-                <div class="at-pwd-form">
-                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
-                        <div class="input">
-                            <input [(ngModel)]="model.email" ngControl="email" #email="ngForm" type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
-                        </div>
-                        <div class="input">
-                            <input [(ngModel)]="model.password" ngControl="password" #password="ngForm" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
-                        </div>
-                        <div class="input">
-                            <input [(ngModel)]="model.passwordVerify" ngControl="passwordVerify" #passwordVerify="ngForm" required type="password" id="password_verify" class="form-control" name="password_verify" placeholder="Password (Again)" autocapitalize="none" autocorrect="off">
-                        </div>
-                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
-                            REGISTER
-                        </button>
-                    </form>
-                </div>
-            </div>
-        </div>
-    </div>
-</div>
\ No newline at end of file
diff --git a/client/imports/components/list-item.component.ts b/client/imports/components/list-item.component.ts
index bd08da1..6232e0a 100644
--- a/client/imports/components/list-item.component.ts
+++ b/client/imports/components/list-item.component.ts
@@ -10,7 +10,7 @@ import {displayError} from '../../../imports/errors.js';
 
 @Component({
   selector: 'list-item',
-  templateUrl: '/client/imports/components/list-item.ng2.html'
+  templateUrl: '/client/imports/components/list-item.html'
 })
 export class ListItem {
   @Input() todo:any;
diff --git a/client/imports/components/list-item.html b/client/imports/components/list-item.html
new file mode 100644
index 0000000..db122e4
--- /dev/null
+++ b/client/imports/components/list-item.html
@@ -0,0 +1,11 @@
+<div class="list-item" [ngClass]="{'editing': editing, 'checked': todo.checked}">
+    <label class="checkbox">
+        <input type="checkbox" [checked]="todo.checked" (change)="checkedChange($event)" name="checked">
+        <span class="checkbox-custom"></span>
+    </label>
+
+    <input type="text" [value]="todo.text" (blur)="toggleEdit(false)" (focus)="toggleEdit(true)" (keyup)="updateText($event)" placeholder="Task name">
+    <a class="js-delete-item delete-item" (click)="remove()">
+        <span class="icon-trash"></span>
+    </a>
+</div>
diff --git a/client/imports/components/list-item.ng2.html b/client/imports/components/list-item.ng2.html
deleted file mode 100644
index db122e4..0000000
--- a/client/imports/components/list-item.ng2.html
+++ /dev/null
@@ -1,11 +0,0 @@
-<div class="list-item" [ngClass]="{'editing': editing, 'checked': todo.checked}">
-    <label class="checkbox">
-        <input type="checkbox" [checked]="todo.checked" (change)="checkedChange($event)" name="checked">
-        <span class="checkbox-custom"></span>
-    </label>
-
-    <input type="text" [value]="todo.text" (blur)="toggleEdit(false)" (focus)="toggleEdit(true)" (keyup)="updateText($event)" placeholder="Task name">
-    <a class="js-delete-item delete-item" (click)="remove()">
-        <span class="icon-trash"></span>
-    </a>
-</div>
diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 1fc4229..e196c10 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -18,7 +18,7 @@ import {ListItem} from "./list-item.component";
 
 @Component({
   directives: [ListItem],
-  templateUrl: '/client/imports/components/list-show.ng2.html'
+  templateUrl: '/client/imports/components/list-show.html'
 })
 export class ListShowComponent extends MeteorComponent {
   private list : any;
diff --git a/client/imports/components/list-show.html b/client/imports/components/list-show.html
new file mode 100644
index 0000000..3c25ee4
--- /dev/null
+++ b/client/imports/components/list-show.html
@@ -0,0 +1,65 @@
+<div class="page lists-show">
+    <nav class="js-title-nav" *ngIf="list">
+        <form *ngIf="editing" class="js-edit-form list-edit-form" (ngSubmit)="saveList()">
+            <input type="text" name="name" [(ngModel)]="editModel.name" (blur)="saveList()">
+            <div class="nav-group right">
+                <a href="#" class="js-cancel nav-item" (click)="editList(false)">
+                    <span class="icon-close js-cancel" title="Cancel"></span>
+                </a>
+            </div>
+        </form>
+        <div *ngIf="!editing">
+            <div class="nav-group">
+                <a href="#" class="js-menu nav-item">
+                    <span class="icon-list-unordered" title="Show Menu"></span>
+                </a>
+            </div>
+
+            <h1 class="js-edit-list title-page" (click)="editList(true)">
+                <span class="title-wrapper">{{list.name}}</span>
+                <span class="count-list">{{list.incompleteCount}}</span>
+            </h1>
+
+            <div class="nav-group right">
+                <div class="nav-item options-mobile">
+                    <select class="list-edit">
+                        <option disabled selected>Select an action</option>
+                        <option *ngIf="list.userId" value="public">Make Public</option>
+                        <option *ngIf="!list.userId" value="private">Make Private</option>
+                        <option value="delete">Delete</option>
+                    </select>
+                    <span class="icon-cog"></span>
+                </div>
+                <div class="options-web">
+                    <a class="js-toggle-list-privacy nav-item" (click)="toggleListPrivacy()">
+                        <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
+                        <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
+                    </a>
+                    <a class="js-delete-list nav-item" (click)="deleteList()">
+                        <span class="icon-trash" title="Delete list"></span>
+                    </a>
+                </div>
+            </div>
+        </div>
+
+        <form class="js-todo-new todo-new input-symbol" (ngSubmit)="addNew()">
+            <input type="text" placeholder="Type to add new tasks" [(ngModel)]="newItemModel">
+            <span class="icon-add js-todo-add"></span>
+        </form>
+    </nav>
+
+    <div class="content-scrollable list-items">
+        <div *ngIf="todosReady">
+            <div *ngFor="let todo of todos">
+                <list-item [todo]="todo" [editing]="editingTodo" (editChange)="onTodoItemEditChange($event)"></list-item>
+            </div>
+            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
+                <div class="title-message">No tasks here</div>
+                <div class="subtitle-message">Add new tasks using the field above</div>
+            </div>
+        </div>
+        <div *ngIf="!todosReady" class="wrapper-message">
+            <div class="title-message">Loading tasks...</div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
deleted file mode 100644
index 3c25ee4..0000000
--- a/client/imports/components/list-show.ng2.html
+++ /dev/null
@@ -1,65 +0,0 @@
-<div class="page lists-show">
-    <nav class="js-title-nav" *ngIf="list">
-        <form *ngIf="editing" class="js-edit-form list-edit-form" (ngSubmit)="saveList()">
-            <input type="text" name="name" [(ngModel)]="editModel.name" (blur)="saveList()">
-            <div class="nav-group right">
-                <a href="#" class="js-cancel nav-item" (click)="editList(false)">
-                    <span class="icon-close js-cancel" title="Cancel"></span>
-                </a>
-            </div>
-        </form>
-        <div *ngIf="!editing">
-            <div class="nav-group">
-                <a href="#" class="js-menu nav-item">
-                    <span class="icon-list-unordered" title="Show Menu"></span>
-                </a>
-            </div>
-
-            <h1 class="js-edit-list title-page" (click)="editList(true)">
-                <span class="title-wrapper">{{list.name}}</span>
-                <span class="count-list">{{list.incompleteCount}}</span>
-            </h1>
-
-            <div class="nav-group right">
-                <div class="nav-item options-mobile">
-                    <select class="list-edit">
-                        <option disabled selected>Select an action</option>
-                        <option *ngIf="list.userId" value="public">Make Public</option>
-                        <option *ngIf="!list.userId" value="private">Make Private</option>
-                        <option value="delete">Delete</option>
-                    </select>
-                    <span class="icon-cog"></span>
-                </div>
-                <div class="options-web">
-                    <a class="js-toggle-list-privacy nav-item" (click)="toggleListPrivacy()">
-                        <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
-                        <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
-                    </a>
-                    <a class="js-delete-list nav-item" (click)="deleteList()">
-                        <span class="icon-trash" title="Delete list"></span>
-                    </a>
-                </div>
-            </div>
-        </div>
-
-        <form class="js-todo-new todo-new input-symbol" (ngSubmit)="addNew()">
-            <input type="text" placeholder="Type to add new tasks" [(ngModel)]="newItemModel">
-            <span class="icon-add js-todo-add"></span>
-        </form>
-    </nav>
-
-    <div class="content-scrollable list-items">
-        <div *ngIf="todosReady">
-            <div *ngFor="let todo of todos">
-                <list-item [todo]="todo" [editing]="editingTodo" (editChange)="onTodoItemEditChange($event)"></list-item>
-            </div>
-            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
-                <div class="title-message">No tasks here</div>
-                <div class="subtitle-message">Add new tasks using the field above</div>
-            </div>
-        </div>
-        <div *ngIf="!todosReady" class="wrapper-message">
-            <div class="title-message">Loading tasks...</div>
-        </div>
-    </div>
-</div>
\ No newline at end of file
diff --git a/client/imports/components/main-container.component.ts b/client/imports/components/main-container.component.ts
index 1333107..6f31a0d 100644
--- a/client/imports/components/main-container.component.ts
+++ b/client/imports/components/main-container.component.ts
@@ -13,7 +13,7 @@ import { insert } from '../../../imports/api/lists/methods.js';
 
 @Component({
   directives: [ROUTER_DIRECTIVES],
-  templateUrl: '/client/imports/components/main-container.ng2.html'
+  templateUrl: '/client/imports/components/main-container.html'
 })
 @RouteConfig([
   {path: 'lists/:_id', name: 'ListShow', component: ListShowComponent },
diff --git a/client/imports/components/main-container.html b/client/imports/components/main-container.html
new file mode 100644
index 0000000..0ff0645
--- /dev/null
+++ b/client/imports/components/main-container.html
@@ -0,0 +1,48 @@
+<div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
+    <section id="menu">
+        <div *ngIf="currentUser" class="btns-group-vertical">
+            <a class="js-user-menu btn-secondary" (click)="userMenuOpen = !userMenuOpen">
+                <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
+                <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
+
+                {{emailLocalPart()}}
+            </a>
+            <a *ngIf="userMenuOpen" class="js-logout btn-secondary" (click)="logout()">Logout</a>
+        </div>
+        <div *ngIf="!currentUser" class="btns-group">
+            <a [routerLink]="['Signin']" class="btn-secondary">Sign In</a>
+            <a [routerLink]="['Join']" class="btn-secondary">Join</a>
+        </div>
+
+        <div class="list-todos">
+            <a class="js-new-list link-list-new" (click)="addNewList()">
+                <span class="icon-plus"></span>
+                New List
+            </a>
+
+            <a *ngFor="let list of lists" [routerLink]="['ListShow', {_id: list._id}]" [title]="list.name"
+               class="list-todo" [ngClass]="{'active': isCurrentList(list)}">
+                <span *ngIf="list.userId" class="icon-lock"></span>
+                <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
+
+                {{list.name}}
+            </a>
+        </div>
+    </section>
+
+    <div *ngIf="!isConnected()" class="notifications">
+        <div class="notification">
+            <span class="icon-sync"></span>
+            <div class="meta">
+                <div class="title-notification">Trying to connect</div>
+                <div class="description">There seems to be a connection issue</div>
+            </div>
+        </div>
+    </div>
+
+    <div class="content-overlay"></div>
+
+    <div id="content-container">
+        <router-outlet></router-outlet>
+    </div>
+</div>
diff --git a/client/imports/components/main-container.ng2.html b/client/imports/components/main-container.ng2.html
deleted file mode 100644
index 0ff0645..0000000
--- a/client/imports/components/main-container.ng2.html
+++ /dev/null
@@ -1,48 +0,0 @@
-<div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
-    <section id="menu">
-        <div *ngIf="currentUser" class="btns-group-vertical">
-            <a class="js-user-menu btn-secondary" (click)="userMenuOpen = !userMenuOpen">
-                <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
-                <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
-
-                {{emailLocalPart()}}
-            </a>
-            <a *ngIf="userMenuOpen" class="js-logout btn-secondary" (click)="logout()">Logout</a>
-        </div>
-        <div *ngIf="!currentUser" class="btns-group">
-            <a [routerLink]="['Signin']" class="btn-secondary">Sign In</a>
-            <a [routerLink]="['Join']" class="btn-secondary">Join</a>
-        </div>
-
-        <div class="list-todos">
-            <a class="js-new-list link-list-new" (click)="addNewList()">
-                <span class="icon-plus"></span>
-                New List
-            </a>
-
-            <a *ngFor="let list of lists" [routerLink]="['ListShow', {_id: list._id}]" [title]="list.name"
-               class="list-todo" [ngClass]="{'active': isCurrentList(list)}">
-                <span *ngIf="list.userId" class="icon-lock"></span>
-                <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
-
-                {{list.name}}
-            </a>
-        </div>
-    </section>
-
-    <div *ngIf="!isConnected()" class="notifications">
-        <div class="notification">
-            <span class="icon-sync"></span>
-            <div class="meta">
-                <div class="title-notification">Trying to connect</div>
-                <div class="description">There seems to be a connection issue</div>
-            </div>
-        </div>
-    </div>
-
-    <div class="content-overlay"></div>
-
-    <div id="content-container">
-        <router-outlet></router-outlet>
-    </div>
-</div>
diff --git a/client/imports/components/signin.component.ts b/client/imports/components/signin.component.ts
index fe90288..d41d096 100644
--- a/client/imports/components/signin.component.ts
+++ b/client/imports/components/signin.component.ts
@@ -10,7 +10,7 @@ class SigninModel {
 
 @Component({
   directives: [],
-  templateUrl: '/client/imports/components/signin.ng2.html'
+  templateUrl: '/client/imports/components/signin.html'
 })
 export class SigninComponent extends MeteorComponent {
   private model : SigninModel;
diff --git a/client/imports/components/signin.html b/client/imports/components/signin.html
new file mode 100644
index 0000000..5c71bfa
--- /dev/null
+++ b/client/imports/components/signin.html
@@ -0,0 +1,33 @@
+<div class="page auth">
+    <nav>
+        <div class="nav-group">
+            <a href="#" class="js-menu nav-item">
+                <span class="icon-list-unordered"></span>
+            </a>
+        </div>
+    </nav>
+    <div class="content-scrollable">
+        <div class="wrapper-auth">
+            <div class="at-form">
+                <h1 class="title-auth">Signin</h1>
+                <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="list-errors">
+                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
+                </div>
+                <div class="at-pwd-form">
+                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
+                        <div class="input">
+                            <input [(ngModel)]="model.email" ngControl="email" #email="ngForm" type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.password" ngControl="password" #password="ngForm" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
+                            SIGN IN
+                        </button>
+                    </form>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
diff --git a/client/imports/components/signin.ng2.html b/client/imports/components/signin.ng2.html
deleted file mode 100644
index 5c71bfa..0000000
--- a/client/imports/components/signin.ng2.html
+++ /dev/null
@@ -1,33 +0,0 @@
-<div class="page auth">
-    <nav>
-        <div class="nav-group">
-            <a href="#" class="js-menu nav-item">
-                <span class="icon-list-unordered"></span>
-            </a>
-        </div>
-    </nav>
-    <div class="content-scrollable">
-        <div class="wrapper-auth">
-            <div class="at-form">
-                <h1 class="title-auth">Signin</h1>
-                <p class="subtitle-auth">Signing in allows you to have private lists</p>
-                <div class="list-errors">
-                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
-                </div>
-                <div class="at-pwd-form">
-                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
-                        <div class="input">
-                            <input [(ngModel)]="model.email" ngControl="email" #email="ngForm" type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
-                        </div>
-                        <div class="input">
-                            <input [(ngModel)]="model.password" ngControl="password" #password="ngForm" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
-                        </div>
-                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
-                            SIGN IN
-                        </button>
-                    </form>
-                </div>
-            </div>
-        </div>
-    </div>
-</div>
\ No newline at end of file
diff --git a/client/index.html b/client/index.html
new file mode 100755
index 0000000..e80ca6a
--- /dev/null
+++ b/client/index.html
@@ -0,0 +1,12 @@
+<head>
+  <meta charset="utf-8">
+  <title>Todos - All your todos synced wherever you happen to be</title>
+  <meta name="description" content="The simple todo list that keeps your todos in sync everywhere free forever. Todos is open source and powered by Meteor.">
+  <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
+  <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
+  <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
+  <base href="/">
+</head>
+<body>
+    <app></app>
+</body>
\ No newline at end of file
diff --git a/client/index.ng2.html b/client/index.ng2.html
deleted file mode 100755
index e80ca6a..0000000
--- a/client/index.ng2.html
+++ /dev/null
@@ -1,12 +0,0 @@
-<head>
-  <meta charset="utf-8">
-  <title>Todos - All your todos synced wherever you happen to be</title>
-  <meta name="description" content="The simple todo list that keeps your todos in sync everywhere free forever. Todos is open source and powered by Meteor.">
-  <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
-  <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
-  <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
-  <base href="/">
-</head>
-<body>
-    <app></app>
-</body>
\ No newline at end of file
-- 
2.6.4

