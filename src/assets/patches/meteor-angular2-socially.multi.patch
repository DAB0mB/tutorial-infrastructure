From b82349bbaba9cb0ece984d9c94d50afb5f592cb0 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Mon, 10 Oct 2016 21:46:52 -0200
Subject: [PATCH 001/304] Step 1.1: Remove both, client and server

---
 both/collections/demo.collection.ts               |  4 -
 both/models/demo.model.ts                         |  4 -
 client/imports/app/app.component.html             |  4 -
 client/imports/app/app.component.scss             |  3 -
 client/imports/app/app.component.ts               | 14 ----
 client/imports/app/app.module.ts                  | 28 -------
 client/imports/app/demo/demo-data.service.test.ts | 19 -----
 client/imports/app/demo/demo-data.service.ts      | 17 -----
 client/imports/app/demo/demo.component.html       |  8 --
 client/imports/app/demo/demo.component.scss       |  3 -
 client/imports/app/demo/demo.component.test.ts    | 89 -----------------------
 client/imports/app/demo/demo.component.ts         | 24 ------
 client/imports/app/index.ts                       |  2 -
 client/index.html                                 |  6 --
 client/init.test.ts                               | 12 ---
 client/lib/init.test.ts                           | 29 --------
 client/main.ts                                    | 12 ---
 client/styles/main.scss                           |  3 -
 server/imports/server-main/main.test.ts           | 40 ----------
 server/imports/server-main/main.ts                | 26 -------
 server/main.ts                                    |  4 -
 21 files changed, 351 deletions(-)
 delete mode 100644 both/collections/demo.collection.ts
 delete mode 100644 both/models/demo.model.ts
 delete mode 100644 client/imports/app/app.component.html
 delete mode 100644 client/imports/app/app.component.scss
 delete mode 100644 client/imports/app/app.component.ts
 delete mode 100644 client/imports/app/app.module.ts
 delete mode 100644 client/imports/app/demo/demo-data.service.test.ts
 delete mode 100644 client/imports/app/demo/demo-data.service.ts
 delete mode 100644 client/imports/app/demo/demo.component.html
 delete mode 100644 client/imports/app/demo/demo.component.scss
 delete mode 100644 client/imports/app/demo/demo.component.test.ts
 delete mode 100644 client/imports/app/demo/demo.component.ts
 delete mode 100644 client/imports/app/index.ts
 delete mode 100644 client/index.html
 delete mode 100644 client/init.test.ts
 delete mode 100644 client/lib/init.test.ts
 delete mode 100644 client/main.ts
 delete mode 100644 client/styles/main.scss
 delete mode 100644 server/imports/server-main/main.test.ts
 delete mode 100644 server/imports/server-main/main.ts
 delete mode 100644 server/main.ts

diff --git a/both/collections/demo.collection.ts b/both/collections/demo.collection.ts
deleted file mode 100644
index 24584d4..0000000
--- a/both/collections/demo.collection.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-import { MongoObservable } from 'meteor-rxjs';
-import {Demo} from "../models/demo.model";
-
-export const DemoCollection = new MongoObservable.Collection<Demo>('demo-collection');
\ No newline at end of file
diff --git a/both/models/demo.model.ts b/both/models/demo.model.ts
deleted file mode 100644
index 867b4d2..0000000
--- a/both/models/demo.model.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-export interface Demo {
-  name: string;
-  age: number;
-}
\ No newline at end of file
diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
deleted file mode 100644
index 1d40faa..0000000
--- a/client/imports/app/app.component.html
+++ /dev/null
@@ -1,4 +0,0 @@
-<div>
-    <h1>Hello Angular2-Meteor!</h1>
-    <demo></demo>
-</div>
diff --git a/client/imports/app/app.component.scss b/client/imports/app/app.component.scss
deleted file mode 100644
index 6962319..0000000
--- a/client/imports/app/app.component.scss
+++ /dev/null
@@ -1,3 +0,0 @@
-app {
-
-}
\ No newline at end of file
diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
deleted file mode 100644
index d4b9e9a..0000000
--- a/client/imports/app/app.component.ts
+++ /dev/null
@@ -1,14 +0,0 @@
-import { Component } from '@angular/core';
-
-import template from './app.component.html';
-import style from './app.component.scss';
-
-@Component({
-  selector: 'app',
-  template,
-  styles: [ style ]
-})
-export class AppComponent {
-  constructor() {
-  }
-}
diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
deleted file mode 100644
index 1a3c354..0000000
--- a/client/imports/app/app.module.ts
+++ /dev/null
@@ -1,28 +0,0 @@
-import { NgModule } from '@angular/core';
-import { BrowserModule } from '@angular/platform-browser';
-import { AppComponent } from './app.component';
-import { DemoComponent } from './demo/demo.component';
-import { DemoDataService } from './demo/demo-data.service';
-
-@NgModule({
-  // Components, Pipes, Directive
-  declarations: [
-    AppComponent,
-    DemoComponent
-  ],
-  // Entry Components
-  entryComponents: [
-    AppComponent
-  ],
-  // Providers
-  providers: [
-    DemoDataService
-  ],
-  // Modules
-  imports: [
-    BrowserModule
-  ],
-  // Main Component
-  bootstrap: [ AppComponent ]
-})
-export class AppModule {}
diff --git a/client/imports/app/demo/demo-data.service.test.ts b/client/imports/app/demo/demo-data.service.test.ts
deleted file mode 100644
index 8d70de0..0000000
--- a/client/imports/app/demo/demo-data.service.test.ts
+++ /dev/null
@@ -1,19 +0,0 @@
-// chai uses as asset library
-import { assert } from 'chai';
-
-// Project imports
-import { DemoDataService } from './demo-data.service';
-import { Observable } from "rxjs";
-
-describe('DemoDataService', () => {
-  let demoDataService:DemoDataService;
-
-  beforeEach(() => {
-    // Create the service instance
-    demoDataService = new DemoDataService();
-  });
-
-  it('Should return Observable when requesting the data', () => {
-    assert.isTrue(demoDataService.getData() instanceof Observable);
-  });
-});
diff --git a/client/imports/app/demo/demo-data.service.ts b/client/imports/app/demo/demo-data.service.ts
deleted file mode 100644
index 517bb1c..0000000
--- a/client/imports/app/demo/demo-data.service.ts
+++ /dev/null
@@ -1,17 +0,0 @@
-import { Injectable } from '@angular/core';
-import { ObservableCursor } from 'meteor-rxjs';
-import { Demo } from "../../../../both/models/demo.model";
-import { DemoCollection } from "../../../../both/collections/demo.collection";
-
-@Injectable()
-export class DemoDataService {
-  private data : ObservableCursor<Demo>;
-
-  constructor() {
-    this.data = DemoCollection.find({});
-  }
-
-  public getData() : ObservableCursor<Demo> {
-    return this.data;
-  }
-}
diff --git a/client/imports/app/demo/demo.component.html b/client/imports/app/demo/demo.component.html
deleted file mode 100644
index 38180c6..0000000
--- a/client/imports/app/demo/demo.component.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<h2>{{greeting}}</h2>
-
-This is the available data:
-<ul>
-    <li *ngFor="let item of data | async">
-        {{item.name}} ({{item.age}})
-    </li>
-</ul>
diff --git a/client/imports/app/demo/demo.component.scss b/client/imports/app/demo/demo.component.scss
deleted file mode 100644
index 9e27489..0000000
--- a/client/imports/app/demo/demo.component.scss
+++ /dev/null
@@ -1,3 +0,0 @@
-demo {
-
-}
diff --git a/client/imports/app/demo/demo.component.test.ts b/client/imports/app/demo/demo.component.test.ts
deleted file mode 100644
index 6903047..0000000
--- a/client/imports/app/demo/demo.component.test.ts
+++ /dev/null
@@ -1,89 +0,0 @@
-// chai uses as asset library
-import {assert} from 'chai';
-
-// Angular 2 tests imports
-import {TestBed, TestModuleMetadata} from "@angular/core/testing";
-
-// Project imports
-import {DemoComponent} from './demo.component';
-import {Demo} from "../../../../both/models/demo.model";
-import {DemoDataService} from "./demo-data.service";
-import {Observable, Subject, BehaviorSubject} from "rxjs";
-
-describe('DemoComponent', () => {
-  let demoComponentInstance: DemoComponent;
-  let demoComponentElement;
-  let componentFixture;
-
-  let mockData = new BehaviorSubject([]);
-  mockData.next([
-    <Demo>{
-      name: 'Test',
-      age: 10
-    }
-  ]);
-
-  let mockDataService = {
-    getData: () => mockData
-  };
-
-  beforeEach(() => {
-    TestBed.configureTestingModule(<TestModuleMetadata>{
-      declarations: [DemoComponent],
-      providers: [
-        {provide: DemoDataService, useValue: mockDataService}
-      ]
-    });
-
-    componentFixture = TestBed.createComponent(DemoComponent);
-    demoComponentInstance = componentFixture.componentInstance;
-    demoComponentElement = componentFixture.debugElement;
-  });
-
-  describe('@Component instance', () => {
-    it('Should have a greeting string on the component', () => {
-      assert.typeOf(demoComponentInstance.greeting, 'string', 'Greeting should be a string!');
-    });
-
-    it('Should say hello to the component on the greeting string', () => {
-      assert.equal(demoComponentInstance.greeting, 'Hello Demo Component!');
-    });
-
-    it('Should have an Observable (from the mock) of the instance', () => {
-      demoComponentInstance.ngOnInit();
-      assert.isTrue(demoComponentInstance.data instanceof Observable);
-    });
-
-    it('Should have an items in the Observable', (done) => {
-      demoComponentInstance.ngOnInit();
-      assert.isTrue(demoComponentInstance.data instanceof Observable);
-
-      demoComponentInstance.data.subscribe((data) => {
-        assert.equal(data.length, 1);
-        assert.typeOf(data, 'array');
-
-        done();
-      });
-    });
-  });
-
-  describe('@Component view', () => {
-    it('Should print the greeting to the screen', () => {
-      componentFixture.detectChanges();
-      assert.include(demoComponentElement.nativeElement.innerHTML, 'Hello Demo Component');
-    });
-
-    it('Should change the greeting when it changes', () => {
-      componentFixture.detectChanges();
-      assert.include(demoComponentElement.nativeElement.innerHTML, 'Hello Demo Component');
-      demoComponentInstance.greeting = 'New Test Greeting';
-      componentFixture.detectChanges();
-      assert.include(demoComponentElement.nativeElement.innerHTML, 'New Test Greeting');
-    });
-
-    it('Should display a list of items in the screen', () => {
-      componentFixture.detectChanges();
-      assert.isNotNull(demoComponentElement.nativeElement.querySelector('ul'));
-    });
-  });
-});
diff --git a/client/imports/app/demo/demo.component.ts b/client/imports/app/demo/demo.component.ts
deleted file mode 100644
index 63ab8f5..0000000
--- a/client/imports/app/demo/demo.component.ts
+++ /dev/null
@@ -1,24 +0,0 @@
-import { Component, OnInit } from '@angular/core';
-import { Observable } from 'rxjs/Observable';
-import { DemoDataService } from './demo-data.service';
-import { Demo } from "../../../../both/models/demo.model";
-import template from './demo.component.html';
-import style from "./demo.component.scss";
-
-@Component({
-  selector: 'demo',
-  template,
-  styles: [ style ]
-})
-export class DemoComponent implements OnInit {
-  greeting: string;
-  data: Observable<Demo[]>;
-
-  constructor(private demoDataService: DemoDataService) {
-    this.greeting = 'Hello Demo Component!';
-  }
-
-  ngOnInit() {
-    this.data = this.demoDataService.getData().zone();
-  }
-}
diff --git a/client/imports/app/index.ts b/client/imports/app/index.ts
deleted file mode 100644
index 875bdb2..0000000
--- a/client/imports/app/index.ts
+++ /dev/null
@@ -1,2 +0,0 @@
-export * from './app.component';
-export * from './app.module';
diff --git a/client/index.html b/client/index.html
deleted file mode 100644
index d3675e5..0000000
--- a/client/index.html
+++ /dev/null
@@ -1,6 +0,0 @@
-<head>
-    <base href="/">
-</head>
-<body>
-  <app>Loading...</app>
-</body>
diff --git a/client/init.test.ts b/client/init.test.ts
deleted file mode 100644
index cd07c0b..0000000
--- a/client/init.test.ts
+++ /dev/null
@@ -1,12 +0,0 @@
-// angular2-meteor polyfills required for testing
-import 'angular2-meteor-tests-polyfills';
-
-// Angular 2 tests imports
-import { platformBrowserDynamicTesting, BrowserDynamicTestingModule } from '@angular/platform-browser-dynamic';
-import { TestBed } from '@angular/core';
-
-// Init the test framework
-TestBed.initTestEnvironment(
-  BrowserDynamicTestingModule,
-  platformBrowserDynamicTesting()
-);
diff --git a/client/lib/init.test.ts b/client/lib/init.test.ts
deleted file mode 100644
index 66dd4a5..0000000
--- a/client/lib/init.test.ts
+++ /dev/null
@@ -1,29 +0,0 @@
-// angular2-meteor polyfills
-import 'angular2-meteor-polyfills';
-import 'zone.js/dist/async-test';
-import 'zone.js/dist/fake-async-test';
-import 'zone.js/dist/sync-test';
-import 'zone.js/dist/proxy';
-
-// angular2-meteor polyfills required for testing
-import 'angular2-meteor-tests-polyfills';
-
-// Angular 2 tests imports
-import { TestBed, getTestBed } from '@angular/core/testing';
-import { platformBrowserDynamicTesting, BrowserDynamicTestingModule } from "@angular/platform-browser-dynamic/testing";
-
-// Init the test framework
-TestBed.initTestEnvironment(
-  BrowserDynamicTestingModule,
-  platformBrowserDynamicTesting()
-);
-
-declare var Mocha: {Hook: any}, mocha: { suite : { _beforeEach: any, ctx: any }};
-
-const hook = new Mocha.Hook("Modified Angular beforeEach Hook", () => {
-  getTestBed().resetTestingModule();
-});
-
-hook.ctx = mocha.suite.ctx;
-hook.parent = mocha.suite;
-mocha.suite._beforeEach = [hook];
\ No newline at end of file
diff --git a/client/main.ts b/client/main.ts
deleted file mode 100644
index 8f35a92..0000000
--- a/client/main.ts
+++ /dev/null
@@ -1,12 +0,0 @@
-import 'angular2-meteor-polyfills';
-
-import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
-import { enableProdMode } from '@angular/core';
-import { Meteor } from "meteor/meteor";
-import { AppModule } from './imports/app';
-
-enableProdMode();
-
-Meteor.startup(() => {
-   platformBrowserDynamic().bootstrapModule(AppModule);
-});
diff --git a/client/styles/main.scss b/client/styles/main.scss
deleted file mode 100644
index 1983cbe..0000000
--- a/client/styles/main.scss
+++ /dev/null
@@ -1,3 +0,0 @@
-body, html {
-
-}
\ No newline at end of file
diff --git a/server/imports/server-main/main.test.ts b/server/imports/server-main/main.test.ts
deleted file mode 100644
index 789a5cd..0000000
--- a/server/imports/server-main/main.test.ts
+++ /dev/null
@@ -1,40 +0,0 @@
-// chai uses as asset library
-import * as chai from 'chai';
-import * as spies from 'chai-spies';
-import StubCollections from 'meteor/hwillson:stub-collections';
-
-import { Main } from './main';
-import { DemoCollection } from "../../../both/collections/demo.collection";
-
-chai.use(spies);
-
-describe('Server Main', () => {
-  let mainInstance : Main;
-
-  beforeEach(() => {
-    // Creating database mock
-    StubCollections.stub(DemoCollection);
-
-    // Create instance of main class
-    mainInstance = new Main();
-  });
-
-  afterEach(() => {
-    // Restore database
-    StubCollections.restore();
-  });
-
-  it('Should call initFakeData on startup', () => {
-    mainInstance.initFakeData = chai.spy();
-    mainInstance.start();
-
-    chai.expect(mainInstance.initFakeData).to.have.been.called();
-  });
-
-  it('Should call insert 3 times when init fake data', () => {
-    DemoCollection.insert = chai.spy();
-    mainInstance.initFakeData();
-
-    chai.expect(DemoCollection.insert).to.have.been.called.exactly(3);
-  });
-});
diff --git a/server/imports/server-main/main.ts b/server/imports/server-main/main.ts
deleted file mode 100644
index 4fc48b8..0000000
--- a/server/imports/server-main/main.ts
+++ /dev/null
@@ -1,26 +0,0 @@
-import {DemoCollection} from "../../../both/collections/demo.collection";
-import {Demo} from "../../../both/models/demo.model";
-export class Main {
-  start(): void {
-    this.initFakeData();
-  }
-
-  initFakeData(): void {
-    if (DemoCollection.find({}).cursor.count() === 0) {
-      const data: Demo[] = [{
-        name: 'Dotan',
-        age: 25
-      }, {
-        name: 'Liran',
-        age: 26
-      }, {
-        name: 'Uri',
-        age: 30
-      }];
-      
-      data.forEach((obj: Demo) => {
-        DemoCollection.insert(obj);
-      });
-    }
-  }
-}
diff --git a/server/main.ts b/server/main.ts
deleted file mode 100644
index de5d825..0000000
--- a/server/main.ts
+++ /dev/null
@@ -1,4 +0,0 @@
-import { Main } from './imports/server-main/main';
-
-const mainInstance = new Main();
-mainInstance.start();
-- 
2.10.2


From 36abb0f40219aa4dcf590a404b6078d86826b3c3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:13:29 +0200
Subject: [PATCH 002/304] Step 1.2: Create index.html

---
 client/index.html | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 client/index.html

diff --git a/client/index.html b/client/index.html
new file mode 100644
index 0000000..292767b
--- /dev/null
+++ b/client/index.html
@@ -0,0 +1,6 @@
+<head>
+  <base href="/">
+</head>
+<body>
+  Hello World!
+</body>
\ No newline at end of file
-- 
2.10.2


From 60220e8613974e035e096d2fce513ffd1400be6b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:14:27 +0200
Subject: [PATCH 003/304] Step 1.3: Create App component

---
 client/imports/app/app.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 client/imports/app/app.component.ts

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
new file mode 100644
index 0000000..9c5caf4
--- /dev/null
+++ b/client/imports/app/app.component.ts
@@ -0,0 +1,6 @@
+import { Component } from '@angular/core';
+
+@Component({
+  selector: 'app'
+})
+export class AppComponent {}
-- 
2.10.2


From 3ac95cc8802e78a9e7dd20565f2e2e283304b661 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:14:59 +0200
Subject: [PATCH 004/304] Step 1.4: Create template for the App component

---
 client/imports/app/app.component.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/imports/app/app.component.html

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
new file mode 100644
index 0000000..c57eff5
--- /dev/null
+++ b/client/imports/app/app.component.html
@@ -0,0 +1 @@
+Hello World!
\ No newline at end of file
-- 
2.10.2


From bf4799906bb8a3dac0397f2fd398d4d14b969780 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:15:41 +0200
Subject: [PATCH 005/304] Step 1.5: Implement template

---
 client/imports/app/app.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 9c5caf4..91e1a06 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -1,6 +1,9 @@
 import { Component } from '@angular/core';
 
+import template from './app.component.html';
+
 @Component({
-  selector: 'app'
+  selector: 'app',
+  template
 })
 export class AppComponent {}
-- 
2.10.2


From bdc242c395210bc46a0b0d66e1946ceabac01a0a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:16:18 +0200
Subject: [PATCH 006/304] Step 1.6: Add App component to index.html

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index 292767b..4e8596c 100644
--- a/client/index.html
+++ b/client/index.html
@@ -2,5 +2,5 @@
   <base href="/">
 </head>
 <body>
-  Hello World!
+  <app>Loading...</app>
 </body>
\ No newline at end of file
-- 
2.10.2


From 7cf7619610dc80ed328e42e95433d7fb30475da8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:19:05 +0200
Subject: [PATCH 007/304] Step 1.7: Create AppModule

---
 client/imports/app/app.module.ts | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/imports/app/app.module.ts

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
new file mode 100644
index 0000000..6eda2d2
--- /dev/null
+++ b/client/imports/app/app.module.ts
@@ -0,0 +1,9 @@
+import { NgModule } from '@angular/core';
+import { BrowserModule } from '@angular/platform-browser';
+
+@NgModule({
+  imports: [
+    BrowserModule
+  ]
+})
+export class AppModule {}
\ No newline at end of file
-- 
2.10.2


From f63854419cb07c081c197e191a9f7d064ba2804d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:20:10 +0200
Subject: [PATCH 008/304] Step 1.8: Add App component to App module

---
 client/imports/app/app.module.ts | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 6eda2d2..50a22d6 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -1,9 +1,17 @@
 import { NgModule } from '@angular/core';
 import { BrowserModule } from '@angular/platform-browser';
 
+import { AppComponent } from './app.component';
+
 @NgModule({
   imports: [
     BrowserModule
+  ],
+  declarations: [
+    AppComponent
+  ],
+  bootstrap: [
+    AppComponent
   ]
 })
 export class AppModule {}
\ No newline at end of file
-- 
2.10.2


From 0ea32eef7919673bcab445d7b6c33b6512129535 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 16:22:46 +0200
Subject: [PATCH 009/304] Step 1.9: Create main entry point

---
 client/main.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/main.ts

diff --git a/client/main.ts b/client/main.ts
new file mode 100644
index 0000000..c5323fd
--- /dev/null
+++ b/client/main.ts
@@ -0,0 +1,8 @@
+import 'angular2-meteor-polyfills';
+
+import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
+
+import { AppModule } from './imports/app/app.module';
+
+const platform = platformBrowserDynamic();
+platform.bootstrapModule(AppModule);
\ No newline at end of file
-- 
2.10.2


From 57c8fddca004cd3ac14fc4a0b60161db954585d3 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 13:57:15 -0200
Subject: [PATCH 010/304] Step 1: Bootstrapping

---
 manuals/templates/step1.md | 222 ++++++++++++++++++++++++++++
 manuals/views/step1.md     | 353 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 575 insertions(+)
 create mode 100644 manuals/templates/step1.md
 create mode 100644 manuals/views/step1.md

diff --git a/manuals/templates/step1.md b/manuals/templates/step1.md
new file mode 100644
index 0000000..d658133
--- /dev/null
+++ b/manuals/templates/step1.md
@@ -0,0 +1,222 @@
+Let's start building our Angular 2.0 Meteor Socially app.
+
+In this step, we will:
+
+- Setup Meteor and create a working app
+- Become familiar with the app's structure
+- Connect an Angular 2 front end
+- Run the application in the browser
+
+# Meteor Setup
+
+First step — let's install Meteor!
+
+Open your command line and paste this command:
+
+    $ curl https://install.meteor.com/ | sh
+
+
+> If you are on a Windows machine, go [here](https://www.meteor.com/install) to install Meteor.
+
+Now let's create our app — write this in the command line:
+
+    $ meteor create --example angular2-boilerplate socially
+    
+> Alternatively, use your web browser to access the link:
+>
+>    https://github.com/bsliran/angular2-meteor-base
+>    
+> Download the template application, and unzip the files inside. Rename the folder to "socially" and place it into the default directory.
+
+Now let's see what we've got. Go into the new folder:
+
+    $ cd socially
+    
+Now, we install npm packages:
+
+    $ meteor npm install
+
+(Note: More explanation on NPM packages on the bottom of the page.)    
+
+Run the app like so:
+
+    $ meteor
+
+    => Started proxy
+    => Started MongoDB.
+    => Started your app.
+    >=> App running at: http://localhost:3000/
+
+Now go to [http://localhost:3000/](http://localhost:3000/)
+and look at the amazing app that's running on your computer!
+
+We now have a fully functional app which includes both a server and a client!
+
+We are going to add our own files for this tutorial. So let's start by deleting all the contents in these three folders:
+
+    - /client             (delete)
+    - /both               (delete)
+    - /server             (delete)
+
+Now we can start building our app.
+
+Create a new `index.html` file in the client folder, and place this code inside. Then run the app ag
+{{{diff_step 1.2}}}
+
+And Meteor build tool refreshes automatically and our app is updated in the browser.
+
+Note that there is no `<html>` tag in our code.
+
+This is because of how Meteor structures and serves files to the client.
+
+Meteor scans all the HTML files in your application and concatenates them together to make it simpler for us.
+
+Concatenation means merging the content of all `HTML`, `HEAD` and `BODY` tags found inside these HTML files together.
+
+So in our case, Meteor found our `index.html` file, recognized it was meant for the client only (because it's inside the `client` folder), found the `BODY` tag inside and added it's content to the `BODY` tag of the main generated file.
+
+> (`right-click` -> `inspect element` on the page to see the generated file Meteor served to the client)
+
+## Typescript
+
+An Angular 2 Meteor app can be written in regular JavaScript (ES5), the new JavaScript (ES2015 aka ES6) or TypeScript on both the server and the client.
+
+TypeScript is the recommended choice by the Angular team so in this tutorial, we'll be using TypeScript.
+
+Don't worry if you're not familiar with TypeScript. Valid ES6 or ES5 JavaScript is a valid TypeScript and we will explain new concepts when we would need them in the tutorial.
+
+> If you'd like to deep dive into TypeScript, we recommend the [official tutorial](http://www.typescriptlang.org/Tutorial).
+
+To start, we need to make sure our `tsconfig.json` file (in our root directory) has the basic configurations below which are required to run an Angular 2.0 Meteor app.  
+
+```json
+{
+  "compilerOptions": {
+    "target": "es5",
+    "lib": [
+      "es6",
+      "dom"
+    ],
+    "module": "commonjs",
+    "moduleResolution": "node",
+    "experimentalDecorators": true,
+    "emitDecoratorMetadata": true,
+    "sourceMap": true
+  },
+  "exclude": [
+    "node_modules"
+  ],
+  "files": [
+    "typings.d.ts"
+  ],
+  "compileOnSave": false,
+  "angularCompilerOptions": {
+    "genDir": "aot",
+    "skipMetadataEmit": true
+  }
+}
+```
+
+To learn more about Typescript compiler options, [click here](http://www.typescriptlang.org/docs/handbook/compiler-options.html).
+
+### @types
+
+We need to let Typescript know about all the types in the libraries we depend upon.
+
+In order to do that — thus adding full type-checking support at this stage — we'll use NPM packages that provides `d.ts` files, which are the TypeScript declaration files.
+
+This is a top level definition file, called `typings.d.ts` which imports all the other types declarations, and the `tsconfig.json` file imports this file.
+
+Those repositories called `@types`, and you might find some of them already in the Angular 2 boilerplate, and we will later add more `@types` and write some of our own.
+
+For example, package like `chai` that not written in TypeScript, does not provide it's own `.d.ts` file, so we need to also install `@types/chai` from NPM in order to get TypeScript support for this package.
+
+# Root Component
+
+Angular 2 code is structured as a tree of components.
+
+Each component is a controller with an attached view.
+
+Since it's a tree, there should be a root component and branch components
+that stem out of it. So let's create our root component.
+
+Create a new `app.component.ts` file inside of the `client` fol
+{{{diff_step 1.3}}}
+
+First we're importing the dependency we needed from `@angular/core`.
+
+Notice, the Component's selector matches the `<app>` tag we will provide in `index.html` below, and the View template creates the view.
+
+The class, AppComponent, inherits from `@Component` which is part of Angular 2.
+
+We have defined the component, let's create the templ
+{{{diff_step 1.4}}}
+
+Now, we can use it inside of the compon
+{{{diff_step 1.5}}}
+
+**About templates**
+
+Thanks to `angular2-compilers` package, we can import any html file into TypeScript space as a module.
+"But what we get from that module?" You ask. The answer is simply, it's a string. `angular2-compilers` converts html file's contents into string.
+
+> Since a component doesn't exist without its template, **we recommend** you to use a ***template as a string*** method, instead of loading it asynchronously (`templateUrl`).
+
+> In our opinion, this is the best practice of creating components.
+
+Finally, we can `bootstrap` our component, thus, marking it as the root component.
+
+First thing to do is to add `<app/>` element to the `<body
+{{{diff_step 1.6}}}
+
+Great! Now we have our root component, we will need to create NgModule.
+
+NgModule defines the Angular2 module - it's external modules that in use, declarations, providers, exports and defines the main component to bootstrap.
+
+You can read more about NgModule in [Angular 2 documentation](https://angular.io/docs/ts/latest/guide/ngmodule.html).
+
+Let's create our NgMod
+{{{diff_step 1.7}}}
+
+> We will import `BrowserModule` which is the basic and internal Component we will use later in our view templates.
+
+And let's declare our `AppComponent` and add it as root component that needed to be bootstra
+{{{diff_step 1.8}}}
+
+Now we need to create an entry point for project - we will create it directly under `client` directory, because we want this file to be loaded when Meteor starts our project.
+
+The main entry file uses Angular 2 `bootstrapModule` with our new NgMod
+{{{diff_step 1.9}}}
+
+Now let's run the app:
+
+    $ meteor
+
+> If the template doesn't change, it may be because your browser is caching the original template.
+> Learn [how to disable caching during development](https://developer.chrome.com/devtools/docs/settings) in Chrome.
+
+And we have our first Angular 2.0 Meteor app working!
+
+Let's go through some of the technologies we used till now:
+
+# npm
+
+Npm stands for Node Packages Manager, which manages your dependencies and external packages.
+
+Meteor supports NPM packages (starting from 1.3), and when we created our project - a file named `package.json` was created - this file contains the project's npm dependencies and some other metadata.
+
+To install the current project dependencies, type in the command line `npm install`.
+
+We also used Meteor packages (`meteor add ...`).  Meteor packages have some abilities that npm packages don't have yet so we will use some packages from there as well.
+
+## ES6 Modules and CommonJS
+
+Meteor supports [ES6 modules](https://developer.mozilla.org/en/docs/web/javascript/reference/statements/import) out of the box.
+
+This feature provides the ability to use `import` / `export` statements and gives you a full control for modules loading and dependencies.
+
+You can read more about how modules work and how it's based on CommonJS [on the Meteor docs](http://docs.meteor.com/#/full/modules).
+
+# Summary
+
+Let's continue to [step 1](/tutorials/angular2/static-template) and add some content to our application.
diff --git a/manuals/views/step1.md b/manuals/views/step1.md
new file mode 100644
index 0000000..f6edc50
--- /dev/null
+++ b/manuals/views/step1.md
@@ -0,0 +1,353 @@
+[{]: <region> (header)
+# Step 1: Bootstrapping
+[}]: #
+[{]: <region> (body)
+Let's start building our Angular 2.0 Meteor Socially app.
+
+In this step, we will:
+
+- Setup Meteor and create a working app
+- Become familiar with the app's structure
+- Connect an Angular 2 front end
+- Run the application in the browser
+
+# Meteor Setup
+
+First step — let's install Meteor!
+
+Open your command line and paste this command:
+
+    $ curl https://install.meteor.com/ | sh
+
+
+> If you are on a Windows machine, go [here](https://www.meteor.com/install) to install Meteor.
+
+Now let's create our app — write this in the command line:
+
+    $ meteor create --example angular2-boilerplate socially
+    
+> Alternatively, use your web browser to access the link:
+>
+>    https://github.com/bsliran/angular2-meteor-base
+>    
+> Download the template application, and unzip the files inside. Rename the folder to "socially" and place it into the default directory.
+
+Now let's see what we've got. Go into the new folder:
+
+    $ cd socially
+    
+Now, we install npm packages:
+
+    $ meteor npm install
+
+(Note: More explanation on NPM packages on the bottom of the page.)    
+
+Run the app like so:
+
+    $ meteor
+
+    => Started proxy
+    => Started MongoDB.
+    => Started your app.
+    >=> App running at: http://localhost:3000/
+
+Now go to [http://localhost:3000/](http://localhost:3000/)
+and look at the amazing app that's running on your computer!
+
+We now have a fully functional app which includes both a server and a client!
+
+We are going to add our own files for this tutorial. So let's start by deleting all the contents in these three folders:
+
+    - /client             (delete)
+    - /both               (delete)
+    - /server             (delete)
+
+Now we can start building our app.
+
+Create a new `index.html` file in the client folder, and place this code inside. Then run the app ag
+[{]: <helper> (diff_step 1.2)
+#### Step 1.2: Create index.html
+
+##### Added client/index.html
+```diff
+@@ -0,0 +1,6 @@
++┊ ┊1┊<head>
++┊ ┊2┊  <base href="/">
++┊ ┊3┊</head>
++┊ ┊4┊<body>
++┊ ┊5┊  Hello World!
++┊ ┊6┊</body>🚫↵
+```
+[}]: #
+
+And Meteor build tool refreshes automatically and our app is updated in the browser.
+
+Note that there is no `<html>` tag in our code.
+
+This is because of how Meteor structures and serves files to the client.
+
+Meteor scans all the HTML files in your application and concatenates them together to make it simpler for us.
+
+Concatenation means merging the content of all `HTML`, `HEAD` and `BODY` tags found inside these HTML files together.
+
+So in our case, Meteor found our `index.html` file, recognized it was meant for the client only (because it's inside the `client` folder), found the `BODY` tag inside and added it's content to the `BODY` tag of the main generated file.
+
+> (`right-click` -> `inspect element` on the page to see the generated file Meteor served to the client)
+
+## Typescript
+
+An Angular 2 Meteor app can be written in regular JavaScript (ES5), the new JavaScript (ES2015 aka ES6) or TypeScript on both the server and the client.
+
+TypeScript is the recommended choice by the Angular team so in this tutorial, we'll be using TypeScript.
+
+Don't worry if you're not familiar with TypeScript. Valid ES6 or ES5 JavaScript is a valid TypeScript and we will explain new concepts when we would need them in the tutorial.
+
+> If you'd like to deep dive into TypeScript, we recommend the [official tutorial](http://www.typescriptlang.org/Tutorial).
+
+To start, we need to make sure our `tsconfig.json` file (in our root directory) has the basic configurations below which are required to run an Angular 2.0 Meteor app.  
+
+```json
+{
+  "compilerOptions": {
+    "target": "es5",
+    "lib": [
+      "es6",
+      "dom"
+    ],
+    "module": "commonjs",
+    "moduleResolution": "node",
+    "experimentalDecorators": true,
+    "emitDecoratorMetadata": true,
+    "sourceMap": true
+  },
+  "exclude": [
+    "node_modules"
+  ],
+  "files": [
+    "typings.d.ts"
+  ],
+  "compileOnSave": false,
+  "angularCompilerOptions": {
+    "genDir": "aot",
+    "skipMetadataEmit": true
+  }
+}
+```
+
+To learn more about Typescript compiler options, [click here](http://www.typescriptlang.org/docs/handbook/compiler-options.html).
+
+### @types
+
+We need to let Typescript know about all the types in the libraries we depend upon.
+
+In order to do that — thus adding full type-checking support at this stage — we'll use NPM packages that provides `d.ts` files, which are the TypeScript declaration files.
+
+This is a top level definition file, called `typings.d.ts` which imports all the other types declarations, and the `tsconfig.json` file imports this file.
+
+Those repositories called `@types`, and you might find some of them already in the Angular 2 boilerplate, and we will later add more `@types` and write some of our own.
+
+For example, package like `chai` that not written in TypeScript, does not provide it's own `.d.ts` file, so we need to also install `@types/chai` from NPM in order to get TypeScript support for this package.
+
+# Root Component
+
+Angular 2 code is structured as a tree of components.
+
+Each component is a controller with an attached view.
+
+Since it's a tree, there should be a root component and branch components
+that stem out of it. So let's create our root component.
+
+Create a new `app.component.ts` file inside of the `client` fol
+[{]: <helper> (diff_step 1.3)
+#### Step 1.3: Create App component
+
+##### Added client/imports/app/app.component.ts
+```diff
+@@ -0,0 +1,6 @@
++┊ ┊1┊import { Component } from '@angular/core';
++┊ ┊2┊
++┊ ┊3┊@Component({
++┊ ┊4┊  selector: 'app'
++┊ ┊5┊})
++┊ ┊6┊export class AppComponent {}
+```
+[}]: #
+
+First we're importing the dependency we needed from `@angular/core`.
+
+Notice, the Component's selector matches the `<app>` tag we will provide in `index.html` below, and the View template creates the view.
+
+The class, AppComponent, inherits from `@Component` which is part of Angular 2.
+
+We have defined the component, let's create the templ
+[{]: <helper> (diff_step 1.4)
+#### Step 1.4: Create template for the App component
+
+##### Added client/imports/app/app.component.html
+```diff
+@@ -0,0 +1 @@
++┊ ┊1┊Hello World!🚫↵
+```
+[}]: #
+
+Now, we can use it inside of the compon
+[{]: <helper> (diff_step 1.5)
+#### Step 1.5: Implement template
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -1,6 +1,9 @@
+ ┊1┊1┊import { Component } from '@angular/core';
+ ┊2┊2┊
++┊ ┊3┊import template from './app.component.html';
++┊ ┊4┊
+ ┊3┊5┊@Component({
+-┊4┊ ┊  selector: 'app'
++┊ ┊6┊  selector: 'app',
++┊ ┊7┊  template
+ ┊5┊8┊})
+ ┊6┊9┊export class AppComponent {}
+```
+[}]: #
+
+**About templates**
+
+Thanks to `angular2-compilers` package, we can import any html file into TypeScript space as a module.
+"But what we get from that module?" You ask. The answer is simply, it's a string. `angular2-compilers` converts html file's contents into string.
+
+> Since a component doesn't exist without its template, **we recommend** you to use a ***template as a string*** method, instead of loading it asynchronously (`templateUrl`).
+
+> In our opinion, this is the best practice of creating components.
+
+Finally, we can `bootstrap` our component, thus, marking it as the root component.
+
+First thing to do is to add `<app/>` element to the `<body
+[{]: <helper> (diff_step 1.6)
+#### Step 1.6: Add App component to index.html
+
+##### Changed client/index.html
+```diff
+@@ -2,5 +2,5 @@
+ ┊2┊2┊  <base href="/">
+ ┊3┊3┊</head>
+ ┊4┊4┊<body>
+-┊5┊ ┊  Hello World!
++┊ ┊5┊  <app>Loading...</app>
+ ┊6┊6┊</body>🚫↵
+```
+[}]: #
+
+Great! Now we have our root component, we will need to create NgModule.
+
+NgModule defines the Angular2 module - it's external modules that in use, declarations, providers, exports and defines the main component to bootstrap.
+
+You can read more about NgModule in [Angular 2 documentation](https://angular.io/docs/ts/latest/guide/ngmodule.html).
+
+Let's create our NgMod
+[{]: <helper> (diff_step 1.7)
+#### Step 1.7: Create AppModule
+
+##### Added client/imports/app/app.module.ts
+```diff
+@@ -0,0 +1,9 @@
++┊ ┊1┊import { NgModule } from '@angular/core';
++┊ ┊2┊import { BrowserModule } from '@angular/platform-browser';
++┊ ┊3┊
++┊ ┊4┊@NgModule({
++┊ ┊5┊  imports: [
++┊ ┊6┊    BrowserModule
++┊ ┊7┊  ]
++┊ ┊8┊})
++┊ ┊9┊export class AppModule {}🚫↵
+```
+[}]: #
+
+> We will import `BrowserModule` which is the basic and internal Component we will use later in our view templates.
+
+And let's declare our `AppComponent` and add it as root component that needed to be bootstra
+[{]: <helper> (diff_step 1.8)
+#### Step 1.8: Add App component to App module
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -1,9 +1,17 @@
+ ┊ 1┊ 1┊import { NgModule } from '@angular/core';
+ ┊ 2┊ 2┊import { BrowserModule } from '@angular/platform-browser';
+ ┊ 3┊ 3┊
++┊  ┊ 4┊import { AppComponent } from './app.component';
++┊  ┊ 5┊
+ ┊ 4┊ 6┊@NgModule({
+ ┊ 5┊ 7┊  imports: [
+ ┊ 6┊ 8┊    BrowserModule
++┊  ┊ 9┊  ],
++┊  ┊10┊  declarations: [
++┊  ┊11┊    AppComponent
++┊  ┊12┊  ],
++┊  ┊13┊  bootstrap: [
++┊  ┊14┊    AppComponent
+ ┊ 7┊15┊  ]
+ ┊ 8┊16┊})
+ ┊ 9┊17┊export class AppModule {}🚫↵
+```
+[}]: #
+
+Now we need to create an entry point for project - we will create it directly under `client` directory, because we want this file to be loaded when Meteor starts our project.
+
+The main entry file uses Angular 2 `bootstrapModule` with our new NgMod
+[{]: <helper> (diff_step 1.9)
+#### Step 1.9: Create main entry point
+
+##### Added client/main.ts
+```diff
+@@ -0,0 +1,8 @@
++┊ ┊1┊import 'angular2-meteor-polyfills';
++┊ ┊2┊
++┊ ┊3┊import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
++┊ ┊4┊
++┊ ┊5┊import { AppModule } from './imports/app/app.module';
++┊ ┊6┊
++┊ ┊7┊const platform = platformBrowserDynamic();
++┊ ┊8┊platform.bootstrapModule(AppModule);🚫↵
+```
+[}]: #
+
+Now let's run the app:
+
+    $ meteor
+
+> If the template doesn't change, it may be because your browser is caching the original template.
+> Learn [how to disable caching during development](https://developer.chrome.com/devtools/docs/settings) in Chrome.
+
+And we have our first Angular 2.0 Meteor app working!
+
+Let's go through some of the technologies we used till now:
+
+# npm
+
+Npm stands for Node Packages Manager, which manages your dependencies and external packages.
+
+Meteor supports NPM packages (starting from 1.3), and when we created our project - a file named `package.json` was created - this file contains the project's npm dependencies and some other metadata.
+
+To install the current project dependencies, type in the command line `npm install`.
+
+We also used Meteor packages (`meteor add ...`).  Meteor packages have some abilities that npm packages don't have yet so we will use some packages from there as well.
+
+## ES6 Modules and CommonJS
+
+Meteor supports [ES6 modules](https://developer.mozilla.org/en/docs/web/javascript/reference/statements/import) out of the box.
+
+This feature provides the ability to use `import` / `export` statements and gives you a full control for modules loading and dependencies.
+
+You can read more about how modules work and how it's based on CommonJS [on the Meteor docs](http://docs.meteor.com/#/full/modules).
+
+# Summary
+
+Let's continue to [step 1](/tutorials/angular2/static-template) and add some content to our application.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Intro](../../README.md) | [Next Step >](step2.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 6d1867ac1efe9c5b13628311f1bc5dbcb12d56e4 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:02:38 +0200
Subject: [PATCH 011/304] Step 2.1: Add static HTML to the main component view

---
 client/imports/app/app.component.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index c57eff5..9ea318e 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1 +1,14 @@
-Hello World!
\ No newline at end of file
+<ul>
+  <li>
+    <span>Dubstep-Free Zone</span>
+    <p>
+      Can we please just for an evening not listen to dubstep.
+    </p>
+  </li>
+  <li>
+    <span>All dubstep all the time</span>
+    <p>
+      Get it on!
+    </p>
+  </li>
+</ul>
\ No newline at end of file
-- 
2.10.2


From d276e534f5483132ee80d39bdd84a3639454bed2 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:49 -0200
Subject: [PATCH 012/304] Step 2: Static Template

---
 manuals/templates/step2.md |  6 ++++++
 manuals/views/step2.md     | 40 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 46 insertions(+)
 create mode 100644 manuals/templates/step2.md
 create mode 100644 manuals/views/step2.md

diff --git a/manuals/templates/step2.md b/manuals/templates/step2.md
new file mode 100644
index 0000000..1266192
--- /dev/null
+++ b/manuals/templates/step2.md
@@ -0,0 +1,6 @@
+Let's create a purely static HTML page and then examine how we can turn this HTML code into a template that Angular will use to dynamically display the same result with any set of data.
+
+Add this template HTML to `app.htm
+{{{diff_step 2.1}}}
+
+Now, let's go to the [next step](/tutorials/angular2/dynamic-template) and learn how to dynamically generate the same list using Angular 2.
diff --git a/manuals/views/step2.md b/manuals/views/step2.md
new file mode 100644
index 0000000..f33e988
--- /dev/null
+++ b/manuals/views/step2.md
@@ -0,0 +1,40 @@
+[{]: <region> (header)
+# Step 2: Static Template
+[}]: #
+[{]: <region> (body)
+Let's create a purely static HTML page and then examine how we can turn this HTML code into a template that Angular will use to dynamically display the same result with any set of data.
+
+Add this template HTML to `app.htm
+[{]: <helper> (diff_step 2.1)
+#### Step 2.1: Add static HTML to the main component view
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1 +1,14 @@
+-┊ 1┊  ┊Hello World!🚫↵
++┊  ┊ 1┊<ul>
++┊  ┊ 2┊  <li>
++┊  ┊ 3┊    <span>Dubstep-Free Zone</span>
++┊  ┊ 4┊    <p>
++┊  ┊ 5┊      Can we please just for an evening not listen to dubstep.
++┊  ┊ 6┊    </p>
++┊  ┊ 7┊  </li>
++┊  ┊ 8┊  <li>
++┊  ┊ 9┊    <span>All dubstep all the time</span>
++┊  ┊10┊    <p>
++┊  ┊11┊      Get it on!
++┊  ┊12┊    </p>
++┊  ┊13┊  </li>
++┊  ┊14┊</ul>🚫↵
+```
+[}]: #
+
+Now, let's go to the [next step](/tutorials/angular2/dynamic-template) and learn how to dynamically generate the same list using Angular 2.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step1.md) | [Next Step >](step3.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From d5a1ac7a1c1eb912b23226f6187dfe8bfba32268 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:04:31 +0200
Subject: [PATCH 013/304] Step 3.1: Add dynamic html to the App component

---
 client/imports/app/app.component.html | 23 +++++++++--------------
 1 file changed, 9 insertions(+), 14 deletions(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index 9ea318e..b750655 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,14 +1,9 @@
-<ul>
-  <li>
-    <span>Dubstep-Free Zone</span>
-    <p>
-      Can we please just for an evening not listen to dubstep.
-    </p>
-  </li>
-  <li>
-    <span>All dubstep all the time</span>
-    <p>
-      Get it on!
-    </p>
-  </li>
-</ul>
\ No newline at end of file
+<div>
+  <ul>
+    <li *ngFor="let party of parties">
+      {{party.name}}
+      <p>{{party.description}}</p>
+      <p>{{party.location}}</p>
+    </li>
+  </ul>
+</div>
\ No newline at end of file
-- 
2.10.2


From a286199c1d819c1bb3e1617dc630e0fc0cce74e3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:05:17 +0200
Subject: [PATCH 014/304] Step 3.2: Load parties data into app

---
 client/imports/app/app.component.ts | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 91e1a06..834d1ea 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -6,4 +6,23 @@ import template from './app.component.html';
   selector: 'app',
   template
 })
-export class AppComponent {}
+export class AppComponent {
+  parties: any[];
+
+  constructor() {
+    this.parties = [
+      {'name': 'Dubstep-Free Zone',
+        'description': 'Can we please just for an evening not listen to dubstep.',
+        'location': 'Palo Alto'
+      },
+      {'name': 'All dubstep all the time',
+        'description': 'Get it on!',
+        'location': 'Palo Alto'
+      },
+      {'name': 'Savage lounging',
+        'description': 'Leisure suit required. And only fiercest manners.',
+        'location': 'San Francisco'
+      }
+    ];
+  }
+}
-- 
2.10.2


From 68446aba6a908eca6830c6e94256476dd7d3215e Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:49 -0200
Subject: [PATCH 015/304] Step 3: Dynamic Template

---
 manuals/templates/step3.md |  51 +++++++++++++++++++
 manuals/views/step3.md     | 123 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 174 insertions(+)
 create mode 100644 manuals/templates/step3.md
 create mode 100644 manuals/views/step3.md

diff --git a/manuals/templates/step3.md b/manuals/templates/step3.md
new file mode 100644
index 0000000..50e5260
--- /dev/null
+++ b/manuals/templates/step3.md
@@ -0,0 +1,51 @@
+Now it's time to make the web page dynamic — with Angular 2.
+
+This step will still be focusing on client side Angular tools. The next one will show you how to get the full stack power of Meteor.
+
+# Data in the View
+
+In Angular, the view is a projection of the model through the HTML template. This means that whenever the model changes, Angular refreshes the appropriate binding points, which updates the view.
+
+Let's change our template to be dynami
+{{{diff_step 3.1}}}
+
+We replaced the hard-coded party list with the [NgFor](https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html) directive and two Angular expressions:
+
+- The `*ngFor="let party of parties"` attribute in the `li` tag is an Angular repeater directive. The repeater tells Angular to create a `li` element for each party in the list using the `li` tag as the template.
+- The expressions wrapped in the double curly braces ( `\{{party.name}}` and `\{{party.description}}` ) will be replaced by the value of the expressions.
+
+Angular 2 has _common_ directives that provide additional functionality to HTML. These include `ngFor`, `ngIf`, `ngClass`, _form_ directives (which will be heavily used on the 4th step) and more found in the [`@angular/common`](https://angular.io/docs/ts/latest/api/common/) package. Those common directives are globally available in every component template so you don't need to import them manually into the component's view, in comparison to a custom directive or routing directives.
+
+# Component data
+
+Now we are going to create our initial data model and render it in the view.
+This code will go inside of our `AppComponent` class [`constructor`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/constructor). A constructor is a function that runs when a class is loaded, thus it loads the initial data for the class.
+
+We can attach data with the context `this`, referring to the `AppComponent` clas
+{{{diff_step 3.2}}}
+
+Run the app again.
+
+    $ meteor
+
+You'll see the data model, parties, is now instantiated within the `AppComponent` component.
+
+As you probably noticed, we defined `parties` with a `any[]`. Little disclaimer. That's a TypeScript specific thing and it's called Type.
+
+What `parties: any[]` means? It tells to your IDE and TypeScript compiler that `parties` property is an array of any value. It could be an Object, Number etc.
+
+In one of next chapters we will explain to you a lot more about [Types](http://www.typescriptlang.org/Handbook#basic-types).
+
+Without this your IDE or console would say something like:
+
+    client/app.ts (13, 8): Property 'parties' does not exist on type 'AppComponent'.
+
+Although we haven't done much, we connected the dots between the presentation, the data, and the business logic.
+
+# Summary
+
+You now have a dynamic app that features a full component.
+
+But, this is still all client side — which is nice for tutorials, but in a real application we need to persist the data on the server and sync all the clients with it.
+
+So, let's go to [step 3](/tutorials/angular2/3-way-data-binding) to learn how to bind our application to the great power of Meteor.
\ No newline at end of file
diff --git a/manuals/views/step3.md b/manuals/views/step3.md
new file mode 100644
index 0000000..c165eb2
--- /dev/null
+++ b/manuals/views/step3.md
@@ -0,0 +1,123 @@
+[{]: <region> (header)
+# Step 3: Dynamic Template
+[}]: #
+[{]: <region> (body)
+Now it's time to make the web page dynamic — with Angular 2.
+
+This step will still be focusing on client side Angular tools. The next one will show you how to get the full stack power of Meteor.
+
+# Data in the View
+
+In Angular, the view is a projection of the model through the HTML template. This means that whenever the model changes, Angular refreshes the appropriate binding points, which updates the view.
+
+Let's change our template to be dynami
+[{]: <helper> (diff_step 3.1)
+#### Step 3.1: Add dynamic html to the App component
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,14 +1,9 @@
+-┊ 1┊  ┊<ul>
+-┊ 2┊  ┊  <li>
+-┊ 3┊  ┊    <span>Dubstep-Free Zone</span>
+-┊ 4┊  ┊    <p>
+-┊ 5┊  ┊      Can we please just for an evening not listen to dubstep.
+-┊ 6┊  ┊    </p>
+-┊ 7┊  ┊  </li>
+-┊ 8┊  ┊  <li>
+-┊ 9┊  ┊    <span>All dubstep all the time</span>
+-┊10┊  ┊    <p>
+-┊11┊  ┊      Get it on!
+-┊12┊  ┊    </p>
+-┊13┊  ┊  </li>
+-┊14┊  ┊</ul>🚫↵
++┊  ┊ 1┊<div>
++┊  ┊ 2┊  <ul>
++┊  ┊ 3┊    <li *ngFor="let party of parties">
++┊  ┊ 4┊      {{party.name}}
++┊  ┊ 5┊      <p>{{party.description}}</p>
++┊  ┊ 6┊      <p>{{party.location}}</p>
++┊  ┊ 7┊    </li>
++┊  ┊ 8┊  </ul>
++┊  ┊ 9┊</div>🚫↵
+```
+[}]: #
+
+We replaced the hard-coded party list with the [NgFor](https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html) directive and two Angular expressions:
+
+- The `*ngFor="let party of parties"` attribute in the `li` tag is an Angular repeater directive. The repeater tells Angular to create a `li` element for each party in the list using the `li` tag as the template.
+- The expressions wrapped in the double curly braces ( `{{party.name}}` and `{{party.description}}` ) will be replaced by the value of the expressions.
+
+Angular 2 has _common_ directives that provide additional functionality to HTML. These include `ngFor`, `ngIf`, `ngClass`, _form_ directives (which will be heavily used on the 4th step) and more found in the [`@angular/common`](https://angular.io/docs/ts/latest/api/common/) package. Those common directives are globally available in every component template so you don't need to import them manually into the component's view, in comparison to a custom directive or routing directives.
+
+# Component data
+
+Now we are going to create our initial data model and render it in the view.
+This code will go inside of our `AppComponent` class [`constructor`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/constructor). A constructor is a function that runs when a class is loaded, thus it loads the initial data for the class.
+
+We can attach data with the context `this`, referring to the `AppComponent` clas
+[{]: <helper> (diff_step 3.2)
+#### Step 3.2: Load parties data into app
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -6,4 +6,23 @@
+ ┊ 6┊ 6┊  selector: 'app',
+ ┊ 7┊ 7┊  template
+ ┊ 8┊ 8┊})
+-┊ 9┊  ┊export class AppComponent {}
++┊  ┊ 9┊export class AppComponent {
++┊  ┊10┊  parties: any[];
++┊  ┊11┊
++┊  ┊12┊  constructor() {
++┊  ┊13┊    this.parties = [
++┊  ┊14┊      {'name': 'Dubstep-Free Zone',
++┊  ┊15┊        'description': 'Can we please just for an evening not listen to dubstep.',
++┊  ┊16┊        'location': 'Palo Alto'
++┊  ┊17┊      },
++┊  ┊18┊      {'name': 'All dubstep all the time',
++┊  ┊19┊        'description': 'Get it on!',
++┊  ┊20┊        'location': 'Palo Alto'
++┊  ┊21┊      },
++┊  ┊22┊      {'name': 'Savage lounging',
++┊  ┊23┊        'description': 'Leisure suit required. And only fiercest manners.',
++┊  ┊24┊        'location': 'San Francisco'
++┊  ┊25┊      }
++┊  ┊26┊    ];
++┊  ┊27┊  }
++┊  ┊28┊}
+```
+[}]: #
+
+Run the app again.
+
+    $ meteor
+
+You'll see the data model, parties, is now instantiated within the `AppComponent` component.
+
+As you probably noticed, we defined `parties` with a `any[]`. Little disclaimer. That's a TypeScript specific thing and it's called Type.
+
+What `parties: any[]` means? It tells to your IDE and TypeScript compiler that `parties` property is an array of any value. It could be an Object, Number etc.
+
+In one of next chapters we will explain to you a lot more about [Types](http://www.typescriptlang.org/Handbook#basic-types).
+
+Without this your IDE or console would say something like:
+
+    client/app.ts (13, 8): Property 'parties' does not exist on type 'AppComponent'.
+
+Although we haven't done much, we connected the dots between the presentation, the data, and the business logic.
+
+# Summary
+
+You now have a dynamic app that features a full component.
+
+But, this is still all client side — which is nice for tutorials, but in a real application we need to persist the data on the server and sync all the clients with it.
+
+So, let's go to [step 3](/tutorials/angular2/3-way-data-binding) to learn how to bind our application to the great power of Meteor.
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step2.md) | [Next Step >](step4.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 8b3b8f1e5291cbab83c3b509fff68a641c1f7f48 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:35:10 +0200
Subject: [PATCH 016/304] Step 4.1: Add Parties collection

---
 both/collections/parties.collection.ts | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 both/collections/parties.collection.ts

diff --git a/both/collections/parties.collection.ts b/both/collections/parties.collection.ts
new file mode 100644
index 0000000..65011f1
--- /dev/null
+++ b/both/collections/parties.collection.ts
@@ -0,0 +1,3 @@
+import { MongoObservable } from 'meteor-rxjs';
+
+export const Parties = new MongoObservable.Collection('parties');
-- 
2.10.2


From 76537e56dcd50ea8ee0cf845d3c7e898864af903 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:36:03 +0200
Subject: [PATCH 017/304] Step 4.2: Import Parties collection

---
 client/imports/app/app.component.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 834d1ea..ecfc241 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -1,5 +1,7 @@
 import { Component } from '@angular/core';
 
+import { Parties } from '../../../both/collections/parties.collection';
+
 import template from './app.component.html';
 
 @Component({
-- 
2.10.2


From b1aca5f5a558b3b75490042cc42879d7029795cb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:38:50 +0200
Subject: [PATCH 018/304] Step 4.3: Bind MongoObservable to Angular

---
 client/imports/app/app.component.ts | 18 +++---------------
 1 file changed, 3 insertions(+), 15 deletions(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index ecfc241..1d5e50c 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -1,4 +1,5 @@
 import { Component } from '@angular/core';
+import { Observable } from 'rxjs/Observable';
 
 import { Parties } from '../../../both/collections/parties.collection';
 
@@ -9,22 +10,9 @@ import template from './app.component.html';
   template
 })
 export class AppComponent {
-  parties: any[];
+  parties: Observable<any[]>;
 
   constructor() {
-    this.parties = [
-      {'name': 'Dubstep-Free Zone',
-        'description': 'Can we please just for an evening not listen to dubstep.',
-        'location': 'Palo Alto'
-      },
-      {'name': 'All dubstep all the time',
-        'description': 'Get it on!',
-        'location': 'Palo Alto'
-      },
-      {'name': 'Savage lounging',
-        'description': 'Leisure suit required. And only fiercest manners.',
-        'location': 'San Francisco'
-      }
-    ];
+    this.parties = Parties.find({}).zone();
   }
 }
-- 
2.10.2


From d74e31ad1969a273214b0a29c72cb20c7dd01c9b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:42:21 +0200
Subject: [PATCH 019/304] Step 4.4: Use AsyncPipe

---
 client/imports/app/app.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index b750655..cc8d5c5 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,6 +1,6 @@
 <div>
   <ul>
-    <li *ngFor="let party of parties">
+    <li *ngFor="let party of parties | async">
       {{party.name}}
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
-- 
2.10.2


From e91dc36d152d2b0fcbb574c4be950e81a2a9e9c9 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:40:42 +0200
Subject: [PATCH 020/304] Step 4.5: Add initial Parties

---
 server/imports/fixtures/parties.ts | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 server/imports/fixtures/parties.ts

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
new file mode 100644
index 0000000..63b055b
--- /dev/null
+++ b/server/imports/fixtures/parties.ts
@@ -0,0 +1,21 @@
+import { Parties } from '../../../both/collections/parties.collection';
+
+export function loadParties() {
+  if (Parties.find().cursor.count() === 0) {
+    const parties = [{
+      name: 'Dubstep-Free Zone',
+      description: 'Can we please just for an evening not listen to dubstep.',
+      location: 'Palo Alto'
+    }, {
+      name: 'All dubstep all the time',
+      description: 'Get it on!',
+      location: 'Palo Alto'
+    }, {
+      name: 'Savage lounging',
+      description: 'Leisure suit required. And only fiercest manners.',
+      location: 'San Francisco'
+    }];
+
+    parties.forEach((party) => Parties.insert(party));
+  }
+}
\ No newline at end of file
-- 
2.10.2


From ea3bb3c89052f169e80ade6555e8509fde1ab9bf Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:41:39 +0200
Subject: [PATCH 021/304] Step 4.6: Load initial Parties

---
 server/main.ts | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 server/main.ts

diff --git a/server/main.ts b/server/main.ts
new file mode 100644
index 0000000..cf58a8d
--- /dev/null
+++ b/server/main.ts
@@ -0,0 +1,7 @@
+import { Meteor } from 'meteor/meteor';
+
+import { loadParties } from './imports/fixtures/parties';
+
+Meteor.startup(() => {
+  loadParties();
+});
-- 
2.10.2


From e9e595ce3690fd3c0092831401040d369f03c24b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:51:56 +0200
Subject: [PATCH 022/304] Step 4.7: Define Party interface

---
 both/models/party.model.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 both/models/party.model.ts

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
new file mode 100644
index 0000000..388567d
--- /dev/null
+++ b/both/models/party.model.ts
@@ -0,0 +1,5 @@
+export interface Party {
+  name: string;
+  description: string;
+  location: string;
+}
-- 
2.10.2


From 76f61e89b2a907aa3cafe41cdbdc900a15b58450 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:53:05 +0200
Subject: [PATCH 023/304] Step 4.8: Add Party type to Parties collection

---
 both/collections/parties.collection.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/both/collections/parties.collection.ts b/both/collections/parties.collection.ts
index 65011f1..8146c60 100644
--- a/both/collections/parties.collection.ts
+++ b/both/collections/parties.collection.ts
@@ -1,3 +1,5 @@
 import { MongoObservable } from 'meteor-rxjs';
 
-export const Parties = new MongoObservable.Collection('parties');
+import { Party } from '../models/party.model';
+
+export const Parties = new MongoObservable.Collection<Party>('parties');
-- 
2.10.2


From 0b5532cea44d4e68a6573f997b6c343091770eff Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 17:53:54 +0200
Subject: [PATCH 024/304] Step 4.9: Add Party type to data fixtures

---
 client/imports/app/app.component.ts | 3 ++-
 server/imports/fixtures/parties.ts  | 5 +++--
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 1d5e50c..99a4495 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -2,6 +2,7 @@ import { Component } from '@angular/core';
 import { Observable } from 'rxjs/Observable';
 
 import { Parties } from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/models/party.model';
 
 import template from './app.component.html';
 
@@ -10,7 +11,7 @@ import template from './app.component.html';
   template
 })
 export class AppComponent {
-  parties: Observable<any[]>;
+  parties: Observable<Party[]>;
 
   constructor() {
     this.parties = Parties.find({}).zone();
diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
index 63b055b..4f6d555 100644
--- a/server/imports/fixtures/parties.ts
+++ b/server/imports/fixtures/parties.ts
@@ -1,8 +1,9 @@
 import { Parties } from '../../../both/collections/parties.collection';
+import { Party } from '../../../both/models/party.model';
 
 export function loadParties() {
   if (Parties.find().cursor.count() === 0) {
-    const parties = [{
+    const parties: Party[] = [{
       name: 'Dubstep-Free Zone',
       description: 'Can we please just for an evening not listen to dubstep.',
       location: 'Palo Alto'
@@ -16,6 +17,6 @@ export function loadParties() {
       location: 'San Francisco'
     }];
 
-    parties.forEach((party) => Parties.insert(party));
+    parties.forEach((party: Party) => Parties.insert(party));
   }
 }
\ No newline at end of file
-- 
2.10.2


From 5f848fe9ae144ace4c288d833f5a01df87732d7f Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:49 -0200
Subject: [PATCH 025/304] Step 4: 3-Way Data Binding

---
 manuals/templates/step4.md | 195 +++++++++++++++++++++++++
 manuals/views/step4.md     | 350 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 545 insertions(+)
 create mode 100644 manuals/templates/step4.md
 create mode 100644 manuals/views/step4.md

diff --git a/manuals/templates/step4.md b/manuals/templates/step4.md
new file mode 100644
index 0000000..7c2c862
--- /dev/null
+++ b/manuals/templates/step4.md
@@ -0,0 +1,195 @@
+Now we have a client side application that creates and renders its own data.
+
+So, if we were in any framework other than Meteor, we would likely start implementing a series of REST endpoints to connect the server to the client.
+We would also need to create a database and functions to connect to it.
+
+And we haven't even talked about real-time, in which case we would need to add sockets, a local DB for cache and handle latency compensation (or just ignore those features and create a not-so-good or less modern app...)
+
+But luckily, we use Meteor!
+
+# Data Model and Reactivity in Meteor
+
+Meteor makes writing distributed client code as simple as talking to a local database.
+
+Every Meteor client includes an in-memory database cache. To manage the client cache, the server publishes sets of JSON documents, and the client subscribes to these sets. As documents in a set change, the server patches each client's cache automatically.
+
+That introduces us to a new concept — *Full Stack Reactivity*.
+
+In an Angular-ish language we might call it *3 way data binding*.
+
+The way to handle data in Meteor is through the [`Mongo.Collection`](http://docs.meteor.com/#/full/mongo_collection) class. It is used to declare MongoDB collections and manipulate them.
+
+Thanks to [MiniMongo](https://atmospherejs.com/meteor/minimongo), Meteor's client-side Mongo emulator, `Mongo.Collection` can be used from both client and server code.
+
+In short, Meteor core's setup has:
+
+- real-time reactivity through web sockets
+- two databases. One on the client for fast changes, another behind the server for official changes
+- a special protocol (called DDP) that synchronizes data between two databases
+- a bunch of small things that make creating an app with Meteor easier and more developer friendly!
+
+# RxJS and MongoObservable
+
+Angular2-Meteor team also provides an additional package called `meteor-rxjs` which wraps Meteor's original API, and returns RxJs `Observable` instead of using callbacks or promises.
+
+`Observable` is very similar to `Promise`, only it has a continuation flow - which means a multiple `resolve`s.
+
+The lifecycle of `Observable` is built on three parts:
+
+- `next` - called each time the Observable changes.
+- `error` - called on error.
+- `complete` - calls when the data flow is done.
+
+If we try to connect it to our Meteor world and the world of Mongo Collection, so each time a Collection changes - the `next` callback called, and `complete` should not be called because we are using reactive data and we will always waiting for more updates.
+
+We will use this package instead of Meteor's API, because Angular 2 supports RxJS `Observable`s, and provides great features for those who uses it for their application - starting from iterating on object and a faster change detection.
+
+You can read more about `Observable`s and RxJS [here](http://reactivex.io/documentation/observable.html).
+
+> Note that RxJS documentation might be a little intimidating at the beginning - if you having difficult with it - try to read the examples we use in this tutorials and it's might help you.
+
+# Declare a Collection
+
+So first, let's define our first parties collection that will store all our parties.
+
+We will use `MongoObservable` static methods to declare the Collection:
+
+So add a file `both/collections/parties.collection.ts`
+{{{diff_step 4.1}}}
+
+We've just created a file called `parties.collection.ts`, that contains a CommonJS module called `both/collections/parties`.
+
+This work is done by the TypeScript compiler behind the scenes.
+
+The TypeScript compiler converts `.ts` files to ES5, then registers a CommonJS module with the same name as the relative path to the file in the app.
+
+That's why we use the special word `export`. We are telling CommonJS that we are allowing the object to be exported from this module into the outside world.
+
+Meteor has a series of special folder names, including the `client` folder. All files within a folder named `client` are loaded on the client only. Likewise, files in a folder called `server` are loaded on the server only.
+
+Placing the `both` folder outside of any special folder, makes its contents available to both the client and the server. Therefore, the `parties` collection (and the actions on it) will run on both the client (minimongo) and the server (Mongo).
+
+Though we only declared our model once, we have two modules that declare two versions of our parties collection:
+one for client-side and one for server-side. This is often referred to as "isomorphic" or "universal javascript". All synchronization between these two versions of collections is handled by Meteor.
+
+# Binding Meteor to Angular
+
+Now that we've created the collection, our client needs to subscribe to it's changes and bind it to our `this.parties` array.
+
+Because we use `MongoObservable.Collection` instead of regular Meteor Collection, Angular 2 can easily support this type of data object, and iterate it without any modifications.
+
+Let's import the `Parties` from collections
+{{{diff_step 4.2}}}
+
+And now we will create a query on our Collection, and because we used `MongoObservable`, the return value of `find` will be a `Observable<any[]>` - which is an `Observable` that contains an array of Objects.
+
+And let's bind to the `Observable`
+{{{diff_step 4.3}}}
+
+> We used `zone()` method which is a wrapper for the regular `Observable` that do some *Magic* and connects the collection changes into our view using our Component's `Zone`.
+
+Because of that, we now need to add `AsyncPipe`
+{{{diff_step 4.4}}}
+
+# Inserting Parties from the Console
+
+At this point we've implemented a rendering of a list of parties on the page.
+Now it's time to check if the code above really works; it shouldn't just render that list, but also render all
+changes to the database on the page reactively.
+
+In Mongo terminology, items inside collections are called documents. So, let's insert some documents into our collection by using the server database console.
+
+In a new terminal tab, go to your app directory and type:
+
+    meteor mongo
+
+This opens a console into your app's local development database using [Mongo shell](https://docs.mongodb.org/manual/reference/mongo-shell/). At the prompt, type:
+
+    db.parties.insert({ name: "A new party", description: "From the mongo console!", location: "In the DB" });
+
+In your web browser, you will see the UI of your app immediately update to show the new party.
+You can see that we didn't have to write any code to connect the server-side database to our front-end code — it just happened automatically.
+
+Insert a few more parties from the database console with different text.
+
+Now let's do the same but with "remove". At the prompt, type the following command to look at all the parties and their properties:
+
+    db.parties.find({});
+
+Choose one party you want to remove and copy its 'id' property.
+Then, remove it using that id (replace 'N4KzMEvtm4dYvk2TF' with your party's id value):
+
+    db.parties.remove({"_id": ObjectId("N4KzMEvtm4dYvk2TF")});
+
+Again, you will see the UI of your app immediately updates with that party removed.
+
+Feel free to try running more actions like updating an object from the console, and so on.
+
+# Initializing Data on Server Side
+
+Until now we've been inserting party documents to our collection using the Mongo console.
+
+It would be convenient though to have some initial data pre-loaded into our database.
+
+So, let's initialize our server with the same parties as we had before.
+
+Let's create a file `server/imports/fixtures/parties.ts` and implement `loadParties` method inside to load parties
+{{{diff_step 4.5}}}
+
+Then create `main.ts` to run this method on Meteor startup
+{{{diff_step 4.6}}}
+
+To make it fully TypeScript compatible, we need to define `Party` interface
+{{{diff_step 4.7}}}
+
+And add it in few places
+{{{diff_step 4.8}}}
+#### Step 4.9: Add Party type to data fixtures
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -2,6 +2,7 @@
+ ┊2┊2┊import { Observable } from 'rxjs/Observable';
+ ┊3┊3┊
+ ┊4┊4┊import { Parties } from '../../../both/collections/parties.collection';
++┊ ┊5┊import { Party } from '../../../both/models/party.model';
+ ┊5┊6┊
+ ┊6┊7┊import template from './app.component.html';
+ ┊7┊8┊
+```
+```diff
+@@ -10,7 +11,7 @@
+ ┊10┊11┊  template
+ ┊11┊12┊})
+ ┊12┊13┊export class AppComponent {
+-┊13┊  ┊  parties: Observable<any[]>;
++┊  ┊14┊  parties: Observable<Party[]>;
+ ┊14┊15┊
+ ┊15┊16┊  constructor() {
+ ┊16┊17┊    this.parties = Parties.find({}).zone();
+```
+
+##### Changed server/imports/fixtures/parties.ts
+```diff
+@@ -1,8 +1,9 @@
+ ┊1┊1┊import { Parties } from '../../../both/collections/parties.collection';
++┊ ┊2┊import { Party } from '../../../both/models/party.model';
+ ┊2┊3┊
+ ┊3┊4┊export function loadParties() {
+ ┊4┊5┊  if (Parties.find().cursor.count() === 0) {
+-┊5┊ ┊    const parties = [{
++┊ ┊6┊    const parties: Party[] = [{
+ ┊6┊7┊      name: 'Dubstep-Free Zone',
+ ┊7┊8┊      description: 'Can we please just for an evening not listen to dubstep.',
+ ┊8┊9┊      location: 'Palo Alto'
+```
+```diff
+@@ -16,6 +17,6 @@
+ ┊16┊17┊      location: 'San Francisco'
+ ┊17┊18┊    }];
+ ┊18┊19┊
+-┊19┊  ┊    parties.forEach((party) => Parties.insert(party));
++┊  ┊20┊    parties.forEach((party: Party) => Parties.insert(party));
+ ┊20┊21┊  }
+ ┊21┊22┊}🚫↵
+```
\ No newline at end of file
diff --git a/manuals/views/step4.md b/manuals/views/step4.md
new file mode 100644
index 0000000..9ecd753
--- /dev/null
+++ b/manuals/views/step4.md
@@ -0,0 +1,350 @@
+[{]: <region> (header)
+# Step 4: 3-Way Data Binding
+[}]: #
+[{]: <region> (body)
+Now we have a client side application that creates and renders its own data.
+
+So, if we were in any framework other than Meteor, we would likely start implementing a series of REST endpoints to connect the server to the client.
+We would also need to create a database and functions to connect to it.
+
+And we haven't even talked about real-time, in which case we would need to add sockets, a local DB for cache and handle latency compensation (or just ignore those features and create a not-so-good or less modern app...)
+
+But luckily, we use Meteor!
+
+# Data Model and Reactivity in Meteor
+
+Meteor makes writing distributed client code as simple as talking to a local database.
+
+Every Meteor client includes an in-memory database cache. To manage the client cache, the server publishes sets of JSON documents, and the client subscribes to these sets. As documents in a set change, the server patches each client's cache automatically.
+
+That introduces us to a new concept — *Full Stack Reactivity*.
+
+In an Angular-ish language we might call it *3 way data binding*.
+
+The way to handle data in Meteor is through the [`Mongo.Collection`](http://docs.meteor.com/#/full/mongo_collection) class. It is used to declare MongoDB collections and manipulate them.
+
+Thanks to [MiniMongo](https://atmospherejs.com/meteor/minimongo), Meteor's client-side Mongo emulator, `Mongo.Collection` can be used from both client and server code.
+
+In short, Meteor core's setup has:
+
+- real-time reactivity through web sockets
+- two databases. One on the client for fast changes, another behind the server for official changes
+- a special protocol (called DDP) that synchronizes data between two databases
+- a bunch of small things that make creating an app with Meteor easier and more developer friendly!
+
+# RxJS and MongoObservable
+
+Angular2-Meteor team also provides an additional package called `meteor-rxjs` which wraps Meteor's original API, and returns RxJs `Observable` instead of using callbacks or promises.
+
+`Observable` is very similar to `Promise`, only it has a continuation flow - which means a multiple `resolve`s.
+
+The lifecycle of `Observable` is built on three parts:
+
+- `next` - called each time the Observable changes.
+- `error` - called on error.
+- `complete` - calls when the data flow is done.
+
+If we try to connect it to our Meteor world and the world of Mongo Collection, so each time a Collection changes - the `next` callback called, and `complete` should not be called because we are using reactive data and we will always waiting for more updates.
+
+We will use this package instead of Meteor's API, because Angular 2 supports RxJS `Observable`s, and provides great features for those who uses it for their application - starting from iterating on object and a faster change detection.
+
+You can read more about `Observable`s and RxJS [here](http://reactivex.io/documentation/observable.html).
+
+> Note that RxJS documentation might be a little intimidating at the beginning - if you having difficult with it - try to read the examples we use in this tutorials and it's might help you.
+
+# Declare a Collection
+
+So first, let's define our first parties collection that will store all our parties.
+
+We will use `MongoObservable` static methods to declare the Collection:
+
+So add a file `both/collections/parties.collection.ts`
+[{]: <helper> (diff_step 4.1)
+#### Step 4.1: Add Parties collection
+
+##### Added both/collections/parties.collection.ts
+```diff
+@@ -0,0 +1,3 @@
++┊ ┊1┊import { MongoObservable } from 'meteor-rxjs';
++┊ ┊2┊
++┊ ┊3┊export const Parties = new MongoObservable.Collection('parties');
+```
+[}]: #
+
+We've just created a file called `parties.collection.ts`, that contains a CommonJS module called `both/collections/parties`.
+
+This work is done by the TypeScript compiler behind the scenes.
+
+The TypeScript compiler converts `.ts` files to ES5, then registers a CommonJS module with the same name as the relative path to the file in the app.
+
+That's why we use the special word `export`. We are telling CommonJS that we are allowing the object to be exported from this module into the outside world.
+
+Meteor has a series of special folder names, including the `client` folder. All files within a folder named `client` are loaded on the client only. Likewise, files in a folder called `server` are loaded on the server only.
+
+Placing the `both` folder outside of any special folder, makes its contents available to both the client and the server. Therefore, the `parties` collection (and the actions on it) will run on both the client (minimongo) and the server (Mongo).
+
+Though we only declared our model once, we have two modules that declare two versions of our parties collection:
+one for client-side and one for server-side. This is often referred to as "isomorphic" or "universal javascript". All synchronization between these two versions of collections is handled by Meteor.
+
+# Binding Meteor to Angular
+
+Now that we've created the collection, our client needs to subscribe to it's changes and bind it to our `this.parties` array.
+
+Because we use `MongoObservable.Collection` instead of regular Meteor Collection, Angular 2 can easily support this type of data object, and iterate it without any modifications.
+
+Let's import the `Parties` from collections
+[{]: <helper> (diff_step 4.2)
+#### Step 4.2: Import Parties collection
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -1,5 +1,7 @@
+ ┊1┊1┊import { Component } from '@angular/core';
+ ┊2┊2┊
++┊ ┊3┊import { Parties } from '../../../both/collections/parties.collection';
++┊ ┊4┊
+ ┊3┊5┊import template from './app.component.html';
+ ┊4┊6┊
+ ┊5┊7┊@Component({
+```
+[}]: #
+
+And now we will create a query on our Collection, and because we used `MongoObservable`, the return value of `find` will be a `Observable<any[]>` - which is an `Observable` that contains an array of Objects.
+
+And let's bind to the `Observable`
+[{]: <helper> (diff_step 4.3)
+#### Step 4.3: Bind MongoObservable to Angular
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -1,4 +1,5 @@
+ ┊1┊1┊import { Component } from '@angular/core';
++┊ ┊2┊import { Observable } from 'rxjs/Observable';
+ ┊2┊3┊
+ ┊3┊4┊import { Parties } from '../../../both/collections/parties.collection';
+ ┊4┊5┊
+```
+```diff
+@@ -9,22 +10,9 @@
+ ┊ 9┊10┊  template
+ ┊10┊11┊})
+ ┊11┊12┊export class AppComponent {
+-┊12┊  ┊  parties: any[];
++┊  ┊13┊  parties: Observable<any[]>;
+ ┊13┊14┊
+ ┊14┊15┊  constructor() {
+-┊15┊  ┊    this.parties = [
+-┊16┊  ┊      {'name': 'Dubstep-Free Zone',
+-┊17┊  ┊        'description': 'Can we please just for an evening not listen to dubstep.',
+-┊18┊  ┊        'location': 'Palo Alto'
+-┊19┊  ┊      },
+-┊20┊  ┊      {'name': 'All dubstep all the time',
+-┊21┊  ┊        'description': 'Get it on!',
+-┊22┊  ┊        'location': 'Palo Alto'
+-┊23┊  ┊      },
+-┊24┊  ┊      {'name': 'Savage lounging',
+-┊25┊  ┊        'description': 'Leisure suit required. And only fiercest manners.',
+-┊26┊  ┊        'location': 'San Francisco'
+-┊27┊  ┊      }
+-┊28┊  ┊    ];
++┊  ┊16┊    this.parties = Parties.find({}).zone();
+ ┊29┊17┊  }
+ ┊30┊18┊}
+```
+[}]: #
+
+> We used `zone()` method which is a wrapper for the regular `Observable` that do some *Magic* and connects the collection changes into our view using our Component's `Zone`.
+
+Because of that, we now need to add `AsyncPipe`
+[{]: <helper> (diff_step 4.4)
+#### Step 4.4: Use AsyncPipe
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,6 +1,6 @@
+ ┊1┊1┊<div>
+ ┊2┊2┊  <ul>
+-┊3┊ ┊    <li *ngFor="let party of parties">
++┊ ┊3┊    <li *ngFor="let party of parties | async">
+ ┊4┊4┊      {{party.name}}
+ ┊5┊5┊      <p>{{party.description}}</p>
+ ┊6┊6┊      <p>{{party.location}}</p>
+```
+[}]: #
+
+# Inserting Parties from the Console
+
+At this point we've implemented a rendering of a list of parties on the page.
+Now it's time to check if the code above really works; it shouldn't just render that list, but also render all
+changes to the database on the page reactively.
+
+In Mongo terminology, items inside collections are called documents. So, let's insert some documents into our collection by using the server database console.
+
+In a new terminal tab, go to your app directory and type:
+
+    meteor mongo
+
+This opens a console into your app's local development database using [Mongo shell](https://docs.mongodb.org/manual/reference/mongo-shell/). At the prompt, type:
+
+    db.parties.insert({ name: "A new party", description: "From the mongo console!", location: "In the DB" });
+
+In your web browser, you will see the UI of your app immediately update to show the new party.
+You can see that we didn't have to write any code to connect the server-side database to our front-end code — it just happened automatically.
+
+Insert a few more parties from the database console with different text.
+
+Now let's do the same but with "remove". At the prompt, type the following command to look at all the parties and their properties:
+
+    db.parties.find({});
+
+Choose one party you want to remove and copy its 'id' property.
+Then, remove it using that id (replace 'N4KzMEvtm4dYvk2TF' with your party's id value):
+
+    db.parties.remove({"_id": ObjectId("N4KzMEvtm4dYvk2TF")});
+
+Again, you will see the UI of your app immediately updates with that party removed.
+
+Feel free to try running more actions like updating an object from the console, and so on.
+
+# Initializing Data on Server Side
+
+Until now we've been inserting party documents to our collection using the Mongo console.
+
+It would be convenient though to have some initial data pre-loaded into our database.
+
+So, let's initialize our server with the same parties as we had before.
+
+Let's create a file `server/imports/fixtures/parties.ts` and implement `loadParties` method inside to load parties
+[{]: <helper> (diff_step 4.5)
+#### Step 4.5: Add initial Parties
+
+##### Added server/imports/fixtures/parties.ts
+```diff
+@@ -0,0 +1,21 @@
++┊  ┊ 1┊import { Parties } from '../../../both/collections/parties.collection';
++┊  ┊ 2┊
++┊  ┊ 3┊export function loadParties() {
++┊  ┊ 4┊  if (Parties.find().cursor.count() === 0) {
++┊  ┊ 5┊    const parties = [{
++┊  ┊ 6┊      name: 'Dubstep-Free Zone',
++┊  ┊ 7┊      description: 'Can we please just for an evening not listen to dubstep.',
++┊  ┊ 8┊      location: 'Palo Alto'
++┊  ┊ 9┊    }, {
++┊  ┊10┊      name: 'All dubstep all the time',
++┊  ┊11┊      description: 'Get it on!',
++┊  ┊12┊      location: 'Palo Alto'
++┊  ┊13┊    }, {
++┊  ┊14┊      name: 'Savage lounging',
++┊  ┊15┊      description: 'Leisure suit required. And only fiercest manners.',
++┊  ┊16┊      location: 'San Francisco'
++┊  ┊17┊    }];
++┊  ┊18┊
++┊  ┊19┊    parties.forEach((party) => Parties.insert(party));
++┊  ┊20┊  }
++┊  ┊21┊}🚫↵
+```
+[}]: #
+
+Then create `main.ts` to run this method on Meteor startup
+[{]: <helper> (diff_step 4.6)
+#### Step 4.6: Load initial Parties
+
+##### Added server/main.ts
+```diff
+@@ -0,0 +1,7 @@
++┊ ┊1┊import { Meteor } from 'meteor/meteor';
++┊ ┊2┊
++┊ ┊3┊import { loadParties } from './imports/fixtures/parties';
++┊ ┊4┊
++┊ ┊5┊Meteor.startup(() => {
++┊ ┊6┊  loadParties();
++┊ ┊7┊});
+```
+[}]: #
+
+To make it fully TypeScript compatible, we need to define `Party` interface
+[{]: <helper> (diff_step 4.7)
+#### Step 4.7: Define Party interface
+
+##### Added both/models/party.model.ts
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊export interface Party {
++┊ ┊2┊  name: string;
++┊ ┊3┊  description: string;
++┊ ┊4┊  location: string;
++┊ ┊5┊}
+```
+[}]: #
+
+And add it in few places
+[{]: <helper> (diff_step 4.8)
+#### Step 4.8: Add Party type to Parties collection
+
+##### Changed both/collections/parties.collection.ts
+```diff
+@@ -1,3 +1,5 @@
+ ┊1┊1┊import { MongoObservable } from 'meteor-rxjs';
+ ┊2┊2┊
+-┊3┊ ┊export const Parties = new MongoObservable.Collection('parties');
++┊ ┊3┊import { Party } from '../models/party.model';
++┊ ┊4┊
++┊ ┊5┊export const Parties = new MongoObservable.Collection<Party>('parties');
+```
+[}]: #
+#### Step 4.9: Add Party type to data fixtures
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -2,6 +2,7 @@
+ ┊2┊2┊import { Observable } from 'rxjs/Observable';
+ ┊3┊3┊
+ ┊4┊4┊import { Parties } from '../../../both/collections/parties.collection';
++┊ ┊5┊import { Party } from '../../../both/models/party.model';
+ ┊5┊6┊
+ ┊6┊7┊import template from './app.component.html';
+ ┊7┊8┊
+```
+```diff
+@@ -10,7 +11,7 @@
+ ┊10┊11┊  template
+ ┊11┊12┊})
+ ┊12┊13┊export class AppComponent {
+-┊13┊  ┊  parties: Observable<any[]>;
++┊  ┊14┊  parties: Observable<Party[]>;
+ ┊14┊15┊
+ ┊15┊16┊  constructor() {
+ ┊16┊17┊    this.parties = Parties.find({}).zone();
+```
+
+##### Changed server/imports/fixtures/parties.ts
+```diff
+@@ -1,8 +1,9 @@
+ ┊1┊1┊import { Parties } from '../../../both/collections/parties.collection';
++┊ ┊2┊import { Party } from '../../../both/models/party.model';
+ ┊2┊3┊
+ ┊3┊4┊export function loadParties() {
+ ┊4┊5┊  if (Parties.find().cursor.count() === 0) {
+-┊5┊ ┊    const parties = [{
++┊ ┊6┊    const parties: Party[] = [{
+ ┊6┊7┊      name: 'Dubstep-Free Zone',
+ ┊7┊8┊      description: 'Can we please just for an evening not listen to dubstep.',
+ ┊8┊9┊      location: 'Palo Alto'
+```
+```diff
+@@ -16,6 +17,6 @@
+ ┊16┊17┊      location: 'San Francisco'
+ ┊17┊18┊    }];
+ ┊18┊19┊
+-┊19┊  ┊    parties.forEach((party) => Parties.insert(party));
++┊  ┊20┊    parties.forEach((party: Party) => Parties.insert(party));
+ ┊20┊21┊  }
+ ┊21┊22┊}🚫↵
+```
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step3.md) | [Next Step >](step5.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 7acfaf517b7849b7cf4e8ab14a33f994d77cd60b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:08:58 +0200
Subject: [PATCH 026/304] Step 5.1: Create PartiesForm component

---
 client/imports/app/parties/parties-form.component.ts | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/imports/app/parties/parties-form.component.ts

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
new file mode 100644
index 0000000..36df898
--- /dev/null
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -0,0 +1,9 @@
+import { Component } from '@angular/core';
+
+import template from './parties-form.component.html';
+
+@Component({
+  selector: 'parties-form',
+  template
+})
+export class PartiesFormComponent {}
-- 
2.10.2


From c4e90e3ab472e6cb3607407a7a18e12e882946d8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:10:01 +0200
Subject: [PATCH 027/304] Step 5.2: Create template of PartiesForm

---
 client/imports/app/parties/parties-form.component.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 client/imports/app/parties/parties-form.component.html

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
new file mode 100644
index 0000000..4f908e7
--- /dev/null
+++ b/client/imports/app/parties/parties-form.component.html
@@ -0,0 +1,12 @@
+<form>
+  <label>Name</label>
+  <input type="text">
+
+  <label>Description</label>
+  <input type="text">
+
+  <label>Location</label>
+  <input type="text">
+  
+  <button>Add</button>
+</form>
\ No newline at end of file
-- 
2.10.2


From 50cb4d76ed2280b4f3ffc7182b87e5d8d5becb04 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:10:46 +0200
Subject: [PATCH 028/304] Step 5.3: Add PartiesForm to App

---
 client/imports/app/app.component.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index cc8d5c5..9e780a4 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,4 +1,6 @@
 <div>
+  <parties-form></parties-form>
+  
   <ul>
     <li *ngFor="let party of parties | async">
       {{party.name}}
-- 
2.10.2


From 700a20139fc74f9380d192a7f8bbd361ba10717a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:13:04 +0200
Subject: [PATCH 029/304] Step 5.4: Create index for parties with declarations

---
 client/imports/app/parties/index.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/app/parties/index.ts

diff --git a/client/imports/app/parties/index.ts b/client/imports/app/parties/index.ts
new file mode 100644
index 0000000..c5e7e18
--- /dev/null
+++ b/client/imports/app/parties/index.ts
@@ -0,0 +1,5 @@
+import { PartiesFormComponent } from './parties-form.component';
+
+export const PARTIES_DECLARATIONS = [
+  PartiesFormComponent
+];
-- 
2.10.2


From c32c2abb8b9cc1d1769c303ffdf0aa4c6c44fede Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:13:23 +0200
Subject: [PATCH 030/304] Step 5.5: Add parties declarations to AppModule

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 50a22d6..e3a487a 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -2,13 +2,15 @@ import { NgModule } from '@angular/core';
 import { BrowserModule } from '@angular/platform-browser';
 
 import { AppComponent } from './app.component';
+import { PARTIES_DECLARATIONS } from './parties';
 
 @NgModule({
   imports: [
     BrowserModule
   ],
   declarations: [
-    AppComponent
+    AppComponent,
+    ...PARTIES_DECLARATIONS
   ],
   bootstrap: [
     AppComponent
-- 
2.10.2


From 94869cdb5a46a13b01bfdac578212fe7b53cacf5 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:14:46 +0200
Subject: [PATCH 031/304] Step 5.6: Import Forms modules

---
 client/imports/app/app.module.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index e3a487a..8e8c303 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -1,12 +1,15 @@
 import { NgModule } from '@angular/core';
 import { BrowserModule } from '@angular/platform-browser';
+import { FormsModule, ReactiveFormsModule } from '@angular/forms';
 
 import { AppComponent } from './app.component';
 import { PARTIES_DECLARATIONS } from './parties';
 
 @NgModule({
   imports: [
-    BrowserModule
+    BrowserModule,
+    FormsModule,
+    ReactiveFormsModule
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From d4c5fcd2b2c30595424cde880a6984f7feebeddd Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:17:31 +0200
Subject: [PATCH 032/304] Step 5.7: Create form model

---
 client/imports/app/parties/parties-form.component.ts | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 36df898..d98ae60 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -1,4 +1,5 @@
-import { Component } from '@angular/core';
+import { Component, OnInit } from '@angular/core';
+import { FormGroup, FormBuilder } from '@angular/forms';
 
 import template from './parties-form.component.html';
 
@@ -6,4 +7,18 @@ import template from './parties-form.component.html';
   selector: 'parties-form',
   template
 })
-export class PartiesFormComponent {}
+export class PartiesFormComponent implements OnInit {
+  addForm: FormGroup;
+
+  constructor(
+    private formBuilder: FormBuilder
+  ) {}
+
+  ngOnInit() {
+    this.addForm = this.formBuilder.group({
+      name: [],
+      description: [],
+      location: []
+    });
+  }
+}
-- 
2.10.2


From 20ba131ff953c48b175774b8ec4c77a1c4f368b0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:18:39 +0200
Subject: [PATCH 033/304] Step 5.8: Implement form directives

---
 client/imports/app/parties/parties-form.component.html | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index 4f908e7..d707240 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -1,12 +1,12 @@
-<form>
+<form [formGroup]="addForm">
   <label>Name</label>
-  <input type="text">
+  <input type="text" formControlName="name">
 
   <label>Description</label>
-  <input type="text">
+  <input type="text" formControlName="description">
 
   <label>Location</label>
-  <input type="text">
+  <input type="text" formControlName="location">
   
-  <button>Add</button>
+  <button type="submit">Add</button>
 </form>
\ No newline at end of file
-- 
2.10.2


From ebf2944eb46cf237718d8e453c7dea4f2f5c37a3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:19:25 +0200
Subject: [PATCH 034/304] Step 5.9: Add validators

---
 client/imports/app/parties/parties-form.component.ts | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index d98ae60..bb47f4b 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -1,5 +1,5 @@
 import { Component, OnInit } from '@angular/core';
-import { FormGroup, FormBuilder } from '@angular/forms';
+import { FormGroup, FormBuilder, Validators } from '@angular/forms';
 
 import template from './parties-form.component.html';
 
@@ -16,9 +16,9 @@ export class PartiesFormComponent implements OnInit {
 
   ngOnInit() {
     this.addForm = this.formBuilder.group({
-      name: [],
+      name: ['', Validators.required],
       description: [],
-      location: []
+      location: ['', Validators.required]
     });
   }
 }
-- 
2.10.2


From 1ff54a330a604dbbe2a609c370898874639e4e35 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:20:00 +0200
Subject: [PATCH 035/304] Step 5.10: Add ngSubmit to the form

---
 client/imports/app/parties/parties-form.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index d707240..98f90ca 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -1,4 +1,4 @@
-<form [formGroup]="addForm">
+<form [formGroup]="addForm" (ngSubmit)="addParty()">
   <label>Name</label>
   <input type="text" formControlName="name">
 
-- 
2.10.2


From 5468ae381840c9cf70edd1143089e2023f08462d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:23:47 +0200
Subject: [PATCH 036/304] Step 5.11: Add addParty method

---
 client/imports/app/parties/parties-form.component.ts | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index bb47f4b..511812d 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -1,6 +1,8 @@
 import { Component, OnInit } from '@angular/core';
 import { FormGroup, FormBuilder, Validators } from '@angular/forms';
 
+import { Parties } from '../../../../both/collections/parties.collection';
+
 import template from './parties-form.component.html';
 
 @Component({
@@ -21,4 +23,12 @@ export class PartiesFormComponent implements OnInit {
       location: ['', Validators.required]
     });
   }
+
+  addParty(): void {
+    if (this.addForm.valid) {
+      Parties.insert(this.addForm.value);
+
+      this.addForm.reset();
+    }
+  }
 }
-- 
2.10.2


From 101505fde057b4161aeae8f0790ed13f543a60f3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:24:18 +0200
Subject: [PATCH 037/304] Step 5.12: Add remove button

---
 client/imports/app/app.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index 9e780a4..0820d66 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -6,6 +6,7 @@
       {{party.name}}
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
+      <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
 </div>
\ No newline at end of file
-- 
2.10.2


From 080b14881684c3e00de8072918dd34f31b82c4ce Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:25:25 +0200
Subject: [PATCH 038/304] Step 5.13: Implement removeParty method

---
 client/imports/app/app.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 99a4495..02d31fc 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -16,4 +16,8 @@ export class AppComponent {
   constructor() {
     this.parties = Parties.find({}).zone();
   }
+
+  removeParty(party: Party): void {
+    Parties.remove(party._id);
+  }
 }
-- 
2.10.2


From 5b29ee306328181e2e31adc0f5457ef7bddde52b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:26:25 +0200
Subject: [PATCH 039/304] Step 5.14: Create CollectionObject model

---
 both/models/collection-object.model.ts | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 both/models/collection-object.model.ts

diff --git a/both/models/collection-object.model.ts b/both/models/collection-object.model.ts
new file mode 100644
index 0000000..f83638e
--- /dev/null
+++ b/both/models/collection-object.model.ts
@@ -0,0 +1,3 @@
+export interface CollectionObject {
+  _id?: string;
+}
\ No newline at end of file
-- 
2.10.2


From 78c60f8670baf902c7727886584cffedd6c2da44 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:27:11 +0200
Subject: [PATCH 040/304] Step 5.15: Extend Party by CollectionObject model

---
 both/models/party.model.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index 388567d..fd5a709 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -1,4 +1,6 @@
-export interface Party {
+import { CollectionObject } from './collection-object.model';
+
+export interface Party extends CollectionObject {
   name: string;
   description: string;
   location: string;
-- 
2.10.2


From e8a4e069cdd27059900c6527cd7201ec4949c57d Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:50 -0200
Subject: [PATCH 041/304] Step 5: Adding/removing objects and Angular event
 handling

---
 manuals/templates/step5.md | 202 ++++++++++++++++++
 manuals/views/step5.md     | 500 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 702 insertions(+)
 create mode 100644 manuals/templates/step5.md
 create mode 100644 manuals/views/step5.md

diff --git a/manuals/templates/step5.md b/manuals/templates/step5.md
new file mode 100644
index 0000000..7db57c9
--- /dev/null
+++ b/manuals/templates/step5.md
@@ -0,0 +1,202 @@
+Now that we have full data binding from server to client, let's interact with the data and see the updates in action.
+
+In this chapter we are going to:
+
+- create a new component to add or remove a party
+- learn about model-driven forms and create one
+- learn how to hook up form events to component methods
+- implement adding & removing party event handlers
+
+First, let's create a simple form with a button that will add a new party.
+
+# Component Architecture
+
+In Angular 2, we build a tree of components with the root `App` component and
+child components stemming out of it down to the leaves.
+
+Let's make a new component called `PartiesFormComponent`, and put it inside `parties` directory on the client-side (`client/imports/app/parties`).
+
+> Notice that we are placing the file inside the `imports` folder.  
+> That is another Meteor special folder name that tells Meteor to load the modules inside it just when some other module is importing it.  
+{{{diff_step 5.1}}}
+
+Notice that we are exporting the class `PartiesFormComponent` using ES6 module syntax.
+As a result, you'll be able to import `PartiesFormComponent` in any other component as follows:
+
+    import { PartiesFormComponent } from 'client/imports/app/parties/parties-form.component';
+
+By exporting and importing different modules, you create a modular structure of your app in ES6,
+which is similar to the modules in other script languages like Python.
+This is what makes programming in ES6 really awesome since application structure comes out rigid and clear.
+
+Let's add a template for the new component.
+
+Add a file with the following form:
+{{{diff_step 5.2}}}
+
+We can load the new `PartiesForm` component on the page by placing the `<parties-form>` tag in the root template `app.html`:
+{{{diff_step 5.3}}}
+
+There is one more required step in Angular 2 to load a component - we need to declare it in the our `NgModule` so other Components know it existing and can use it.
+
+We will create a new file that `export`s an Array of `Component`s that needed to be declared in the `NgModule`:
+{{{diff_step 5.4}}}
+
+And now let's load this Array of `Component`s into our `NgModule`:
+{{{diff_step 5.5}}}
+
+> The `...` is part of ES2016 language - it spreads the array like it was not an array, you can read more about it [here](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator).
+
+Now we have our parties-form directive showing on our app.
+
+# Angular 2 Forms
+
+Now let's get back to the form and make it functional.
+
+## Model-Driven Forms
+
+In order to use features of Angular 2 for Forms - we need to import `FormsModule` into our `NgModule`, so let's do it:
+{{{diff_step 5.6}}}
+
+> Full documentation of `FormsModule` and a comprehensive tutorial is located [here](https://angular.io/docs/ts/latest/guide/forms.html).
+
+Let's construct our form model. There is a special class for this called [`FormBuilder`](https://angular.io/docs/ts/latest/api/common/FormBuilder-class.html).
+
+First, we should import necessary dependencies, then build the model and its future fields with help of the `FormBuilder` instance:
+{{{diff_step 5.7}}}
+
+  > As you probably noticed, we used OnInit interface. It brings the ngOnInit method.
+  It initialize the directive/component after Angular initializes the data-bound input properties.
+  Angular will find and call methods like ngOnInit(), with or without the interfaces.
+  Nonetheless, we strongly recommend adding interfaces to TypeScript directive classes in order to benefit from strong typing and editor tooling.
+
+`FormGroup` is a set of `FormControl`s.
+
+Alternatively, we could write:
+
+    this.addForm = new FormGroup({
+      name: new FormControl()
+    });
+
+The first value provided is the initial value for the form control. For example:
+
+    this.addForm = this.formBuilder.group({
+      name: ['Bob']
+    });
+
+will initialize name to _Bob_ value.
+
+We can use `addForm.value` to access current state of the model:
+
+    console.log(this.addForm.value);
+    > { name: '', description: '', location: ''}
+
+We could also access the control values individually.
+
+    console.log(this.addForm.controls.name.value);
+    > ''
+
+Now let's move to the template. We have to bind to `formGroup` and add `formControlName` directives to our inputs.
+{{{diff_step 5.8}}}
+
+By `formGroup` we provide an instance of the `FormGroup`, in our case this is the `addForm`.
+
+But what about those `formControlName` directives? As you can see, we implemented them with values that match our `addForm` structure. Each `formControlName` binds value of a form element to the model.
+
+Now each time the user types inside these inputs, the value of the `addForm` and its controls will be automatically updated.
+
+Conversely, if `addForm` is changed outside of the HTML, the input values will be updated accordingly.
+
+Since `name` and `location` are required fields in our model, let's set up validation.
+
+In Angular2, it's less then easy, just add [`Validators.required`](https://angular.io/docs/ts/latest/api/common/Validators-class.html) as a second parameter to a required control:
+{{{diff_step 5.9}}}
+
+We can check `addForm.valid` property to determine if the form is valid:  
+
+    console.log(this.addForm.valid)
+    > false
+
+
+## Event Handlers
+
+### (ngSubmit)
+
+We just set up the form and synchronized it with the form model.
+
+Let's start adding new parties to the `Parties` collection.
+Before we start, we create a new submit button and a form submit event handler.
+
+It's worth mentioning one more great feature that appeared in Angular 2.
+It's possible now to define and use local variables in a template.
+
+For example, if we were using `Template-driven Forms`, to add a party we would need to take the
+current state of the form and pass it to an event handler.
+We could take the form and print it inside the template:
+
+    <form #f="ngForm">
+        ...
+        \{{f.value}}
+    </form>
+
+you'll see something like:
+
+    {name: '', description: '', location: ''}
+
+which is exactly what we would need — the form model object.
+
+Since we decided to use `Model-driven Forms` we won't use it, but I think it's worth to mention because of its simplicity and power.
+
+Back to the tutorial!
+
+Let's bind a submit event to the add button.
+
+This event will trigger if the button is clicked, or if the user presses enter on the final field.
+{{{diff_step 5.10}}}
+
+In Angular 2, events are indicated by the round bracket () syntax. Here we are telling Angular to call a method `addParty` on submit. Let's add the addParty method to our PartiesFormComponent class.
+{{{diff_step 5.11}}}
+
+> Note: TypeScript doesn't know which controls properties are available so we have to put them in the squery brackets.
+
+Open a different browser, fill out the form, submit and see how the party is added on both clients.
+
+## Types
+
+In order to get a better coded application, we will use the power of TypeScript and declare our types, models and interfaces of the database objects.
+
+First, we will get warning and errors from the TypeScript compiler, and we also get great IDE support if you uses WebStorm or VSCode.
+
+So first, let's create a base model for our database entities, which contains the `_id` field:
+{{{diff_step 5.14}}}
+
+And let's create a model for a single `Party` object:
+{{{diff_step 5.15}}}
+
+We will later use those to indicate the types of our collection and objects in the UI.
+
+### (click)
+
+Now, let's add the ability to delete parties.
+
+Let's add an X button to each party in our party list:
+{{{diff_step 5.12}}}
+
+Here again, we are binding an event to the class context and passing in the party as a parameter.
+
+Let's go into the class and add that method.
+
+Add the method inside the AppComponent class in `app.component.ts`:
+{{{diff_step 5.13}}}
+
+The Mongo Collection Parties has a method called "remove". We search for the relevant party by its identifier, `_id`, and delete it.
+
+Now try to delete a few parties. Since Meteor syncs data between clients, you can also watch them being removed from other browser clients.
+
+# Summary
+
+In this chapter we've seen:
+
+- How easy it is to create a form and access its data using Angular 2's power.
+- How easy it is to save that data to the storage using Meteor's power.
+- How to declare TypeScript interfaces and models.
diff --git a/manuals/views/step5.md b/manuals/views/step5.md
new file mode 100644
index 0000000..a624e8b
--- /dev/null
+++ b/manuals/views/step5.md
@@ -0,0 +1,500 @@
+[{]: <region> (header)
+# Step 5: Adding/removing objects and Angular event handling
+[}]: #
+[{]: <region> (body)
+Now that we have full data binding from server to client, let's interact with the data and see the updates in action.
+
+In this chapter we are going to:
+
+- create a new component to add or remove a party
+- learn about model-driven forms and create one
+- learn how to hook up form events to component methods
+- implement adding & removing party event handlers
+
+First, let's create a simple form with a button that will add a new party.
+
+# Component Architecture
+
+In Angular 2, we build a tree of components with the root `App` component and
+child components stemming out of it down to the leaves.
+
+Let's make a new component called `PartiesFormComponent`, and put it inside `parties` directory on the client-side (`client/imports/app/parties`).
+
+> Notice that we are placing the file inside the `imports` folder.  
+> That is another Meteor special folder name that tells Meteor to load the modules inside it just when some other module is importing it.  
+[{]: <helper> (diff_step 5.1)
+#### Step 5.1: Create PartiesForm component
+
+##### Added client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -0,0 +1,9 @@
++┊ ┊1┊import { Component } from '@angular/core';
++┊ ┊2┊
++┊ ┊3┊import template from './parties-form.component.html';
++┊ ┊4┊
++┊ ┊5┊@Component({
++┊ ┊6┊  selector: 'parties-form',
++┊ ┊7┊  template
++┊ ┊8┊})
++┊ ┊9┊export class PartiesFormComponent {}
+```
+[}]: #
+
+Notice that we are exporting the class `PartiesFormComponent` using ES6 module syntax.
+As a result, you'll be able to import `PartiesFormComponent` in any other component as follows:
+
+    import { PartiesFormComponent } from 'client/imports/app/parties/parties-form.component';
+
+By exporting and importing different modules, you create a modular structure of your app in ES6,
+which is similar to the modules in other script languages like Python.
+This is what makes programming in ES6 really awesome since application structure comes out rigid and clear.
+
+Let's add a template for the new component.
+
+Add a file with the following form:
+[{]: <helper> (diff_step 5.2)
+#### Step 5.2: Create template of PartiesForm
+
+##### Added client/imports/app/parties/parties-form.component.html
+```diff
+@@ -0,0 +1,12 @@
++┊  ┊ 1┊<form>
++┊  ┊ 2┊  <label>Name</label>
++┊  ┊ 3┊  <input type="text">
++┊  ┊ 4┊
++┊  ┊ 5┊  <label>Description</label>
++┊  ┊ 6┊  <input type="text">
++┊  ┊ 7┊
++┊  ┊ 8┊  <label>Location</label>
++┊  ┊ 9┊  <input type="text">
++┊  ┊10┊  
++┊  ┊11┊  <button>Add</button>
++┊  ┊12┊</form>🚫↵
+```
+[}]: #
+
+We can load the new `PartiesForm` component on the page by placing the `<parties-form>` tag in the root template `app.html`:
+[{]: <helper> (diff_step 5.3)
+#### Step 5.3: Add PartiesForm to App
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,4 +1,6 @@
+ ┊1┊1┊<div>
++┊ ┊2┊  <parties-form></parties-form>
++┊ ┊3┊  
+ ┊2┊4┊  <ul>
+ ┊3┊5┊    <li *ngFor="let party of parties | async">
+ ┊4┊6┊      {{party.name}}
+```
+[}]: #
+
+There is one more required step in Angular 2 to load a component - we need to declare it in the our `NgModule` so other Components know it existing and can use it.
+
+We will create a new file that `export`s an Array of `Component`s that needed to be declared in the `NgModule`:
+[{]: <helper> (diff_step 5.4)
+#### Step 5.4: Create index for parties with declarations
+
+##### Added client/imports/app/parties/index.ts
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊import { PartiesFormComponent } from './parties-form.component';
++┊ ┊2┊
++┊ ┊3┊export const PARTIES_DECLARATIONS = [
++┊ ┊4┊  PartiesFormComponent
++┊ ┊5┊];
+```
+[}]: #
+
+And now let's load this Array of `Component`s into our `NgModule`:
+[{]: <helper> (diff_step 5.5)
+#### Step 5.5: Add parties declarations to AppModule
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -2,13 +2,15 @@
+ ┊ 2┊ 2┊import { BrowserModule } from '@angular/platform-browser';
+ ┊ 3┊ 3┊
+ ┊ 4┊ 4┊import { AppComponent } from './app.component';
++┊  ┊ 5┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊ 5┊ 6┊
+ ┊ 6┊ 7┊@NgModule({
+ ┊ 7┊ 8┊  imports: [
+ ┊ 8┊ 9┊    BrowserModule
+ ┊ 9┊10┊  ],
+ ┊10┊11┊  declarations: [
+-┊11┊  ┊    AppComponent
++┊  ┊12┊    AppComponent,
++┊  ┊13┊    ...PARTIES_DECLARATIONS
+ ┊12┊14┊  ],
+ ┊13┊15┊  bootstrap: [
+ ┊14┊16┊    AppComponent
+```
+[}]: #
+
+> The `...` is part of ES2016 language - it spreads the array like it was not an array, you can read more about it [here](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator).
+
+Now we have our parties-form directive showing on our app.
+
+# Angular 2 Forms
+
+Now let's get back to the form and make it functional.
+
+## Model-Driven Forms
+
+In order to use features of Angular 2 for Forms - we need to import `FormsModule` into our `NgModule`, so let's do it:
+[{]: <helper> (diff_step 5.6)
+#### Step 5.6: Import Forms modules
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -1,12 +1,15 @@
+ ┊ 1┊ 1┊import { NgModule } from '@angular/core';
+ ┊ 2┊ 2┊import { BrowserModule } from '@angular/platform-browser';
++┊  ┊ 3┊import { FormsModule, ReactiveFormsModule } from '@angular/forms';
+ ┊ 3┊ 4┊
+ ┊ 4┊ 5┊import { AppComponent } from './app.component';
+ ┊ 5┊ 6┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊ 6┊ 7┊
+ ┊ 7┊ 8┊@NgModule({
+ ┊ 8┊ 9┊  imports: [
+-┊ 9┊  ┊    BrowserModule
++┊  ┊10┊    BrowserModule,
++┊  ┊11┊    FormsModule,
++┊  ┊12┊    ReactiveFormsModule
+ ┊10┊13┊  ],
+ ┊11┊14┊  declarations: [
+ ┊12┊15┊    AppComponent,
+```
+[}]: #
+
+> Full documentation of `FormsModule` and a comprehensive tutorial is located [here](https://angular.io/docs/ts/latest/guide/forms.html).
+
+Let's construct our form model. There is a special class for this called [`FormBuilder`](https://angular.io/docs/ts/latest/api/common/FormBuilder-class.html).
+
+First, we should import necessary dependencies, then build the model and its future fields with help of the `FormBuilder` instance:
+[{]: <helper> (diff_step 5.7)
+#### Step 5.7: Create form model
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -1,4 +1,5 @@
+-┊1┊ ┊import { Component } from '@angular/core';
++┊ ┊1┊import { Component, OnInit } from '@angular/core';
++┊ ┊2┊import { FormGroup, FormBuilder } from '@angular/forms';
+ ┊2┊3┊
+ ┊3┊4┊import template from './parties-form.component.html';
+ ┊4┊5┊
+```
+```diff
+@@ -6,4 +7,18 @@
+ ┊ 6┊ 7┊  selector: 'parties-form',
+ ┊ 7┊ 8┊  template
+ ┊ 8┊ 9┊})
+-┊ 9┊  ┊export class PartiesFormComponent {}
++┊  ┊10┊export class PartiesFormComponent implements OnInit {
++┊  ┊11┊  addForm: FormGroup;
++┊  ┊12┊
++┊  ┊13┊  constructor(
++┊  ┊14┊    private formBuilder: FormBuilder
++┊  ┊15┊  ) {}
++┊  ┊16┊
++┊  ┊17┊  ngOnInit() {
++┊  ┊18┊    this.addForm = this.formBuilder.group({
++┊  ┊19┊      name: [],
++┊  ┊20┊      description: [],
++┊  ┊21┊      location: []
++┊  ┊22┊    });
++┊  ┊23┊  }
++┊  ┊24┊}
+```
+[}]: #
+
+  > As you probably noticed, we used OnInit interface. It brings the ngOnInit method.
+  It initialize the directive/component after Angular initializes the data-bound input properties.
+  Angular will find and call methods like ngOnInit(), with or without the interfaces.
+  Nonetheless, we strongly recommend adding interfaces to TypeScript directive classes in order to benefit from strong typing and editor tooling.
+
+`FormGroup` is a set of `FormControl`s.
+
+Alternatively, we could write:
+
+    this.addForm = new FormGroup({
+      name: new FormControl()
+    });
+
+The first value provided is the initial value for the form control. For example:
+
+    this.addForm = this.formBuilder.group({
+      name: ['Bob']
+    });
+
+will initialize name to _Bob_ value.
+
+We can use `addForm.value` to access current state of the model:
+
+    console.log(this.addForm.value);
+    > { name: '', description: '', location: ''}
+
+We could also access the control values individually.
+
+    console.log(this.addForm.controls.name.value);
+    > ''
+
+Now let's move to the template. We have to bind to `formGroup` and add `formControlName` directives to our inputs.
+[{]: <helper> (diff_step 5.8)
+#### Step 5.8: Implement form directives
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -1,12 +1,12 @@
+-┊ 1┊  ┊<form>
++┊  ┊ 1┊<form [formGroup]="addForm">
+ ┊ 2┊ 2┊  <label>Name</label>
+-┊ 3┊  ┊  <input type="text">
++┊  ┊ 3┊  <input type="text" formControlName="name">
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊  <label>Description</label>
+-┊ 6┊  ┊  <input type="text">
++┊  ┊ 6┊  <input type="text" formControlName="description">
+ ┊ 7┊ 7┊
+ ┊ 8┊ 8┊  <label>Location</label>
+-┊ 9┊  ┊  <input type="text">
++┊  ┊ 9┊  <input type="text" formControlName="location">
+ ┊10┊10┊  
+-┊11┊  ┊  <button>Add</button>
++┊  ┊11┊  <button type="submit">Add</button>
+ ┊12┊12┊</form>🚫↵
+```
+[}]: #
+
+By `formGroup` we provide an instance of the `FormGroup`, in our case this is the `addForm`.
+
+But what about those `formControlName` directives? As you can see, we implemented them with values that match our `addForm` structure. Each `formControlName` binds value of a form element to the model.
+
+Now each time the user types inside these inputs, the value of the `addForm` and its controls will be automatically updated.
+
+Conversely, if `addForm` is changed outside of the HTML, the input values will be updated accordingly.
+
+Since `name` and `location` are required fields in our model, let's set up validation.
+
+In Angular2, it's less then easy, just add [`Validators.required`](https://angular.io/docs/ts/latest/api/common/Validators-class.html) as a second parameter to a required control:
+[{]: <helper> (diff_step 5.9)
+#### Step 5.9: Add validators
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -1,5 +1,5 @@
+ ┊1┊1┊import { Component, OnInit } from '@angular/core';
+-┊2┊ ┊import { FormGroup, FormBuilder } from '@angular/forms';
++┊ ┊2┊import { FormGroup, FormBuilder, Validators } from '@angular/forms';
+ ┊3┊3┊
+ ┊4┊4┊import template from './parties-form.component.html';
+ ┊5┊5┊
+```
+```diff
+@@ -16,9 +16,9 @@
+ ┊16┊16┊
+ ┊17┊17┊  ngOnInit() {
+ ┊18┊18┊    this.addForm = this.formBuilder.group({
+-┊19┊  ┊      name: [],
++┊  ┊19┊      name: ['', Validators.required],
+ ┊20┊20┊      description: [],
+-┊21┊  ┊      location: []
++┊  ┊21┊      location: ['', Validators.required]
+ ┊22┊22┊    });
+ ┊23┊23┊  }
+ ┊24┊24┊}
+```
+[}]: #
+
+We can check `addForm.valid` property to determine if the form is valid:  
+
+    console.log(this.addForm.valid)
+    > false
+
+
+## Event Handlers
+
+### (ngSubmit)
+
+We just set up the form and synchronized it with the form model.
+
+Let's start adding new parties to the `Parties` collection.
+Before we start, we create a new submit button and a form submit event handler.
+
+It's worth mentioning one more great feature that appeared in Angular 2.
+It's possible now to define and use local variables in a template.
+
+For example, if we were using `Template-driven Forms`, to add a party we would need to take the
+current state of the form and pass it to an event handler.
+We could take the form and print it inside the template:
+
+    <form #f="ngForm">
+        ...
+        {{f.value}}
+    </form>
+
+you'll see something like:
+
+    {name: '', description: '', location: ''}
+
+which is exactly what we would need — the form model object.
+
+Since we decided to use `Model-driven Forms` we won't use it, but I think it's worth to mention because of its simplicity and power.
+
+Back to the tutorial!
+
+Let's bind a submit event to the add button.
+
+This event will trigger if the button is clicked, or if the user presses enter on the final field.
+[{]: <helper> (diff_step 5.10)
+#### Step 5.10: Add ngSubmit to the form
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -1,4 +1,4 @@
+-┊1┊ ┊<form [formGroup]="addForm">
++┊ ┊1┊<form [formGroup]="addForm" (ngSubmit)="addParty()">
+ ┊2┊2┊  <label>Name</label>
+ ┊3┊3┊  <input type="text" formControlName="name">
+```
+[}]: #
+
+In Angular 2, events are indicated by the round bracket () syntax. Here we are telling Angular to call a method `addParty` on submit. Let's add the addParty method to our PartiesFormComponent class.
+[{]: <helper> (diff_step 5.11)
+#### Step 5.11: Add addParty method
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -1,6 +1,8 @@
+ ┊1┊1┊import { Component, OnInit } from '@angular/core';
+ ┊2┊2┊import { FormGroup, FormBuilder, Validators } from '@angular/forms';
+ ┊3┊3┊
++┊ ┊4┊import { Parties } from '../../../../both/collections/parties.collection';
++┊ ┊5┊
+ ┊4┊6┊import template from './parties-form.component.html';
+ ┊5┊7┊
+ ┊6┊8┊@Component({
+```
+```diff
+@@ -21,4 +23,12 @@
+ ┊21┊23┊      location: ['', Validators.required]
+ ┊22┊24┊    });
+ ┊23┊25┊  }
++┊  ┊26┊
++┊  ┊27┊  addParty(): void {
++┊  ┊28┊    if (this.addForm.valid) {
++┊  ┊29┊      Parties.insert(this.addForm.value);
++┊  ┊30┊
++┊  ┊31┊      this.addForm.reset();
++┊  ┊32┊    }
++┊  ┊33┊  }
+ ┊24┊34┊}
+```
+[}]: #
+
+> Note: TypeScript doesn't know which controls properties are available so we have to put them in the squery brackets.
+
+Open a different browser, fill out the form, submit and see how the party is added on both clients.
+
+## Types
+
+In order to get a better coded application, we will use the power of TypeScript and declare our types, models and interfaces of the database objects.
+
+First, we will get warning and errors from the TypeScript compiler, and we also get great IDE support if you uses WebStorm or VSCode.
+
+So first, let's create a base model for our database entities, which contains the `_id` field:
+[{]: <helper> (diff_step 5.14)
+#### Step 5.14: Create CollectionObject model
+
+##### Added both/models/collection-object.model.ts
+```diff
+@@ -0,0 +1,3 @@
++┊ ┊1┊export interface CollectionObject {
++┊ ┊2┊  _id?: string;
++┊ ┊3┊}🚫↵
+```
+[}]: #
+
+And let's create a model for a single `Party` object:
+[{]: <helper> (diff_step 5.15)
+#### Step 5.15: Extend Party by CollectionObject model
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -1,4 +1,6 @@
+-┊1┊ ┊export interface Party {
++┊ ┊1┊import { CollectionObject } from './collection-object.model';
++┊ ┊2┊
++┊ ┊3┊export interface Party extends CollectionObject {
+ ┊2┊4┊  name: string;
+ ┊3┊5┊  description: string;
+ ┊4┊6┊  location: string;
+```
+[}]: #
+
+We will later use those to indicate the types of our collection and objects in the UI.
+
+### (click)
+
+Now, let's add the ability to delete parties.
+
+Let's add an X button to each party in our party list:
+[{]: <helper> (diff_step 5.12)
+#### Step 5.12: Add remove button
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -6,6 +6,7 @@
+ ┊ 6┊ 6┊      {{party.name}}
+ ┊ 7┊ 7┊      <p>{{party.description}}</p>
+ ┊ 8┊ 8┊      <p>{{party.location}}</p>
++┊  ┊ 9┊      <button (click)="removeParty(party)">X</button>
+ ┊ 9┊10┊    </li>
+ ┊10┊11┊  </ul>
+ ┊11┊12┊</div>🚫↵
+```
+[}]: #
+
+Here again, we are binding an event to the class context and passing in the party as a parameter.
+
+Let's go into the class and add that method.
+
+Add the method inside the AppComponent class in `app.component.ts`:
+[{]: <helper> (diff_step 5.13)
+#### Step 5.13: Implement removeParty method
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -16,4 +16,8 @@
+ ┊16┊16┊  constructor() {
+ ┊17┊17┊    this.parties = Parties.find({}).zone();
+ ┊18┊18┊  }
++┊  ┊19┊
++┊  ┊20┊  removeParty(party: Party): void {
++┊  ┊21┊    Parties.remove(party._id);
++┊  ┊22┊  }
+ ┊19┊23┊}
+```
+[}]: #
+
+The Mongo Collection Parties has a method called "remove". We search for the relevant party by its identifier, `_id`, and delete it.
+
+Now try to delete a few parties. Since Meteor syncs data between clients, you can also watch them being removed from other browser clients.
+
+# Summary
+
+In this chapter we've seen:
+
+- How easy it is to create a form and access its data using Angular 2's power.
+- How easy it is to save that data to the storage using Meteor's power.
+- How to declare TypeScript interfaces and models.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step4.md) | [Next Step >](step6.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 4fb9bb81dd91316a2b42abb6a41a5b1674c5b02d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:31:20 +0200
Subject: [PATCH 042/304] Step 6.1: Create PartiesList component

---
 .../imports/app/parties/parties-list.component.ts  | 23 ++++++++++++++++++++++
 1 file changed, 23 insertions(+)
 create mode 100644 client/imports/app/parties/parties-list.component.ts

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
new file mode 100644
index 0000000..bb09b1c
--- /dev/null
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -0,0 +1,23 @@
+import { Component } from '@angular/core';
+import { Observable } from 'rxjs/Observable';
+
+import { Parties } from '../../../../both/collections/parties.collection';
+import { Party } from '../../../../both/models/party.model';
+
+import template from './parties-list.component.html';
+
+@Component({
+  selector: 'parties-list',
+  template
+})
+export class PartiesListComponent {
+  parties: Observable<Party[]>;
+
+  constructor() {
+    this.parties = Parties.find({}).zone();
+  }
+
+  removeParty(party: Party): void {
+    Parties.remove(party._id);
+  }
+}
-- 
2.10.2


From 4e81f6cffe37df0411e7eb1515d08907c9f12576 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 14:36:04 +0300
Subject: [PATCH 043/304] Step 6.2: Copy contents of app.html to PartiesList
 template

---
 client/imports/app/parties/parties-list.component.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 client/imports/app/parties/parties-list.component.html

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
new file mode 100644
index 0000000..49136a9
--- /dev/null
+++ b/client/imports/app/parties/parties-list.component.html
@@ -0,0 +1,12 @@
+<div>
+  <parties-form></parties-form>
+
+  <ul>
+    <li *ngFor="let party of parties | async">
+      {{party.name}}
+      <p>{{party.description}}</p>
+      <p>{{party.location}}</p>
+      <button (click)="removeParty(party)">X</button>
+    </li>
+  </ul>
+</div>
\ No newline at end of file
-- 
2.10.2


From 6c3dffbc762f9528655e17f55f5851f1cf6f92b3 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 14:36:19 +0300
Subject: [PATCH 044/304] Step 6.3: Clean up App component

---
 client/imports/app/app.component.ts | 16 +---------------
 1 file changed, 1 insertion(+), 15 deletions(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 02d31fc..91e1a06 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -1,8 +1,4 @@
 import { Component } from '@angular/core';
-import { Observable } from 'rxjs/Observable';
-
-import { Parties } from '../../../both/collections/parties.collection';
-import { Party } from '../../../both/models/party.model';
 
 import template from './app.component.html';
 
@@ -10,14 +6,4 @@ import template from './app.component.html';
   selector: 'app',
   template
 })
-export class AppComponent {
-  parties: Observable<Party[]>;
-
-  constructor() {
-    this.parties = Parties.find({}).zone();
-  }
-
-  removeParty(party: Party): void {
-    Parties.remove(party._id);
-  }
-}
+export class AppComponent {}
-- 
2.10.2


From e2dab2cf9e5facc0abb5071b35fbac2e1e680b4d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:33:33 +0200
Subject: [PATCH 045/304] Step 6.4: Clean up App template

---
 client/imports/app/app.component.html | 13 +------------
 1 file changed, 1 insertion(+), 12 deletions(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index 0820d66..281c686 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,12 +1 @@
-<div>
-  <parties-form></parties-form>
-  
-  <ul>
-    <li *ngFor="let party of parties | async">
-      {{party.name}}
-      <p>{{party.description}}</p>
-      <p>{{party.location}}</p>
-      <button (click)="removeParty(party)">X</button>
-    </li>
-  </ul>
-</div>
\ No newline at end of file
+<div></div>
\ No newline at end of file
-- 
2.10.2


From fa278bb254f53d49eb86eca987e61ba86962474f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:34:43 +0200
Subject: [PATCH 046/304] Step 6.5: Add PartiesList to parties declarations

---
 client/imports/app/parties/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/index.ts b/client/imports/app/parties/index.ts
index c5e7e18..06ca4d7 100644
--- a/client/imports/app/parties/index.ts
+++ b/client/imports/app/parties/index.ts
@@ -1,5 +1,7 @@
 import { PartiesFormComponent } from './parties-form.component';
+import { PartiesListComponent } from './parties-list.component';
 
 export const PARTIES_DECLARATIONS = [
-  PartiesFormComponent
+  PartiesFormComponent,
+  PartiesListComponent
 ];
-- 
2.10.2


From e470d8f84b96be91998cda88bbb9b8c659c8f040 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:36:34 +0200
Subject: [PATCH 047/304] Step 6.6: Define routes

---
 client/imports/app/app.routes.ts | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 client/imports/app/app.routes.ts

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
new file mode 100644
index 0000000..8f6b8bb
--- /dev/null
+++ b/client/imports/app/app.routes.ts
@@ -0,0 +1,7 @@
+import { Route } from '@angular/router';
+
+import { PartiesListComponent } from './parties/parties-list.component';
+
+export const routes: Route[] = [
+  { path: '', component: PartiesListComponent }
+];
-- 
2.10.2


From df3bf08d410378e86e0cb7c8fc2156ae86af7d81 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:37:43 +0200
Subject: [PATCH 048/304] Step 6.7: Register RouterModule

---
 client/imports/app/app.module.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 8e8c303..192c630 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -1,15 +1,18 @@
 import { NgModule } from '@angular/core';
 import { BrowserModule } from '@angular/platform-browser';
 import { FormsModule, ReactiveFormsModule } from '@angular/forms';
+import { RouterModule } from '@angular/router';
 
 import { AppComponent } from './app.component';
+import { routes } from './app.routes';
 import { PARTIES_DECLARATIONS } from './parties';
 
 @NgModule({
   imports: [
     BrowserModule,
     FormsModule,
-    ReactiveFormsModule
+    ReactiveFormsModule,
+    RouterModule.forRoot(routes)
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From fe6887519afcf427551665497eaa344ef91f1aeb Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:39:51 +0200
Subject: [PATCH 049/304] Step 6.8: Implement routerOutlet

---
 client/imports/app/app.component.html | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index 281c686..b426778 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1 +1,3 @@
-<div></div>
\ No newline at end of file
+<div>
+  <router-outlet></router-outlet>
+</div>
\ No newline at end of file
-- 
2.10.2


From a9d558e19613e33453dc677aa61d2c342f4d7166 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:46:44 +0200
Subject: [PATCH 050/304] Step 6.9: Add PartyDetails component

---
 client/imports/app/parties/party-details.component.ts | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/imports/app/parties/party-details.component.ts

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
new file mode 100644
index 0000000..67c86ab
--- /dev/null
+++ b/client/imports/app/parties/party-details.component.ts
@@ -0,0 +1,9 @@
+import { Component } from '@angular/core';
+
+import template from './party-details.component.html';
+
+@Component({
+  selector: 'party-details',
+  template
+})
+export class PartyDetailsComponent {}
-- 
2.10.2


From f7341ab50d2473e8d417f436ff46ae9244f1e80f Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:47:24 +0200
Subject: [PATCH 051/304] Step 6.10: Create template for PartyDetails

---
 client/imports/app/parties/party-details.component.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/app/parties/party-details.component.html

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
new file mode 100644
index 0000000..a3da9f4
--- /dev/null
+++ b/client/imports/app/parties/party-details.component.html
@@ -0,0 +1,5 @@
+<header>
+  <h2>PARTY_NAME</h2>
+
+  <p>PARTY_DESCRIPTION</p>
+</header>
\ No newline at end of file
-- 
2.10.2


From 3054761a2145d2c4f80bfe4bf2c64c5bc620796d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:48:22 +0200
Subject: [PATCH 052/304] Step 6.11: Add component to declarations

---
 client/imports/app/app.routes.ts    | 4 +++-
 client/imports/app/parties/index.ts | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index 8f6b8bb..fef7277 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -1,7 +1,9 @@
 import { Route } from '@angular/router';
 
 import { PartiesListComponent } from './parties/parties-list.component';
+import { PartyDetailsComponent } from './parties/party-details.component';
 
 export const routes: Route[] = [
-  { path: '', component: PartiesListComponent }
+  { path: '', component: PartiesListComponent },
+  { path: 'party/:partyId', component: PartyDetailsComponent }
 ];
diff --git a/client/imports/app/parties/index.ts b/client/imports/app/parties/index.ts
index 06ca4d7..ae09066 100644
--- a/client/imports/app/parties/index.ts
+++ b/client/imports/app/parties/index.ts
@@ -1,7 +1,9 @@
 import { PartiesFormComponent } from './parties-form.component';
 import { PartiesListComponent } from './parties-list.component';
+import { PartyDetailsComponent } from './party-details.component';
 
 export const PARTIES_DECLARATIONS = [
   PartiesFormComponent,
-  PartiesListComponent
+  PartiesListComponent,
+  PartyDetailsComponent
 ];
-- 
2.10.2


From 632c64c6ce44ea4fa7a9196362b5fb477440542a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:49:46 +0200
Subject: [PATCH 053/304] Step 6.12: Use routerLink in PartiesList component

---
 client/imports/app/parties/parties-list.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 49136a9..488ba09 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -3,7 +3,7 @@
 
   <ul>
     <li *ngFor="let party of parties | async">
-      {{party.name}}
+      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
-- 
2.10.2


From 74676c95ca46e958e11c0d2ad12db3bd7ec0d55b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:52:55 +0200
Subject: [PATCH 054/304] Step 6.13: Subscribe to get the partyId

---
 client/imports/app/parties/party-details.component.ts | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 67c86ab..55c5b8b 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -1,4 +1,7 @@
-import { Component } from '@angular/core';
+import { Component, OnInit } from '@angular/core';
+import { ActivatedRoute } from '@angular/router';
+
+import 'rxjs/add/operator/map';
 
 import template from './party-details.component.html';
 
@@ -6,4 +9,16 @@ import template from './party-details.component.html';
   selector: 'party-details',
   template
 })
-export class PartyDetailsComponent {}
+export class PartyDetailsComponent implements OnInit {
+  partyId: string;
+
+  constructor(
+    private route: ActivatedRoute
+  ) {}
+
+  ngOnInit() {
+    this.route.params
+      .map(params => params['partyId'])
+      .subscribe(partyId => this.partyId = partyId);
+  }
+}
-- 
2.10.2


From 03256d1e5525ed2f8f40cf8b0941910850427959 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:54:26 +0200
Subject: [PATCH 055/304] Step 6.14: Unsubscribe when component is being
 destroyed

---
 client/imports/app/parties/party-details.component.ts | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 55c5b8b..1f2562b 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -1,5 +1,6 @@
-import { Component, OnInit } from '@angular/core';
+import { Component, OnInit, OnDestroy } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
+import { Subscription } from 'rxjs/Subscription';
 
 import 'rxjs/add/operator/map';
 
@@ -9,16 +10,21 @@ import template from './party-details.component.html';
   selector: 'party-details',
   template
 })
-export class PartyDetailsComponent implements OnInit {
+export class PartyDetailsComponent implements OnInit, OnDestroy {
   partyId: string;
+  paramsSub: Subscription;
 
   constructor(
     private route: ActivatedRoute
   ) {}
 
   ngOnInit() {
-    this.route.params
+    this.paramsSub = this.route.params
       .map(params => params['partyId'])
       .subscribe(partyId => this.partyId = partyId);
   }
+
+  ngOnDestroy() {
+    this.paramsSub.unsubscribe();
+  }
 }
-- 
2.10.2


From f9c69268bed38463a251d6cbd2a17b993485d76b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:57:48 +0200
Subject: [PATCH 056/304] Step 6.15: Load party details

---
 client/imports/app/parties/party-details.component.ts | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 1f2562b..6c53448 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -1,9 +1,12 @@
 import { Component, OnInit, OnDestroy } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
-import { Subscription } from 'rxjs/Subscription';
+import { Subscription } from 'rxjs/Subscription'; 
 
 import 'rxjs/add/operator/map';
 
+import { Parties } from '../../../../both/collections/parties.collection';
+import { Party } from '../../../../both/models/party.model';
+
 import template from './party-details.component.html';
 
 @Component({
@@ -13,6 +16,7 @@ import template from './party-details.component.html';
 export class PartyDetailsComponent implements OnInit, OnDestroy {
   partyId: string;
   paramsSub: Subscription;
+  party: Party;
 
   constructor(
     private route: ActivatedRoute
@@ -21,7 +25,11 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   ngOnInit() {
     this.paramsSub = this.route.params
       .map(params => params['partyId'])
-      .subscribe(partyId => this.partyId = partyId);
+      .subscribe(partyId => {
+        this.partyId = partyId
+        
+        this.party = Parties.findOne(this.partyId);
+      });
   }
 
   ngOnDestroy() {
-- 
2.10.2


From 983b68660d19aa1b2a1830f31488e428997046b7 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:50 -0200
Subject: [PATCH 057/304] Step 6: Routing & Multiple Views

---
 manuals/templates/step6.md | 169 +++++++++++++++
 manuals/views/step6.md     | 512 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 681 insertions(+)
 create mode 100644 manuals/templates/step6.md
 create mode 100644 manuals/views/step6.md

diff --git a/manuals/templates/step6.md b/manuals/templates/step6.md
new file mode 100644
index 0000000..815c418
--- /dev/null
+++ b/manuals/templates/step6.md
@@ -0,0 +1,169 @@
+In this step, you will learn:
+
+-  how to create a layout template
+-  how to build an app that has multiple views with the new Angular router.
+
+The goal for this step is to add one more page to the app that shows the details of the selected party.
+
+By default we have a list of parties shown on the page, but when a user clicks on a list item, the app should navigate to the new page and show selected party details.
+
+
+## Parties List
+
+Since we want to have multiple views in our app we have to move the current list of parties into the separate component.
+
+Let's move the content of AppComponent in `app.component.ts` out into a `PartiesList` component.
+
+Create a new file called `parties-list.component.ts` and put it in `client/imports/app/parties` directory.
+
+{{{diff_step 6.1}}}
+
+There are few things we did in that step:
+
+- Updated path of the module with `Parties` collection
+- Changed the name of the template
+- Used `parties-list` as the selector instead of `app`
+- Renamed the class
+
+Now we can copy `app.component.html` into the `parties` directory and rename it `parties-list.component.html`:
+
+{{{diff_step 6.2}}}
+
+Also, let's clean-up `app.component.ts` to prepare it for the next steps:
+
+{{{diff_step 6.3}}}
+
+and the template for it, which is `app.component.html`:
+
+> You will notice that the interface of your app has disappeared. But don't worry! It will come back later on.
+
+{{{diff_step 6.4}}}
+
+And let's add the new Component to the index file:
+
+{{{diff_step 6.5}}}
+
+# Routing
+
+
+`@angular/router` is the package in charge of Routing in Angular 2, and we will learn how to use it now.
+
+This package provides utils to define our routes, and get them as `NgModule` object we just include in our application.
+
+**Defining routes**
+
+We need to create an array of route definitions. The `Route` interface comes with help. This way we can be sure that properties of that object are correctly used.
+
+The very basic two properties are `path` and `component`. The path is to define the url and the other one is to bind a component to it.
+
+We will export our routes using `routes` variable.
+
+Let's warp it in the `app.routes.ts` file, here's what it suppose to look like:
+
+{{{diff_step 6.6}}}
+
+Now we can use `routes` in the `NgModule`, with the `RouteModule` provided by Angular 2:
+
+{{{diff_step 6.7}}}
+
+Our app still has to display the view somewhere. We'll use `routerOutlet` component to do this.
+
+{{{diff_step 6.8}}}
+
+Now, because we use a router that based on the browser path and URL - we need to tell Angular 2 router which path is the base path.
+
+We already have it because we used the Angular 2 boilerplate, but if you are looking for it - you can find it in `client/index.html` file:
+
+    <base href="/">
+
+# Parties details
+
+Let's add another view to the app: `PartyDetailsComponent`. Since it's not possible yet to get party details in this component, we are only going to make stubs.
+
+When we're finished, clicking on a party in the list should redirect us to the PartyDetailsComponent for more information.
+
+{{{diff_step 6.9}}}
+
+And add a simple template outline for the party details:
+
+{{{diff_step 6.10}}}
+
+And let's add the new Component to the index file:
+
+{{{diff_step 6.11} filename="client/imports/app/parties/index.ts"}}
+
+Now we can define the route:
+
+{{{diff_step 6.11} filename="client/imports/app/app.routes.ts"}}
+
+As you can see, we used `:partyId` inside of the path string. This way we define parameters. For example, `localhost:3000/party/12` will point to the PartyDetailsComponent with `12` as the value of the `partyId` parameter.
+
+We still have to add a link that redirects to party details.
+
+# RouterLink
+
+Let's add links to the new router details view from the list of parties.
+
+As we've already seen, each party link consists of two parts: the base `PartyDetailsComponent` URL and a party ID, represented by the `partyId` in the configuration. There is a special directive called `routerLink` that will help us to compose each URL.
+
+Now we can wrap our party in a `routerLink` and pass in the _id as a parameter. Note that the id is auto-generated when an item is inserted into a Mongo Collection.
+
+{{{diff_step 6.12}}}
+
+As you can see, we used an array. The first element is a path that we want to use and the next one is to provide a value of a parameter.
+
+> You can provide more than one parameter by adding more elements into an array.
+
+# Injecting Route Params
+
+We've just added links to the `PartyDetails` view.
+
+The next thing is to grab the `partyId` route parameter in order to load the correct party in the `PartyDetails` view.
+
+In Angular 2, it's as simple as passing the `ActivatedRoute` argument to the `PartyDetails` constructor:
+
+{{{diff_step 6.13}}}
+
+> We used another RxJS feature called `map` - which transform the stream of data into another object - in this case, we want to get the `partyId` from the `params`, then we subscribe to the return value of this function - and the subscription will be called only with the `partyId` that we need.
+
+> As you might noticed, Angular 2 uses RxJS internally and exposes a lot of APIs using RxJS Observable!
+
+Dependency injection is employed heavily here by Angular 2 to do all the work behind the scenes.
+
+TypeScript first compiles this class with the class metadata that says what argument types this class expects in the constructor (i.e. `ActivatedRoute`),
+so Angular 2 knows what types to inject if asked to create an instance of this class.
+
+Then, when you click on a party details link, the `router-outlet` directive will create a `ActivatedRoute` provider that provides
+parameters for the current URL. Right after that moment if a `PartyDetails` instance is created by means of the dependency injection API, it's created with `ActivatedRoute` injected and equalled to the current URL inside the constructor.
+
+If you want to read more about dependency injection in Angular 2, you can find an extensive overview in this [article](http://blog.thoughtram.io/angular/2015/05/18/dependency-injection-in-angular-2.html).
+If you are curious about class metadata read more about it [here](http://blog.thoughtram.io/angular/2015/09/17/resolve-service-dependencies-in-angular-2.html).
+
+In order to avoid memory leaks and performance issues, we need to make sure that every time we use `subscribe` in our Component - we also use `unsubscribe` when the data is no longer interesting.
+
+In order to do so, we will use Angular 2 interface called `OnDestroy` and implement `ngOnDestroy` - which called when our Component is no longer in the view and removed from the DOM.
+
+So let's implement this:
+
+{{{diff_step 6.14}}}
+
+Now, we need to get the actual `Party` object with the ID we got from the Router, so let's use the `Parties` collection to get it:
+
+{{{diff_step 6.15}}}
+
+> `findOne` return the actual object instead of returning Observable or Cursor.
+
+In our next step we will display the party details inside our view!
+
+# Challenge
+
+Add a link back to the `PartiesList` component from `PartyDetails`.
+
+# Summary
+
+Let's list what we've accomplished in this step:
+
+- split our app into two main views
+- configured routing to use these views and created a layout template
+- learned briefly how dependency injection works in Angular 2
+- injected route parameters and loaded party details with the ID parameter
diff --git a/manuals/views/step6.md b/manuals/views/step6.md
new file mode 100644
index 0000000..80efb09
--- /dev/null
+++ b/manuals/views/step6.md
@@ -0,0 +1,512 @@
+[{]: <region> (header)
+# Step 6: Routing & Multiple Views
+[}]: #
+[{]: <region> (body)
+In this step, you will learn:
+
+-  how to create a layout template
+-  how to build an app that has multiple views with the new Angular router.
+
+The goal for this step is to add one more page to the app that shows the details of the selected party.
+
+By default we have a list of parties shown on the page, but when a user clicks on a list item, the app should navigate to the new page and show selected party details.
+
+
+## Parties List
+
+Since we want to have multiple views in our app we have to move the current list of parties into the separate component.
+
+Let's move the content of AppComponent in `app.component.ts` out into a `PartiesList` component.
+
+Create a new file called `parties-list.component.ts` and put it in `client/imports/app/parties` directory.
+
+[{]: <helper> (diff_step 6.1)
+#### Step 6.1: Create PartiesList component
+
+##### Added client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -0,0 +1,23 @@
++┊  ┊ 1┊import { Component } from '@angular/core';
++┊  ┊ 2┊import { Observable } from 'rxjs/Observable';
++┊  ┊ 3┊
++┊  ┊ 4┊import { Parties } from '../../../../both/collections/parties.collection';
++┊  ┊ 5┊import { Party } from '../../../../both/models/party.model';
++┊  ┊ 6┊
++┊  ┊ 7┊import template from './parties-list.component.html';
++┊  ┊ 8┊
++┊  ┊ 9┊@Component({
++┊  ┊10┊  selector: 'parties-list',
++┊  ┊11┊  template
++┊  ┊12┊})
++┊  ┊13┊export class PartiesListComponent {
++┊  ┊14┊  parties: Observable<Party[]>;
++┊  ┊15┊
++┊  ┊16┊  constructor() {
++┊  ┊17┊    this.parties = Parties.find({}).zone();
++┊  ┊18┊  }
++┊  ┊19┊
++┊  ┊20┊  removeParty(party: Party): void {
++┊  ┊21┊    Parties.remove(party._id);
++┊  ┊22┊  }
++┊  ┊23┊}
+```
+[}]: #
+
+There are few things we did in that step:
+
+- Updated path of the module with `Parties` collection
+- Changed the name of the template
+- Used `parties-list` as the selector instead of `app`
+- Renamed the class
+
+Now we can copy `app.component.html` into the `parties` directory and rename it `parties-list.component.html`:
+
+[{]: <helper> (diff_step 6.2)
+#### Step 6.2: Copy contents of app.html to PartiesList template
+
+##### Added client/imports/app/parties/parties-list.component.html
+```diff
+@@ -0,0 +1,12 @@
++┊  ┊ 1┊<div>
++┊  ┊ 2┊  <parties-form></parties-form>
++┊  ┊ 3┊
++┊  ┊ 4┊  <ul>
++┊  ┊ 5┊    <li *ngFor="let party of parties | async">
++┊  ┊ 6┊      {{party.name}}
++┊  ┊ 7┊      <p>{{party.description}}</p>
++┊  ┊ 8┊      <p>{{party.location}}</p>
++┊  ┊ 9┊      <button (click)="removeParty(party)">X</button>
++┊  ┊10┊    </li>
++┊  ┊11┊  </ul>
++┊  ┊12┊</div>🚫↵
+```
+[}]: #
+
+Also, let's clean-up `app.component.ts` to prepare it for the next steps:
+
+[{]: <helper> (diff_step 6.3)
+#### Step 6.3: Clean up App component
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -1,8 +1,4 @@
+ ┊1┊1┊import { Component } from '@angular/core';
+-┊2┊ ┊import { Observable } from 'rxjs/Observable';
+-┊3┊ ┊
+-┊4┊ ┊import { Parties } from '../../../both/collections/parties.collection';
+-┊5┊ ┊import { Party } from '../../../both/models/party.model';
+ ┊6┊2┊
+ ┊7┊3┊import template from './app.component.html';
+ ┊8┊4┊
+```
+```diff
+@@ -10,14 +6,4 @@
+ ┊10┊ 6┊  selector: 'app',
+ ┊11┊ 7┊  template
+ ┊12┊ 8┊})
+-┊13┊  ┊export class AppComponent {
+-┊14┊  ┊  parties: Observable<Party[]>;
+-┊15┊  ┊
+-┊16┊  ┊  constructor() {
+-┊17┊  ┊    this.parties = Parties.find({}).zone();
+-┊18┊  ┊  }
+-┊19┊  ┊
+-┊20┊  ┊  removeParty(party: Party): void {
+-┊21┊  ┊    Parties.remove(party._id);
+-┊22┊  ┊  }
+-┊23┊  ┊}
++┊  ┊ 9┊export class AppComponent {}
+```
+[}]: #
+
+and the template for it, which is `app.component.html`:
+
+> You will notice that the interface of your app has disappeared. But don't worry! It will come back later on.
+
+[{]: <helper> (diff_step 6.4)
+#### Step 6.4: Clean up App template
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,12 +1 @@
+-┊ 1┊  ┊<div>
+-┊ 2┊  ┊  <parties-form></parties-form>
+-┊ 3┊  ┊  
+-┊ 4┊  ┊  <ul>
+-┊ 5┊  ┊    <li *ngFor="let party of parties | async">
+-┊ 6┊  ┊      {{party.name}}
+-┊ 7┊  ┊      <p>{{party.description}}</p>
+-┊ 8┊  ┊      <p>{{party.location}}</p>
+-┊ 9┊  ┊      <button (click)="removeParty(party)">X</button>
+-┊10┊  ┊    </li>
+-┊11┊  ┊  </ul>
+-┊12┊  ┊</div>🚫↵
++┊  ┊ 1┊<div></div>🚫↵
+```
+[}]: #
+
+And let's add the new Component to the index file:
+
+[{]: <helper> (diff_step 6.5)
+#### Step 6.5: Add PartiesList to parties declarations
+
+##### Changed client/imports/app/parties/index.ts
+```diff
+@@ -1,5 +1,7 @@
+ ┊1┊1┊import { PartiesFormComponent } from './parties-form.component';
++┊ ┊2┊import { PartiesListComponent } from './parties-list.component';
+ ┊2┊3┊
+ ┊3┊4┊export const PARTIES_DECLARATIONS = [
+-┊4┊ ┊  PartiesFormComponent
++┊ ┊5┊  PartiesFormComponent,
++┊ ┊6┊  PartiesListComponent
+ ┊5┊7┊];
+```
+[}]: #
+
+# Routing
+
+
+`@angular/router` is the package in charge of Routing in Angular 2, and we will learn how to use it now.
+
+This package provides utils to define our routes, and get them as `NgModule` object we just include in our application.
+
+**Defining routes**
+
+We need to create an array of route definitions. The `Route` interface comes with help. This way we can be sure that properties of that object are correctly used.
+
+The very basic two properties are `path` and `component`. The path is to define the url and the other one is to bind a component to it.
+
+We will export our routes using `routes` variable.
+
+Let's warp it in the `app.routes.ts` file, here's what it suppose to look like:
+
+[{]: <helper> (diff_step 6.6)
+#### Step 6.6: Define routes
+
+##### Added client/imports/app/app.routes.ts
+```diff
+@@ -0,0 +1,7 @@
++┊ ┊1┊import { Route } from '@angular/router';
++┊ ┊2┊
++┊ ┊3┊import { PartiesListComponent } from './parties/parties-list.component';
++┊ ┊4┊
++┊ ┊5┊export const routes: Route[] = [
++┊ ┊6┊  { path: '', component: PartiesListComponent }
++┊ ┊7┊];
+```
+[}]: #
+
+Now we can use `routes` in the `NgModule`, with the `RouteModule` provided by Angular 2:
+
+[{]: <helper> (diff_step 6.7)
+#### Step 6.7: Register RouterModule
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -1,15 +1,18 @@
+ ┊ 1┊ 1┊import { NgModule } from '@angular/core';
+ ┊ 2┊ 2┊import { BrowserModule } from '@angular/platform-browser';
+ ┊ 3┊ 3┊import { FormsModule, ReactiveFormsModule } from '@angular/forms';
++┊  ┊ 4┊import { RouterModule } from '@angular/router';
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊import { AppComponent } from './app.component';
++┊  ┊ 7┊import { routes } from './app.routes';
+ ┊ 6┊ 8┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊ 7┊ 9┊
+ ┊ 8┊10┊@NgModule({
+ ┊ 9┊11┊  imports: [
+ ┊10┊12┊    BrowserModule,
+ ┊11┊13┊    FormsModule,
+-┊12┊  ┊    ReactiveFormsModule
++┊  ┊14┊    ReactiveFormsModule,
++┊  ┊15┊    RouterModule.forRoot(routes)
+ ┊13┊16┊  ],
+ ┊14┊17┊  declarations: [
+ ┊15┊18┊    AppComponent,
+```
+[}]: #
+
+Our app still has to display the view somewhere. We'll use `routerOutlet` component to do this.
+
+[{]: <helper> (diff_step 6.8)
+#### Step 6.8: Implement routerOutlet
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1 +1,3 @@
+-┊1┊ ┊<div></div>🚫↵
++┊ ┊1┊<div>
++┊ ┊2┊  <router-outlet></router-outlet>
++┊ ┊3┊</div>🚫↵
+```
+[}]: #
+
+Now, because we use a router that based on the browser path and URL - we need to tell Angular 2 router which path is the base path.
+
+We already have it because we used the Angular 2 boilerplate, but if you are looking for it - you can find it in `client/index.html` file:
+
+    <base href="/">
+
+# Parties details
+
+Let's add another view to the app: `PartyDetailsComponent`. Since it's not possible yet to get party details in this component, we are only going to make stubs.
+
+When we're finished, clicking on a party in the list should redirect us to the PartyDetailsComponent for more information.
+
+[{]: <helper> (diff_step 6.9)
+#### Step 6.9: Add PartyDetails component
+
+##### Added client/imports/app/parties/party-details.component.ts
+```diff
+@@ -0,0 +1,9 @@
++┊ ┊1┊import { Component } from '@angular/core';
++┊ ┊2┊
++┊ ┊3┊import template from './party-details.component.html';
++┊ ┊4┊
++┊ ┊5┊@Component({
++┊ ┊6┊  selector: 'party-details',
++┊ ┊7┊  template
++┊ ┊8┊})
++┊ ┊9┊export class PartyDetailsComponent {}
+```
+[}]: #
+
+And add a simple template outline for the party details:
+
+[{]: <helper> (diff_step 6.10)
+#### Step 6.10: Create template for PartyDetails
+
+##### Added client/imports/app/parties/party-details.component.html
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊<header>
++┊ ┊2┊  <h2>PARTY_NAME</h2>
++┊ ┊3┊
++┊ ┊4┊  <p>PARTY_DESCRIPTION</p>
++┊ ┊5┊</header>🚫↵
+```
+[}]: #
+
+And let's add the new Component to the index file:
+
+{{{diff_step 6.11} filename="client/imports/app/parties/index.ts"}}
+
+Now we can define the route:
+
+{{{diff_step 6.11} filename="client/imports/app/app.routes.ts"}}
+
+As you can see, we used `:partyId` inside of the path string. This way we define parameters. For example, `localhost:3000/party/12` will point to the PartyDetailsComponent with `12` as the value of the `partyId` parameter.
+
+We still have to add a link that redirects to party details.
+
+# RouterLink
+
+Let's add links to the new router details view from the list of parties.
+
+As we've already seen, each party link consists of two parts: the base `PartyDetailsComponent` URL and a party ID, represented by the `partyId` in the configuration. There is a special directive called `routerLink` that will help us to compose each URL.
+
+Now we can wrap our party in a `routerLink` and pass in the _id as a parameter. Note that the id is auto-generated when an item is inserted into a Mongo Collection.
+
+[{]: <helper> (diff_step 6.12)
+#### Step 6.12: Use routerLink in PartiesList component
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -3,7 +3,7 @@
+ ┊3┊3┊
+ ┊4┊4┊  <ul>
+ ┊5┊5┊    <li *ngFor="let party of parties | async">
+-┊6┊ ┊      {{party.name}}
++┊ ┊6┊      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+ ┊7┊7┊      <p>{{party.description}}</p>
+ ┊8┊8┊      <p>{{party.location}}</p>
+ ┊9┊9┊      <button (click)="removeParty(party)">X</button>
+```
+[}]: #
+
+As you can see, we used an array. The first element is a path that we want to use and the next one is to provide a value of a parameter.
+
+> You can provide more than one parameter by adding more elements into an array.
+
+# Injecting Route Params
+
+We've just added links to the `PartyDetails` view.
+
+The next thing is to grab the `partyId` route parameter in order to load the correct party in the `PartyDetails` view.
+
+In Angular 2, it's as simple as passing the `ActivatedRoute` argument to the `PartyDetails` constructor:
+
+[{]: <helper> (diff_step 6.13)
+#### Step 6.13: Subscribe to get the partyId
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -1,4 +1,7 @@
+-┊1┊ ┊import { Component } from '@angular/core';
++┊ ┊1┊import { Component, OnInit } from '@angular/core';
++┊ ┊2┊import { ActivatedRoute } from '@angular/router';
++┊ ┊3┊
++┊ ┊4┊import 'rxjs/add/operator/map';
+ ┊2┊5┊
+ ┊3┊6┊import template from './party-details.component.html';
+ ┊4┊7┊
+```
+```diff
+@@ -6,4 +9,16 @@
+ ┊ 6┊ 9┊  selector: 'party-details',
+ ┊ 7┊10┊  template
+ ┊ 8┊11┊})
+-┊ 9┊  ┊export class PartyDetailsComponent {}
++┊  ┊12┊export class PartyDetailsComponent implements OnInit {
++┊  ┊13┊  partyId: string;
++┊  ┊14┊
++┊  ┊15┊  constructor(
++┊  ┊16┊    private route: ActivatedRoute
++┊  ┊17┊  ) {}
++┊  ┊18┊
++┊  ┊19┊  ngOnInit() {
++┊  ┊20┊    this.route.params
++┊  ┊21┊      .map(params => params['partyId'])
++┊  ┊22┊      .subscribe(partyId => this.partyId = partyId);
++┊  ┊23┊  }
++┊  ┊24┊}
+```
+[}]: #
+
+> We used another RxJS feature called `map` - which transform the stream of data into another object - in this case, we want to get the `partyId` from the `params`, then we subscribe to the return value of this function - and the subscription will be called only with the `partyId` that we need.
+
+> As you might noticed, Angular 2 uses RxJS internally and exposes a lot of APIs using RxJS Observable!
+
+Dependency injection is employed heavily here by Angular 2 to do all the work behind the scenes.
+
+TypeScript first compiles this class with the class metadata that says what argument types this class expects in the constructor (i.e. `ActivatedRoute`),
+so Angular 2 knows what types to inject if asked to create an instance of this class.
+
+Then, when you click on a party details link, the `router-outlet` directive will create a `ActivatedRoute` provider that provides
+parameters for the current URL. Right after that moment if a `PartyDetails` instance is created by means of the dependency injection API, it's created with `ActivatedRoute` injected and equalled to the current URL inside the constructor.
+
+If you want to read more about dependency injection in Angular 2, you can find an extensive overview in this [article](http://blog.thoughtram.io/angular/2015/05/18/dependency-injection-in-angular-2.html).
+If you are curious about class metadata read more about it [here](http://blog.thoughtram.io/angular/2015/09/17/resolve-service-dependencies-in-angular-2.html).
+
+In order to avoid memory leaks and performance issues, we need to make sure that every time we use `subscribe` in our Component - we also use `unsubscribe` when the data is no longer interesting.
+
+In order to do so, we will use Angular 2 interface called `OnDestroy` and implement `ngOnDestroy` - which called when our Component is no longer in the view and removed from the DOM.
+
+So let's implement this:
+
+[{]: <helper> (diff_step 6.14)
+#### Step 6.14: Unsubscribe when component is being destroyed
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -1,5 +1,6 @@
+-┊1┊ ┊import { Component, OnInit } from '@angular/core';
++┊ ┊1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊2┊2┊import { ActivatedRoute } from '@angular/router';
++┊ ┊3┊import { Subscription } from 'rxjs/Subscription';
+ ┊3┊4┊
+ ┊4┊5┊import 'rxjs/add/operator/map';
+ ┊5┊6┊
+```
+```diff
+@@ -9,16 +10,21 @@
+ ┊ 9┊10┊  selector: 'party-details',
+ ┊10┊11┊  template
+ ┊11┊12┊})
+-┊12┊  ┊export class PartyDetailsComponent implements OnInit {
++┊  ┊13┊export class PartyDetailsComponent implements OnInit, OnDestroy {
+ ┊13┊14┊  partyId: string;
++┊  ┊15┊  paramsSub: Subscription;
+ ┊14┊16┊
+ ┊15┊17┊  constructor(
+ ┊16┊18┊    private route: ActivatedRoute
+ ┊17┊19┊  ) {}
+ ┊18┊20┊
+ ┊19┊21┊  ngOnInit() {
+-┊20┊  ┊    this.route.params
++┊  ┊22┊    this.paramsSub = this.route.params
+ ┊21┊23┊      .map(params => params['partyId'])
+ ┊22┊24┊      .subscribe(partyId => this.partyId = partyId);
+ ┊23┊25┊  }
++┊  ┊26┊
++┊  ┊27┊  ngOnDestroy() {
++┊  ┊28┊    this.paramsSub.unsubscribe();
++┊  ┊29┊  }
+ ┊24┊30┊}
+```
+[}]: #
+
+Now, we need to get the actual `Party` object with the ID we got from the Router, so let's use the `Parties` collection to get it:
+
+[{]: <helper> (diff_step 6.15)
+#### Step 6.15: Load party details
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -1,9 +1,12 @@
+ ┊ 1┊ 1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊ 2┊ 2┊import { ActivatedRoute } from '@angular/router';
+-┊ 3┊  ┊import { Subscription } from 'rxjs/Subscription';
++┊  ┊ 3┊import { Subscription } from 'rxjs/Subscription'; 
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊import 'rxjs/add/operator/map';
+ ┊ 6┊ 6┊
++┊  ┊ 7┊import { Parties } from '../../../../both/collections/parties.collection';
++┊  ┊ 8┊import { Party } from '../../../../both/models/party.model';
++┊  ┊ 9┊
+ ┊ 7┊10┊import template from './party-details.component.html';
+ ┊ 8┊11┊
+ ┊ 9┊12┊@Component({
+```
+```diff
+@@ -13,6 +16,7 @@
+ ┊13┊16┊export class PartyDetailsComponent implements OnInit, OnDestroy {
+ ┊14┊17┊  partyId: string;
+ ┊15┊18┊  paramsSub: Subscription;
++┊  ┊19┊  party: Party;
+ ┊16┊20┊
+ ┊17┊21┊  constructor(
+ ┊18┊22┊    private route: ActivatedRoute
+```
+```diff
+@@ -21,7 +25,11 @@
+ ┊21┊25┊  ngOnInit() {
+ ┊22┊26┊    this.paramsSub = this.route.params
+ ┊23┊27┊      .map(params => params['partyId'])
+-┊24┊  ┊      .subscribe(partyId => this.partyId = partyId);
++┊  ┊28┊      .subscribe(partyId => {
++┊  ┊29┊        this.partyId = partyId
++┊  ┊30┊        
++┊  ┊31┊        this.party = Parties.findOne(this.partyId);
++┊  ┊32┊      });
+ ┊25┊33┊  }
+ ┊26┊34┊
+ ┊27┊35┊  ngOnDestroy() {
+```
+[}]: #
+
+> `findOne` return the actual object instead of returning Observable or Cursor.
+
+In our next step we will display the party details inside our view!
+
+# Challenge
+
+Add a link back to the `PartiesList` component from `PartyDetails`.
+
+# Summary
+
+Let's list what we've accomplished in this step:
+
+- split our app into two main views
+- configured routing to use these views and created a layout template
+- learned briefly how dependency injection works in Angular 2
+- injected route parameters and loaded party details with the ID parameter
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step5.md) | [Next Step >](step7.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 780ee3b1d1c18b4608f0bc2277150f3858636593 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:57:57 +0200
Subject: [PATCH 058/304] Step 7.1: Display party details

---
 client/imports/app/parties/party-details.component.html | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index a3da9f4..d6fd3fb 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -1,5 +1,7 @@
-<header>
-  <h2>PARTY_NAME</h2>
+<header *ngIf="party">
+  <h2>{{party.name}}</h2>
 
-  <p>PARTY_DESCRIPTION</p>
+  <p>{{party.description}}</p>
+
+  <p>{{party.location}}</p>
 </header>
\ No newline at end of file
-- 
2.10.2


From 402c49f237afce1fa8ce77f4d8fbba200aa65a04 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 18:58:51 +0200
Subject: [PATCH 059/304] Step 7.2: Create form inside PartyDetails template

---
 client/imports/app/parties/party-details.component.html | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index d6fd3fb..aef5bae 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -1,7 +1,13 @@
-<header *ngIf="party">
-  <h2>{{party.name}}</h2>
+<form *ngIf="party" (submit)="saveParty()">
+  <label>Name</label>
+  <input type="text" [(ngModel)]="party.name" name="name">
 
-  <p>{{party.description}}</p>
+  <label>Description</label>
+  <input type="text" [(ngModel)]="party.description" name="description">
 
-  <p>{{party.location}}</p>
-</header>
\ No newline at end of file
+  <label>Location</label>
+  <input type="text" [(ngModel)]="party.location" name="location">
+
+  <button type="submit">Save</button>
+  <a [routerLink]="['/']">Cancel</a>
+</form>
\ No newline at end of file
-- 
2.10.2


From a6078bee9ac0e73cabfc5eae1c0d033a603c1020 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 19:01:57 +0200
Subject: [PATCH 060/304] Step 7.3: Add submit event handler

---
 client/imports/app/parties/party-details.component.ts | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 6c53448..3abaa71 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -32,6 +32,16 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
       });
   }
 
+  saveParty() {
+    Parties.update(this.party._id, {
+      $set: {
+        name: this.party.name,
+        description: this.party.description,
+        location: this.party.location
+      }
+    });
+  }
+
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
   }
-- 
2.10.2


From 8b2bd593c8485caad7a2e73c06a26d9ef7943cdc Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:50 -0200
Subject: [PATCH 061/304] Step 7: Bind one object

---
 manuals/templates/step7.md |  53 ++++++++++++++++++
 manuals/views/step7.md     | 130 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 183 insertions(+)
 create mode 100644 manuals/templates/step7.md
 create mode 100644 manuals/views/step7.md

diff --git a/manuals/templates/step7.md b/manuals/templates/step7.md
new file mode 100644
index 0000000..85b55ef
--- /dev/null
+++ b/manuals/templates/step7.md
@@ -0,0 +1,53 @@
+In this step we are going to:
+
+- add a form to the party details view
+- bind a party object to the view, so that we'll be able to change party details and
+then save changes to the storage
+
+# Two-Way Data Binding
+
+As we've already explored on the 3rd step, data can be bound to the HTML input elements
+with the help of a group of special Angular 2 Control objects, otherwise called a form model.
+We called this approach the _Model-Driven approach_.
+
+Also, it was mentioned that Angular 2 has support of two-way data binding
+through a special attribute, though with different syntax from Angular 1. We'll get to this shortly.
+
+First, let's bind the party details into our view:
+
+{{{diff_step 7.1}}}
+
+Now, let's change `party-details.component.html` into a form, so that we can edit the party details:
+
+{{{diff_step 7.2}}}
+
+> Notice we have a routerLink button on the page that redirects back to the list (from our previous step's challenge). Here is how to do that:
+
+> We added an `ngIf` directive to conditionally display the form when the party data is available.
+
+## ngModel
+
+[ngModel](https://angular.io/docs/js/latest/api/common/NgModel-directive.html) binds a HTML form to the component's model, which can be an object of any type, in comparison to
+the Model-Driven binding where the `FormGroup` instance is used.
+
+The syntax looks a bit different, using both square and rounded brackets: `[(ngModel)]`. `ngModel` binds to the party properties and fills out the inputs, and vice versa.
+
+Let's do a little test to see how form controls and events work in Angular 2. Start by binding to `party.name` below the input, then experiment by changing the input's text.
+
+    <label for="name">Name</label>
+    <input type="text" [(ngModel)]="party.name" name="name">
+
+    <p>\{{party.name}}</p>
+
+Notice that it updates automatically on changes. You can contrast this to `FormControl`s which we need to update manually using events to reach this functionality.
+
+As a finishing touch, let's add a submit event handler that saves the current party:
+
+{{{diff_step 7.3}}}
+
+# Summary
+
+In this step, we learned:
+
+- how two-way data binding works in Angular 2 using `[(ngModel)]`
+- how to bind inputs to the view and save the data
diff --git a/manuals/views/step7.md b/manuals/views/step7.md
new file mode 100644
index 0000000..2043d86
--- /dev/null
+++ b/manuals/views/step7.md
@@ -0,0 +1,130 @@
+[{]: <region> (header)
+# Step 7: Bind one object
+[}]: #
+[{]: <region> (body)
+In this step we are going to:
+
+- add a form to the party details view
+- bind a party object to the view, so that we'll be able to change party details and
+then save changes to the storage
+
+# Two-Way Data Binding
+
+As we've already explored on the 3rd step, data can be bound to the HTML input elements
+with the help of a group of special Angular 2 Control objects, otherwise called a form model.
+We called this approach the _Model-Driven approach_.
+
+Also, it was mentioned that Angular 2 has support of two-way data binding
+through a special attribute, though with different syntax from Angular 1. We'll get to this shortly.
+
+First, let's bind the party details into our view:
+
+[{]: <helper> (diff_step 7.1)
+#### Step 7.1: Display party details
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -1,5 +1,7 @@
+-┊1┊ ┊<header>
+-┊2┊ ┊  <h2>PARTY_NAME</h2>
++┊ ┊1┊<header *ngIf="party">
++┊ ┊2┊  <h2>{{party.name}}</h2>
+ ┊3┊3┊
+-┊4┊ ┊  <p>PARTY_DESCRIPTION</p>
++┊ ┊4┊  <p>{{party.description}}</p>
++┊ ┊5┊
++┊ ┊6┊  <p>{{party.location}}</p>
+ ┊5┊7┊</header>🚫↵
+```
+[}]: #
+
+Now, let's change `party-details.component.html` into a form, so that we can edit the party details:
+
+[{]: <helper> (diff_step 7.2)
+#### Step 7.2: Create form inside PartyDetails template
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -1,7 +1,13 @@
+-┊ 1┊  ┊<header *ngIf="party">
+-┊ 2┊  ┊  <h2>{{party.name}}</h2>
++┊  ┊ 1┊<form *ngIf="party" (submit)="saveParty()">
++┊  ┊ 2┊  <label>Name</label>
++┊  ┊ 3┊  <input type="text" [(ngModel)]="party.name" name="name">
+ ┊ 3┊ 4┊
+-┊ 4┊  ┊  <p>{{party.description}}</p>
++┊  ┊ 5┊  <label>Description</label>
++┊  ┊ 6┊  <input type="text" [(ngModel)]="party.description" name="description">
+ ┊ 5┊ 7┊
+-┊ 6┊  ┊  <p>{{party.location}}</p>
+-┊ 7┊  ┊</header>🚫↵
++┊  ┊ 8┊  <label>Location</label>
++┊  ┊ 9┊  <input type="text" [(ngModel)]="party.location" name="location">
++┊  ┊10┊
++┊  ┊11┊  <button type="submit">Save</button>
++┊  ┊12┊  <a [routerLink]="['/']">Cancel</a>
++┊  ┊13┊</form>🚫↵
+```
+[}]: #
+
+> Notice we have a routerLink button on the page that redirects back to the list (from our previous step's challenge). Here is how to do that:
+
+> We added an `ngIf` directive to conditionally display the form when the party data is available.
+
+## ngModel
+
+[ngModel](https://angular.io/docs/js/latest/api/common/NgModel-directive.html) binds a HTML form to the component's model, which can be an object of any type, in comparison to
+the Model-Driven binding where the `FormGroup` instance is used.
+
+The syntax looks a bit different, using both square and rounded brackets: `[(ngModel)]`. `ngModel` binds to the party properties and fills out the inputs, and vice versa.
+
+Let's do a little test to see how form controls and events work in Angular 2. Start by binding to `party.name` below the input, then experiment by changing the input's text.
+
+    <label for="name">Name</label>
+    <input type="text" [(ngModel)]="party.name" name="name">
+
+    <p>{{party.name}}</p>
+
+Notice that it updates automatically on changes. You can contrast this to `FormControl`s which we need to update manually using events to reach this functionality.
+
+As a finishing touch, let's add a submit event handler that saves the current party:
+
+[{]: <helper> (diff_step 7.3)
+#### Step 7.3: Add submit event handler
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -32,6 +32,16 @@
+ ┊32┊32┊      });
+ ┊33┊33┊  }
+ ┊34┊34┊
++┊  ┊35┊  saveParty() {
++┊  ┊36┊    Parties.update(this.party._id, {
++┊  ┊37┊      $set: {
++┊  ┊38┊        name: this.party.name,
++┊  ┊39┊        description: this.party.description,
++┊  ┊40┊        location: this.party.location
++┊  ┊41┊      }
++┊  ┊42┊    });
++┊  ┊43┊  }
++┊  ┊44┊
+ ┊35┊45┊  ngOnDestroy() {
+ ┊36┊46┊    this.paramsSub.unsubscribe();
+ ┊37┊47┊  }
+```
+[}]: #
+
+# Summary
+
+In this step, we learned:
+
+- how two-way data binding works in Angular 2 using `[(ngModel)]`
+- how to bind inputs to the view and save the data
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step6.md) | [Next Step >](step8.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 23b67755097c574fe374c70c8e23b395f84dc95b Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:50 -0200
Subject: [PATCH 062/304] Step 8: Folder structure

---
 manuals/templates/step8.md | 122 +++++++++++++++++++++++++++++++++++++++++
 manuals/views/step8.md     | 134 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 256 insertions(+)
 create mode 100644 manuals/templates/step8.md
 create mode 100644 manuals/views/step8.md

diff --git a/manuals/templates/step8.md b/manuals/templates/step8.md
new file mode 100644
index 0000000..c15fb32
--- /dev/null
+++ b/manuals/templates/step8.md
@@ -0,0 +1,122 @@
+In this step we will:
+
+- review the file structure of our Socially app so far,
+- look closer into certain TypeScript features, since having a better understanding of the primary programming language of this package would be surely beneficial
+
+# File Structure
+
+As you have probably noticed, our tutorial app has a strict modular structure at this point:
+there are no pure JavaScript files that are being bundled together and auto-executed, so Meteor's file loading conventions doesn't have any effect.
+Even more, every `.ts` file is being compiled into a separate CommonJS module, which we can then import whenever we need to.
+
+There is another thing worth mentioning once more. As you know, Meteor has two special folders: _client_ and _server_.
+We can benefit from them (and have already done so in this app) by allowing access to the client side modules from the client side only and, accordingly, to server side modules from the server side.
+Everything outside of those folders will be available to the both client and server.
+It’s no wonder why this is a recommended approach in Meteor, and this is why we’ve been doing it so far.
+Let's stick to it further.
+
+# TypeScript
+
+TypeScript is a rather new language that has been growing in [popularity](https://www.google.com/trends/explore#q=%2Fm%2F0n50hxv) since it's creation 3 years ago. TypeScript has one of the fullest implementations of ES2015 features on the market: including some experimental features, pseudo type-checking and a rich toolset developed by Microsoft and the TypeScript community. It has support already in all major IDEs including Visual Studio, WebStorm, Sublime, Atom, etc.
+
+One of the biggest issues in JavaScript is making code less bug-prone and more suitable for big projects. In the OOP world, well-known solutions include modularity and strict type-checking. While OOP is available in JavaScript in some way, it turned out to be very hard to create good type-checking. One always needs to impose a certain number of rules to follow to make a JavaScript compiler more effective. For many years, we’ve seen around a number of solutions including the Closure Compiler and GWT from Google, a bunch of C#-to-JavaScript compilers and others.
+
+This was, for sure, one of the problems the TypeScript team were striving to solve: to create a language that would inherit the flexibility of JavaScript while, at the same time, having effective and optional type-checking with minimum effort required from the user.
+
+## Interfaces
+
+We are already declared a `Party` interface, and you should already be familiar with its properties: "name", "description" and "location". We can make the "Description" property optional.
+
+TypeScript's type-checking bases on the "shapes" that types have. And interfaces are TypeScript's means to describe these type "shapes", which is sometimes called "duck typing". More on that you can read [here](http://www.typescriptlang.org/docs/handbook/interfaces.html).
+
+## TypeScript Configuration and IDEs
+
+As you already know from the bootstrapping step, TypeScript is generally configured by a special JSON file called [_tsconfig.json_](https://github.com/Microsoft/typescript/wiki/tsconfig.json).
+
+As mentioned, the TypeScript language today has development plugins in many [popular IDEs](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support), including Visual Studio, WebStorm, Sublime, Atom etc. These plugins work in the same style as it's become de facto today — compile, using TypeScript shell command, `.ts` and `tsconfig.json` files update automatically as you change them.
+With that, if you've configured your project right with declaration files in place you'll get a bunch of invaluable features such as better code completion and instantaneous highlighting of compilation errors.
+
+If you use one of the mentioned IDEs, you've likely noticed that a bunch of the code lines
+are now marked in red, indicating the TypeScript plugins don't work right quite yet.
+
+That's because most of the plugins recognize _tsconfig.json_ as well if it's placed in the root folder,
+but so far our _tsconfig.json_ contains only a "files" property, which is certainly not enough for
+a general compilation. At the same time, Angular2-Meteor's TypeScript compiler, defaults most of the
+compilation options internally to fit our needs. To fix plugins, let's set up our _tsconfig.json_
+properly with the options that will make plugins understand our needs and the structure of our app.
+
+```json
+{
+  "compilerOptions": {
+    "target": "es5",
+    "module": "commonjs",
+    "isolatedModules": false,
+    "moduleResolution": "node",
+    "experimentalDecorators": true,
+    "emitDecoratorMetadata": true,
+    "removeComments": false,
+    "noImplicitAny": false,
+    "sourceMap": true
+  },
+  "exclude": [
+    "node_modules"
+  ],
+  "compileOnSave": false
+}
+```
+
+**CompilerOptions:**
+
+- `target` - Specify ECMAScript target version
+- `module` - Specify module code generation
+- `isolatedModules` - Unconditionally emit imports for unresolved files
+- `moduleResolution` - Determine how modules get resolved
+- `experimentalDecorators` - Enables experimental support for ES7 decorators.
+- `emitDecoratorMetadata` - Emit design-type metadata for decorated declarations in source
+- `removeComments` - Remove all comments except copy-right header comments beginning with
+- `noImplicitAny` - Raise error on expressions and declarations with an implied 'any' type
+- `sourceMap` - Generates corresponding '.map' file
+
+Now, let's go to any of the `.ts` files and check if all that annoying redness has disappeared.
+
+> Note: you may need to reload you IDE to pick up the latest changes to the config.
+
+Please note, since the Meteor environment is quite specific, some of the `tsconfig.json` options won't make sense in Meteor. You can read about the exceptions [here](https://github.com/barbatus/typescript#compiler-options).
+TypeScript compiler of this package supports some additional options that might be useful in the Meteor environment.
+They can be included in the "meteorCompilerOptions" section of _tsconfig.json_ and described [here](https://github.com/barbatus/ts-compilers#typescript-config).
+
+### IDE Specific Configurations
+
+##### Atom
+
+If you are using [Atom](atom.io) as your editor with the [Atom-TypeScript plugin](https://github.com/TypeStrong/atom-typescript), use the following configuration to automatically generate your `tsconfig.json` file:
+
+    {
+     "atom": {
+        "rewriteTsconfig": true
+      },
+      "compileOnSave": false,
+      "buildOnSave": false,
+      "compilerOptions": {
+        "target": "es5",
+        "module": "commonjs",
+        "moduleResolution": "classic",
+        "experimentalDecorators": true
+      },
+      "filesGlob": [
+        "**/*.ts"
+      ],
+      "files": []
+    }
+
+# Summary
+
+In this step we discovered how to make our TypeScript code less buggy with:
+
+- the benefits of type-checking
+- type declaration files for verifying library APIs
+- interfaces to check our own projects APIs
+- TSD for loading declaration files easily
+- creating a `tsconfig.json` file for loading files and specifying compiler options
+
+In the [next step](/tutorials/angular2/user-accounts-authentication-and-permissions) we'll look at creating user accounts and securing server data access.
diff --git a/manuals/views/step8.md b/manuals/views/step8.md
new file mode 100644
index 0000000..ed405fe
--- /dev/null
+++ b/manuals/views/step8.md
@@ -0,0 +1,134 @@
+[{]: <region> (header)
+# Step 8: Folder structure
+[}]: #
+[{]: <region> (body)
+In this step we will:
+
+- review the file structure of our Socially app so far,
+- look closer into certain TypeScript features, since having a better understanding of the primary programming language of this package would be surely beneficial
+
+# File Structure
+
+As you have probably noticed, our tutorial app has a strict modular structure at this point:
+there are no pure JavaScript files that are being bundled together and auto-executed, so Meteor's file loading conventions doesn't have any effect.
+Even more, every `.ts` file is being compiled into a separate CommonJS module, which we can then import whenever we need to.
+
+There is another thing worth mentioning once more. As you know, Meteor has two special folders: _client_ and _server_.
+We can benefit from them (and have already done so in this app) by allowing access to the client side modules from the client side only and, accordingly, to server side modules from the server side.
+Everything outside of those folders will be available to the both client and server.
+It’s no wonder why this is a recommended approach in Meteor, and this is why we’ve been doing it so far.
+Let's stick to it further.
+
+# TypeScript
+
+TypeScript is a rather new language that has been growing in [popularity](https://www.google.com/trends/explore#q=%2Fm%2F0n50hxv) since it's creation 3 years ago. TypeScript has one of the fullest implementations of ES2015 features on the market: including some experimental features, pseudo type-checking and a rich toolset developed by Microsoft and the TypeScript community. It has support already in all major IDEs including Visual Studio, WebStorm, Sublime, Atom, etc.
+
+One of the biggest issues in JavaScript is making code less bug-prone and more suitable for big projects. In the OOP world, well-known solutions include modularity and strict type-checking. While OOP is available in JavaScript in some way, it turned out to be very hard to create good type-checking. One always needs to impose a certain number of rules to follow to make a JavaScript compiler more effective. For many years, we’ve seen around a number of solutions including the Closure Compiler and GWT from Google, a bunch of C#-to-JavaScript compilers and others.
+
+This was, for sure, one of the problems the TypeScript team were striving to solve: to create a language that would inherit the flexibility of JavaScript while, at the same time, having effective and optional type-checking with minimum effort required from the user.
+
+## Interfaces
+
+We are already declared a `Party` interface, and you should already be familiar with its properties: "name", "description" and "location". We can make the "Description" property optional.
+
+TypeScript's type-checking bases on the "shapes" that types have. And interfaces are TypeScript's means to describe these type "shapes", which is sometimes called "duck typing". More on that you can read [here](http://www.typescriptlang.org/docs/handbook/interfaces.html).
+
+## TypeScript Configuration and IDEs
+
+As you already know from the bootstrapping step, TypeScript is generally configured by a special JSON file called [_tsconfig.json_](https://github.com/Microsoft/typescript/wiki/tsconfig.json).
+
+As mentioned, the TypeScript language today has development plugins in many [popular IDEs](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support), including Visual Studio, WebStorm, Sublime, Atom etc. These plugins work in the same style as it's become de facto today — compile, using TypeScript shell command, `.ts` and `tsconfig.json` files update automatically as you change them.
+With that, if you've configured your project right with declaration files in place you'll get a bunch of invaluable features such as better code completion and instantaneous highlighting of compilation errors.
+
+If you use one of the mentioned IDEs, you've likely noticed that a bunch of the code lines
+are now marked in red, indicating the TypeScript plugins don't work right quite yet.
+
+That's because most of the plugins recognize _tsconfig.json_ as well if it's placed in the root folder,
+but so far our _tsconfig.json_ contains only a "files" property, which is certainly not enough for
+a general compilation. At the same time, Angular2-Meteor's TypeScript compiler, defaults most of the
+compilation options internally to fit our needs. To fix plugins, let's set up our _tsconfig.json_
+properly with the options that will make plugins understand our needs and the structure of our app.
+
+```json
+{
+  "compilerOptions": {
+    "target": "es5",
+    "module": "commonjs",
+    "isolatedModules": false,
+    "moduleResolution": "node",
+    "experimentalDecorators": true,
+    "emitDecoratorMetadata": true,
+    "removeComments": false,
+    "noImplicitAny": false,
+    "sourceMap": true
+  },
+  "exclude": [
+    "node_modules"
+  ],
+  "compileOnSave": false
+}
+```
+
+**CompilerOptions:**
+
+- `target` - Specify ECMAScript target version
+- `module` - Specify module code generation
+- `isolatedModules` - Unconditionally emit imports for unresolved files
+- `moduleResolution` - Determine how modules get resolved
+- `experimentalDecorators` - Enables experimental support for ES7 decorators.
+- `emitDecoratorMetadata` - Emit design-type metadata for decorated declarations in source
+- `removeComments` - Remove all comments except copy-right header comments beginning with
+- `noImplicitAny` - Raise error on expressions and declarations with an implied 'any' type
+- `sourceMap` - Generates corresponding '.map' file
+
+Now, let's go to any of the `.ts` files and check if all that annoying redness has disappeared.
+
+> Note: you may need to reload you IDE to pick up the latest changes to the config.
+
+Please note, since the Meteor environment is quite specific, some of the `tsconfig.json` options won't make sense in Meteor. You can read about the exceptions [here](https://github.com/barbatus/typescript#compiler-options).
+TypeScript compiler of this package supports some additional options that might be useful in the Meteor environment.
+They can be included in the "meteorCompilerOptions" section of _tsconfig.json_ and described [here](https://github.com/barbatus/ts-compilers#typescript-config).
+
+### IDE Specific Configurations
+
+##### Atom
+
+If you are using [Atom](atom.io) as your editor with the [Atom-TypeScript plugin](https://github.com/TypeStrong/atom-typescript), use the following configuration to automatically generate your `tsconfig.json` file:
+
+    {
+     "atom": {
+        "rewriteTsconfig": true
+      },
+      "compileOnSave": false,
+      "buildOnSave": false,
+      "compilerOptions": {
+        "target": "es5",
+        "module": "commonjs",
+        "moduleResolution": "classic",
+        "experimentalDecorators": true
+      },
+      "filesGlob": [
+        "**/*.ts"
+      ],
+      "files": []
+    }
+
+# Summary
+
+In this step we discovered how to make our TypeScript code less buggy with:
+
+- the benefits of type-checking
+- type declaration files for verifying library APIs
+- interfaces to check our own projects APIs
+- TSD for loading declaration files easily
+- creating a `tsconfig.json` file for loading files and specifying compiler options
+
+In the [next step](/tutorials/angular2/user-accounts-authentication-and-permissions) we'll look at creating user accounts and securing server data access.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step7.md) | [Next Step >](step9.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 3261c2696ef9d050a12a649b7dfffdc247bafa13 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 20:40:52 +0200
Subject: [PATCH 063/304] Step 9.1: Add accounts

---
 .meteor/packages |  2 +-
 .meteor/versions | 31 +++++++++++++++++++------------
 package.json     |  3 ++-
 3 files changed, 22 insertions(+), 14 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 5f3553c..10ddf61 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -16,10 +16,10 @@ standard-minifier-js@1.2.0_1    # JS minifier run for production mode
 es5-shim@4.6.14_1                # ECMAScript 5 compatibility for older browsers.
 
 autopublish@1.0.7             # Publish all data to the clients (for prototyping)
-insecure@1.0.7                # Allow all DB writes from clients (for prototyping)
 angular2-compilers
 practicalmeteor:mocha
 xolvio:cleaner
 hwillson:stub-collections
 dispatch:mocha-phantomjs
 shell-server@0.2.1
+accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index 7d16665..6a1b824 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,7 +1,9 @@
+accounts-base@1.2.14
+accounts-password@1.3.1
 allow-deny@1.0.5
 angular2-compilers@0.6.5
 autopublish@1.0.7
-autoupdate@1.3.12
+autoupdate@1.2.11
 babel-compiler@6.13.0
 babel-runtime@0.1.13
 barbatus:css-compiler@0.3.4
@@ -14,15 +16,16 @@ binary-heap@1.0.10
 blaze@2.2.0
 blaze-tools@1.0.10
 boilerplate-generator@1.0.11
-caching-compiler@1.1.8
-caching-html-compiler@1.0.7
+caching-compiler@1.0.6
+caching-html-compiler@1.0.6
 callback-hook@1.0.10
 check@1.2.4
-coffeescript@1.11.1_2
+coffeescript@1.0.17
 ddp@1.2.5
-ddp-client@1.3.2
+ddp-client@1.2.9
 ddp-common@1.2.7
-ddp-server@1.3.11
+ddp-rate-limiter@1.0.6
+ddp-server@1.2.10
 deps@1.0.12
 diff-sequence@1.0.7
 dispatch:mocha-phantomjs@0.1.7
@@ -30,19 +33,20 @@ dispatch:phantomjs-tests@0.0.5
 ecmascript@0.5.9
 ecmascript-runtime@0.3.15
 ejson@1.0.13
+email@1.1.18
 es5-shim@4.6.15
 fastclick@1.0.13
 geojson-utils@1.0.10
 hot-code-push@1.0.4
 html-tools@1.0.11
 htmljs@1.0.11
-http@1.2.10
+http@1.1.8
 hwillson:stub-collections@1.0.2
 id-map@1.0.9
-insecure@1.0.7
 jquery@1.11.10
-launch-screen@1.1.0
+launch-screen@1.0.12
 livedata@1.0.18
+localstorage@1.0.12
 logging@1.1.16
 meteor@1.6.0
 meteor-base@1.0.4
@@ -55,6 +59,7 @@ modules@0.7.7
 modules-runtime@0.7.7
 mongo@1.1.14
 mongo-id@1.0.6
+npm-bcrypt@0.9.2
 npm-mongo@2.2.11_2
 observe-sequence@1.0.14
 ordered-dict@1.0.9
@@ -65,18 +70,20 @@ practicalmeteor:mocha-core@1.0.1
 practicalmeteor:sinon@1.14.1_2
 promise@0.8.8
 random@1.0.10
+rate-limit@1.0.6
 reactive-var@1.0.11
 reload@1.1.11
 retry@1.0.9
 routepolicy@1.0.12
+service-configuration@1.0.11
+sha@1.0.9
 shell-server@0.2.1
 spacebars@1.0.13
 spacebars-compiler@1.0.13
+srp@1.0.10
 standard-minifier-css@1.3.2
 standard-minifier-js@1.2.1
-templating@1.2.15
-templating-compiler@1.2.15
-templating-runtime@1.2.15
+templating@1.1.14
 templating-tools@1.0.5
 tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.1
diff --git a/package.json b/package.json
index d5949d4..f5c112e 100644
--- a/package.json
+++ b/package.json
@@ -15,7 +15,8 @@
     "@angular/platform-browser-dynamic": "2.1.2",
     "@angular/router": "3.1.2",
     "angular2-meteor": "0.7.0",
-    "angular2-meteor-polyfills": "0.1.1",
+    "angular2-meteor-accounts-ui": "1.0.0",
+    "angular2-meteor-polyfills": "^0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
-- 
2.10.2


From 26019464a95fb2a29a28964574063968438532d3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 20:41:37 +0200
Subject: [PATCH 064/304] Step 9.2: Import AccountsModule

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 192c630..1e7e1ac 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -2,6 +2,7 @@ import { NgModule } from '@angular/core';
 import { BrowserModule } from '@angular/platform-browser';
 import { FormsModule, ReactiveFormsModule } from '@angular/forms';
 import { RouterModule } from '@angular/router';
+import { AccountsModule } from 'angular2-meteor-accounts-ui';
 
 import { AppComponent } from './app.component';
 import { routes } from './app.routes';
@@ -12,7 +13,8 @@ import { PARTIES_DECLARATIONS } from './parties';
     BrowserModule,
     FormsModule,
     ReactiveFormsModule,
-    RouterModule.forRoot(routes)
+    RouterModule.forRoot(routes),
+    AccountsModule
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From 681ba6cf6f89b3c7644659f5851d4baf73fa9888 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 20:42:08 +0200
Subject: [PATCH 065/304] Step 9.3: Use LoginButtons component

---
 client/imports/app/parties/parties-list.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 488ba09..20400c4 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -1,5 +1,6 @@
 <div>
   <parties-form></parties-form>
+  <login-buttons></login-buttons>
 
   <ul>
     <li *ngFor="let party of parties | async">
-- 
2.10.2


From a40aedd2b8ae34b40c831e8f1f8e2e0ad8ad8573 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:20:37 +0200
Subject: [PATCH 066/304] Step 9.5: Add Parties collection security

---
 both/collections/parties.collection.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/both/collections/parties.collection.ts b/both/collections/parties.collection.ts
index 8146c60..731b244 100644
--- a/both/collections/parties.collection.ts
+++ b/both/collections/parties.collection.ts
@@ -1,5 +1,16 @@
 import { MongoObservable } from 'meteor-rxjs';
+import { Meteor } from 'meteor/meteor';
 
 import { Party } from '../models/party.model';
 
 export const Parties = new MongoObservable.Collection<Party>('parties');
+
+function loggedIn() {
+  return !!Meteor.user();
+}
+
+Parties.allow({
+  insert: loggedIn,
+  update: loggedIn,
+  remove: loggedIn
+});
-- 
2.10.2


From 1f53369e214a48095953a919b9a4b53f234a1a8e Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:27:52 +0200
Subject: [PATCH 067/304] Step 9.6: Check access in PartiesForm

---
 client/imports/app/parties/parties-form.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 511812d..565cf77 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -1,5 +1,6 @@
 import { Component, OnInit } from '@angular/core';
 import { FormGroup, FormBuilder, Validators } from '@angular/forms';
+import { Meteor } from 'meteor/meteor';
 
 import { Parties } from '../../../../both/collections/parties.collection';
 
@@ -25,6 +26,11 @@ export class PartiesFormComponent implements OnInit {
   }
 
   addParty(): void {
+    if (!Meteor.userId()) {
+      alert('Please log in to add a party');
+      return;
+    }
+
     if (this.addForm.valid) {
       Parties.insert(this.addForm.value);
 
-- 
2.10.2


From c7a86ed2b8fac1e8ea811112caa2e524538d1d36 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:30:05 +0200
Subject: [PATCH 068/304] Step 9.7: Add owner

---
 client/imports/app/parties/parties-form.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 565cf77..978f6e4 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -32,7 +32,7 @@ export class PartiesFormComponent implements OnInit {
     }
 
     if (this.addForm.valid) {
-      Parties.insert(this.addForm.value);
+      Parties.insert(Object.assign({}, this.addForm.value, { owner: Meteor.userId() }));
 
       this.addForm.reset();
     }
-- 
2.10.2


From 5aa51c64f25105b01a6559f0a0f71f7baded5cac Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:30:44 +0200
Subject: [PATCH 069/304] Step 9.8: Define owner in Party type

---
 both/models/party.model.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index fd5a709..5b20610 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -4,4 +4,5 @@ export interface Party extends CollectionObject {
   name: string;
   description: string;
   location: string;
+  owner?: string; 
 }
-- 
2.10.2


From 06a66396924ec172393738ce1473766d064eb176 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:32:09 +0200
Subject: [PATCH 070/304] Step 9.9: Check access to update a party

---
 client/imports/app/parties/party-details.component.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 3abaa71..0032c65 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -1,6 +1,7 @@
 import { Component, OnInit, OnDestroy } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
-import { Subscription } from 'rxjs/Subscription'; 
+import { Subscription } from 'rxjs/Subscription';
+import { Meteor } from 'meteor/meteor'; 
 
 import 'rxjs/add/operator/map';
 
@@ -33,6 +34,11 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   }
 
   saveParty() {
+    if (!Meteor.userId()) {
+      alert('Please log in to change this party');
+      return;
+    }
+    
     Parties.update(this.party._id, {
       $set: {
         name: this.party.name,
-- 
2.10.2


From ddfd9d9ac80769c85aec5240541a38e99075ad24 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:37:13 +0200
Subject: [PATCH 071/304] Step 9.10: Require user to access PartyDetails

---
 client/imports/app/app.routes.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index fef7277..c5812a4 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -1,9 +1,15 @@
 import { Route } from '@angular/router';
+import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './parties/parties-list.component';
 import { PartyDetailsComponent } from './parties/party-details.component';
 
 export const routes: Route[] = [
   { path: '', component: PartiesListComponent },
-  { path: 'party/:partyId', component: PartyDetailsComponent }
+  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] }
 ];
+
+export const ROUTES_PROVIDERS = [{
+  provide: 'canActivateForLoggedIn',
+  useValue: () => !! Meteor.userId()
+}];
-- 
2.10.2


From 323b0148c842aa876ebe8f4405ce217422590572 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Wed, 21 Sep 2016 21:37:31 +0200
Subject: [PATCH 072/304] Step 9.11: Add ROUTES_PROVIDERS

---
 client/imports/app/app.module.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 1e7e1ac..139b880 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -5,7 +5,7 @@ import { RouterModule } from '@angular/router';
 import { AccountsModule } from 'angular2-meteor-accounts-ui';
 
 import { AppComponent } from './app.component';
-import { routes } from './app.routes';
+import { routes, ROUTES_PROVIDERS } from './app.routes';
 import { PARTIES_DECLARATIONS } from './parties';
 
 @NgModule({
@@ -20,6 +20,9 @@ import { PARTIES_DECLARATIONS } from './parties';
     AppComponent,
     ...PARTIES_DECLARATIONS
   ],
+  providers: [
+    ...ROUTES_PROVIDERS
+  ],
   bootstrap: [
     AppComponent
   ]
-- 
2.10.2


From 3f5b532e51cc381382315a41f2db93bf8e99b6c5 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:50 -0200
Subject: [PATCH 073/304] Step 9: User accounts, authentication and permissions

---
 manuals/templates/step9.md | 207 +++++++++++++++++++++++
 manuals/views/step9.md     | 413 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 620 insertions(+)
 create mode 100644 manuals/templates/step9.md
 create mode 100644 manuals/views/step9.md

diff --git a/manuals/templates/step9.md b/manuals/templates/step9.md
new file mode 100644
index 0000000..8a89622
--- /dev/null
+++ b/manuals/templates/step9.md
@@ -0,0 +1,207 @@
+In this section we'll look at how to:
+
+- Implement security for an app using Meteor and Angular 2 API
+- Setup user accounts in meteor using email and password
+- Restrict access to views based on user permissions
+
+# Removing Insecure
+
+Right now, our app is publishing all parties to all clients, allowing any client to change those parties. The changes are then reflected back to all the other clients automatically.
+
+This is super powerful and easy, but what about security?  We don't want any user to be able to change any party...
+
+For quick and easy setup, Meteor automatically includes a package called `insecure`. As the name implies, the packages provides a default behavior to Meteor collections allowing all reads and writes.
+
+The first thing we should do is to remove the "insecure" package. By removing that package, the default behavior is changed to deny all.
+
+Execute this command in the command line:
+
+    $ meteor remove insecure
+    > insecure removed from your project
+
+Let's try to change the parties array or a specific party. Nothing's working.
+
+That's because now we have to write an explicit security rule for each operation we want to make on the Mongo collection.
+
+We can assume we will allow a user to alter data if any of the following are true:
+
+- the user is logged in
+- the user created the party
+- the user is an admin
+
+# User Accounts
+
+One of Meteor's most powerful packages is the [Meteor accounts](https://www.meteor.com/accounts) system.
+
+Add the "accounts-password" Meteor package. It's a very powerful package for all the user operations you can think of: login, signup, change password, password recovery, email confirmation and more.
+
+    $ meteor add accounts-password
+
+Now we are going to add `angular2-meteor-accounts-ui` which is a package that contains all the HTML and CSS we need for the user operation forms.
+
+    $ meteor npm install --save angular2-meteor-accounts-ui
+
+Because Angular 2 works with modules, we need to import this package's module into our:
+
+{{{diff_step 9.2}}}
+
+Let's add the `<login-buttons>` tag below of the party form in the PartiesList's template:
+
+{{{diff_step 9.3}}}
+
+Run the code, you'll see a login link below the form. Click on the link and then "create  account" to sign up. Try to log in and log out.
+
+That's it! As you can see, it's very easy to add basic login support with the help of the Meteor accounts package.
+
+## Parties.allow()
+
+Now that we have our account system, we can start defining our security rules for the parties.
+
+Let's go to the "collection" folder and specify what actions are allowed:
+
+{{{diff_step 9.5}}}
+
+In only 10 lines of code we've specified that inserts, updates and removes can only be completed if a user is logged in.
+
+The callbacks passed to the Parties.allow are executed on the server only. The client optimistically assumes that any action (such as removal of a party) will succeed, and reverts the action as soon as the server denies permission.
+If you want to learn more about those parameters passed into Parties.allow or how this method works in general, please, read the official Meteor [docs on allow](http://docs.meteor.com/#/full/allow).
+
+## Meteor.user()
+
+Let's work on ensuring only the party creator (owner) can change the party data.
+
+First we must define an owner for each party that gets created. We do this by taking our current user's ID and setting it as the owner ID of the created party.
+
+Meteor's base accounts package provides two reactive functions that we are going to
+use, [`Meteor.user()`](http://docs.meteor.com/#/full/meteor_user) and [`Meteor.userId()`](http://docs.meteor.com/#/full/meteor_users).
+
+For now, we are going to keep it simple in this app and allow every logged-in user to change a party.
+It'd be useful to add an alert prompting the user to log in if she wants to add or update a party.
+
+Change the click handler of the "Add" button in the `parties-form.component.ts`, `addParty`:
+
+{{{diff_step 9.6}}}
+
+Now, change it to save the user ID as well:
+
+{{{diff_step 9.7}}}
+
+Notice that you'll need to update the Party interface in the `party.interface.ts` definition file with the optional new property: `owner?: string`:
+
+{{{diff_step 9.8}}}
+
+Let's verify the same logic for updating a party:
+
+{{{diff_step 9.9}}}
+
+# canActivate
+
+`CanActivate` is a one of three guard types in the new router. It decides if a route can be activated.
+
+Now you can specify if a component can be accessed only when a user is logged in using the `canActivate` property in the router definition.
+
+{{{diff_step 9.10}}}
+
+We created a new provider called `canActivateForLoggedIn` that contains a boolean value with login state.
+
+As you can see we specified only the name of that provider inside `canActivate` property.
+
+It's worth mentioning that guards can receive more than one provider.
+
+Now, we only need to declare this provider in our NgModule:
+
+{{{diff_step 9.11}}}
+
+# InjectUser
+
+If you place `@InjectUser` above the `PartiesFormComponent` it will inject a new user property:
+
+__`client/imports/parties/parties-form.component.ts`__:
+
+    import { InjectUser } from 'angular2-meteor-accounts-ui';
+    import { Meteor } from 'meteor/meteor';
+    import { OnInit } from '@angular/core';
+    import template from './parties-form.component.html';
+
+    @Component({
+      selector: 'parties-form',
+      template,
+    })
+    @InjectUser('user')
+    export class PartiesFormComponent implements OnInit {
+      user: Meteor.User;
+
+      ngOnInit() {
+        console.log(this.user);
+      }
+    }
+
+Call `this.user` and you will see that it returns the same object as `Meteor.user()`.
+The new property is reactive and can be used in any template, for example:
+
+__`client/imports/parties/parties-form.component.html`__:
+
+    <div *ngIf="!user">Please, log in to change party</div>
+    <form ...>
+      ...
+    </form>
+
+As you can see, we've added a label "Please, login to change party" that is
+conditioned to be shown if `user` is not defined with help of an `ngIf` attribute, and
+will be hidden otherwise.
+
+# Routing Permissions
+
+Let's imagine now that we allow to see and change party details only for logged-in users.
+An ideal way to implement this would be to restrict redirecting to the party details page when
+someone clicks on a party link. In this case, we don't need to check access manually in the party details component itself because the route request is denied early on.
+
+This can be easily done again with help of `CanActivate` property. You can do this with the PartyDetailsComponent, just like we did previous steps earlier with the PartiesFormComponent.
+
+Now log out and try to click on any party link. See, links don't work!
+
+But what about more sophisticated access? Say, let's prevent access into the PartyDetails view for those
+who don't own that particular party.
+
+It could be done inside of a component using `canActivate` method.
+
+Let's add a `canActivate` method and `CanActivate` interface, where we get the current route's `partyId` parameter
+and check if the corresponding party's owner is the same as the currently logged-in user.
+
+  __`client/imports/parties/party-details.component.ts`__:
+  
+    import { CanActivate } from '@angular/router';
+    import template from './party-details.component.html';
+
+    @Component({
+      selector: 'party-details',
+      template
+    })
+    export class PartyDetails implements CanActivate {
+      // ...
+
+      canActivate() {
+        const party = Parties.findOne(this.partyId);
+        return (party && party.owner == Meteor.userId());
+      }
+    }
+
+Now log in, then add a new party, log out and click on the party link.
+Nothing happens meaning that access is restricted to party owners.
+
+Please note it is possible for someone with malicious intent to override your routing restrictions on the client.
+You should never restrict access to sensitive data, sensitive areas, using the client router only.
+
+This is the reason we also made restrictions on the server using the allow/deny functionality, so even if someone gets in they cannot make updates.
+While this prevents writes from happening from unintended sources, reads can still be an issue.
+The next step will take care of privacy, not showing users parties they are not allowed to see.
+
+# Summary
+
+Amazing, only a few lines of code and we have a much more secure application!
+
+We've added two powerful features to our app:
+
+- the "accounts-ui" package that comes with features like user login, logout, registration
+  and complete UI supporting them;
+- restricted access to the party details page, with access available for logged-in users only.
diff --git a/manuals/views/step9.md b/manuals/views/step9.md
new file mode 100644
index 0000000..e5c4b11
--- /dev/null
+++ b/manuals/views/step9.md
@@ -0,0 +1,413 @@
+[{]: <region> (header)
+# Step 9: User accounts, authentication and permissions
+[}]: #
+[{]: <region> (body)
+In this section we'll look at how to:
+
+- Implement security for an app using Meteor and Angular 2 API
+- Setup user accounts in meteor using email and password
+- Restrict access to views based on user permissions
+
+# Removing Insecure
+
+Right now, our app is publishing all parties to all clients, allowing any client to change those parties. The changes are then reflected back to all the other clients automatically.
+
+This is super powerful and easy, but what about security?  We don't want any user to be able to change any party...
+
+For quick and easy setup, Meteor automatically includes a package called `insecure`. As the name implies, the packages provides a default behavior to Meteor collections allowing all reads and writes.
+
+The first thing we should do is to remove the "insecure" package. By removing that package, the default behavior is changed to deny all.
+
+Execute this command in the command line:
+
+    $ meteor remove insecure
+    > insecure removed from your project
+
+Let's try to change the parties array or a specific party. Nothing's working.
+
+That's because now we have to write an explicit security rule for each operation we want to make on the Mongo collection.
+
+We can assume we will allow a user to alter data if any of the following are true:
+
+- the user is logged in
+- the user created the party
+- the user is an admin
+
+# User Accounts
+
+One of Meteor's most powerful packages is the [Meteor accounts](https://www.meteor.com/accounts) system.
+
+Add the "accounts-password" Meteor package. It's a very powerful package for all the user operations you can think of: login, signup, change password, password recovery, email confirmation and more.
+
+    $ meteor add accounts-password
+
+Now we are going to add `angular2-meteor-accounts-ui` which is a package that contains all the HTML and CSS we need for the user operation forms.
+
+    $ meteor npm install --save angular2-meteor-accounts-ui
+
+Because Angular 2 works with modules, we need to import this package's module into our:
+
+[{]: <helper> (diff_step 9.2)
+#### Step 9.2: Import AccountsModule
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -2,6 +2,7 @@
+ ┊2┊2┊import { BrowserModule } from '@angular/platform-browser';
+ ┊3┊3┊import { FormsModule, ReactiveFormsModule } from '@angular/forms';
+ ┊4┊4┊import { RouterModule } from '@angular/router';
++┊ ┊5┊import { AccountsModule } from 'angular2-meteor-accounts-ui';
+ ┊5┊6┊
+ ┊6┊7┊import { AppComponent } from './app.component';
+ ┊7┊8┊import { routes } from './app.routes';
+```
+```diff
+@@ -12,7 +13,8 @@
+ ┊12┊13┊    BrowserModule,
+ ┊13┊14┊    FormsModule,
+ ┊14┊15┊    ReactiveFormsModule,
+-┊15┊  ┊    RouterModule.forRoot(routes)
++┊  ┊16┊    RouterModule.forRoot(routes),
++┊  ┊17┊    AccountsModule
+ ┊16┊18┊  ],
+ ┊17┊19┊  declarations: [
+ ┊18┊20┊    AppComponent,
+```
+[}]: #
+
+Let's add the `<login-buttons>` tag below of the party form in the PartiesList's template:
+
+[{]: <helper> (diff_step 9.3)
+#### Step 9.3: Use LoginButtons component
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊<div>
+ ┊2┊2┊  <parties-form></parties-form>
++┊ ┊3┊  <login-buttons></login-buttons>
+ ┊3┊4┊
+ ┊4┊5┊  <ul>
+ ┊5┊6┊    <li *ngFor="let party of parties | async">
+```
+[}]: #
+
+Run the code, you'll see a login link below the form. Click on the link and then "create  account" to sign up. Try to log in and log out.
+
+That's it! As you can see, it's very easy to add basic login support with the help of the Meteor accounts package.
+
+## Parties.allow()
+
+Now that we have our account system, we can start defining our security rules for the parties.
+
+Let's go to the "collection" folder and specify what actions are allowed:
+
+[{]: <helper> (diff_step 9.5)
+#### Step 9.5: Add Parties collection security
+
+##### Changed both/collections/parties.collection.ts
+```diff
+@@ -1,5 +1,16 @@
+ ┊ 1┊ 1┊import { MongoObservable } from 'meteor-rxjs';
++┊  ┊ 2┊import { Meteor } from 'meteor/meteor';
+ ┊ 2┊ 3┊
+ ┊ 3┊ 4┊import { Party } from '../models/party.model';
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊export const Parties = new MongoObservable.Collection<Party>('parties');
++┊  ┊ 7┊
++┊  ┊ 8┊function loggedIn() {
++┊  ┊ 9┊  return !!Meteor.user();
++┊  ┊10┊}
++┊  ┊11┊
++┊  ┊12┊Parties.allow({
++┊  ┊13┊  insert: loggedIn,
++┊  ┊14┊  update: loggedIn,
++┊  ┊15┊  remove: loggedIn
++┊  ┊16┊});
+```
+[}]: #
+
+In only 10 lines of code we've specified that inserts, updates and removes can only be completed if a user is logged in.
+
+The callbacks passed to the Parties.allow are executed on the server only. The client optimistically assumes that any action (such as removal of a party) will succeed, and reverts the action as soon as the server denies permission.
+If you want to learn more about those parameters passed into Parties.allow or how this method works in general, please, read the official Meteor [docs on allow](http://docs.meteor.com/#/full/allow).
+
+## Meteor.user()
+
+Let's work on ensuring only the party creator (owner) can change the party data.
+
+First we must define an owner for each party that gets created. We do this by taking our current user's ID and setting it as the owner ID of the created party.
+
+Meteor's base accounts package provides two reactive functions that we are going to
+use, [`Meteor.user()`](http://docs.meteor.com/#/full/meteor_user) and [`Meteor.userId()`](http://docs.meteor.com/#/full/meteor_users).
+
+For now, we are going to keep it simple in this app and allow every logged-in user to change a party.
+It'd be useful to add an alert prompting the user to log in if she wants to add or update a party.
+
+Change the click handler of the "Add" button in the `parties-form.component.ts`, `addParty`:
+
+[{]: <helper> (diff_step 9.6)
+#### Step 9.6: Check access in PartiesForm
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊import { Component, OnInit } from '@angular/core';
+ ┊2┊2┊import { FormGroup, FormBuilder, Validators } from '@angular/forms';
++┊ ┊3┊import { Meteor } from 'meteor/meteor';
+ ┊3┊4┊
+ ┊4┊5┊import { Parties } from '../../../../both/collections/parties.collection';
+ ┊5┊6┊
+```
+```diff
+@@ -25,6 +26,11 @@
+ ┊25┊26┊  }
+ ┊26┊27┊
+ ┊27┊28┊  addParty(): void {
++┊  ┊29┊    if (!Meteor.userId()) {
++┊  ┊30┊      alert('Please log in to add a party');
++┊  ┊31┊      return;
++┊  ┊32┊    }
++┊  ┊33┊
+ ┊28┊34┊    if (this.addForm.valid) {
+ ┊29┊35┊      Parties.insert(this.addForm.value);
+```
+[}]: #
+
+Now, change it to save the user ID as well:
+
+[{]: <helper> (diff_step 9.7)
+#### Step 9.7: Add owner
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -32,7 +32,7 @@
+ ┊32┊32┊    }
+ ┊33┊33┊
+ ┊34┊34┊    if (this.addForm.valid) {
+-┊35┊  ┊      Parties.insert(this.addForm.value);
++┊  ┊35┊      Parties.insert(Object.assign({}, this.addForm.value, { owner: Meteor.userId() }));
+ ┊36┊36┊
+ ┊37┊37┊      this.addForm.reset();
+ ┊38┊38┊    }
+```
+[}]: #
+
+Notice that you'll need to update the Party interface in the `party.interface.ts` definition file with the optional new property: `owner?: string`:
+
+[{]: <helper> (diff_step 9.8)
+#### Step 9.8: Define owner in Party type
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -4,4 +4,5 @@
+ ┊4┊4┊  name: string;
+ ┊5┊5┊  description: string;
+ ┊6┊6┊  location: string;
++┊ ┊7┊  owner?: string; 
+ ┊7┊8┊}
+```
+[}]: #
+
+Let's verify the same logic for updating a party:
+
+[{]: <helper> (diff_step 9.9)
+#### Step 9.9: Check access to update a party
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊2┊2┊import { ActivatedRoute } from '@angular/router';
+-┊3┊ ┊import { Subscription } from 'rxjs/Subscription'; 
++┊ ┊3┊import { Subscription } from 'rxjs/Subscription';
++┊ ┊4┊import { Meteor } from 'meteor/meteor'; 
+ ┊4┊5┊
+ ┊5┊6┊import 'rxjs/add/operator/map';
+ ┊6┊7┊
+```
+```diff
+@@ -33,6 +34,11 @@
+ ┊33┊34┊  }
+ ┊34┊35┊
+ ┊35┊36┊  saveParty() {
++┊  ┊37┊    if (!Meteor.userId()) {
++┊  ┊38┊      alert('Please log in to change this party');
++┊  ┊39┊      return;
++┊  ┊40┊    }
++┊  ┊41┊    
+ ┊36┊42┊    Parties.update(this.party._id, {
+ ┊37┊43┊      $set: {
+ ┊38┊44┊        name: this.party.name,
+```
+[}]: #
+
+# canActivate
+
+`CanActivate` is a one of three guard types in the new router. It decides if a route can be activated.
+
+Now you can specify if a component can be accessed only when a user is logged in using the `canActivate` property in the router definition.
+
+[{]: <helper> (diff_step 9.10)
+#### Step 9.10: Require user to access PartyDetails
+
+##### Changed client/imports/app/app.routes.ts
+```diff
+@@ -1,9 +1,15 @@
+ ┊ 1┊ 1┊import { Route } from '@angular/router';
++┊  ┊ 2┊import { Meteor } from 'meteor/meteor';
+ ┊ 2┊ 3┊
+ ┊ 3┊ 4┊import { PartiesListComponent } from './parties/parties-list.component';
+ ┊ 4┊ 5┊import { PartyDetailsComponent } from './parties/party-details.component';
+ ┊ 5┊ 6┊
+ ┊ 6┊ 7┊export const routes: Route[] = [
+ ┊ 7┊ 8┊  { path: '', component: PartiesListComponent },
+-┊ 8┊  ┊  { path: 'party/:partyId', component: PartyDetailsComponent }
++┊  ┊ 9┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] }
+ ┊ 9┊10┊];
++┊  ┊11┊
++┊  ┊12┊export const ROUTES_PROVIDERS = [{
++┊  ┊13┊  provide: 'canActivateForLoggedIn',
++┊  ┊14┊  useValue: () => !! Meteor.userId()
++┊  ┊15┊}];
+```
+[}]: #
+
+We created a new provider called `canActivateForLoggedIn` that contains a boolean value with login state.
+
+As you can see we specified only the name of that provider inside `canActivate` property.
+
+It's worth mentioning that guards can receive more than one provider.
+
+Now, we only need to declare this provider in our NgModule:
+
+[{]: <helper> (diff_step 9.11)
+#### Step 9.11: Add ROUTES_PROVIDERS
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -5,7 +5,7 @@
+ ┊ 5┊ 5┊import { AccountsModule } from 'angular2-meteor-accounts-ui';
+ ┊ 6┊ 6┊
+ ┊ 7┊ 7┊import { AppComponent } from './app.component';
+-┊ 8┊  ┊import { routes } from './app.routes';
++┊  ┊ 8┊import { routes, ROUTES_PROVIDERS } from './app.routes';
+ ┊ 9┊ 9┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊10┊10┊
+ ┊11┊11┊@NgModule({
+```
+```diff
+@@ -20,6 +20,9 @@
+ ┊20┊20┊    AppComponent,
+ ┊21┊21┊    ...PARTIES_DECLARATIONS
+ ┊22┊22┊  ],
++┊  ┊23┊  providers: [
++┊  ┊24┊    ...ROUTES_PROVIDERS
++┊  ┊25┊  ],
+ ┊23┊26┊  bootstrap: [
+ ┊24┊27┊    AppComponent
+ ┊25┊28┊  ]
+```
+[}]: #
+
+# InjectUser
+
+If you place `@InjectUser` above the `PartiesFormComponent` it will inject a new user property:
+
+__`client/imports/parties/parties-form.component.ts`__:
+
+    import { InjectUser } from 'angular2-meteor-accounts-ui';
+    import { Meteor } from 'meteor/meteor';
+    import { OnInit } from '@angular/core';
+    import template from './parties-form.component.html';
+
+    @Component({
+      selector: 'parties-form',
+      template,
+    })
+    @InjectUser('user')
+    export class PartiesFormComponent implements OnInit {
+      user: Meteor.User;
+
+      ngOnInit() {
+        console.log(this.user);
+      }
+    }
+
+Call `this.user` and you will see that it returns the same object as `Meteor.user()`.
+The new property is reactive and can be used in any template, for example:
+
+__`client/imports/parties/parties-form.component.html`__:
+
+    <div *ngIf="!user">Please, log in to change party</div>
+    <form ...>
+      ...
+    </form>
+
+As you can see, we've added a label "Please, login to change party" that is
+conditioned to be shown if `user` is not defined with help of an `ngIf` attribute, and
+will be hidden otherwise.
+
+# Routing Permissions
+
+Let's imagine now that we allow to see and change party details only for logged-in users.
+An ideal way to implement this would be to restrict redirecting to the party details page when
+someone clicks on a party link. In this case, we don't need to check access manually in the party details component itself because the route request is denied early on.
+
+This can be easily done again with help of `CanActivate` property. You can do this with the PartyDetailsComponent, just like we did previous steps earlier with the PartiesFormComponent.
+
+Now log out and try to click on any party link. See, links don't work!
+
+But what about more sophisticated access? Say, let's prevent access into the PartyDetails view for those
+who don't own that particular party.
+
+It could be done inside of a component using `canActivate` method.
+
+Let's add a `canActivate` method and `CanActivate` interface, where we get the current route's `partyId` parameter
+and check if the corresponding party's owner is the same as the currently logged-in user.
+
+  __`client/imports/parties/party-details.component.ts`__:
+  
+    import { CanActivate } from '@angular/router';
+    import template from './party-details.component.html';
+
+    @Component({
+      selector: 'party-details',
+      template
+    })
+    export class PartyDetails implements CanActivate {
+      // ...
+
+      canActivate() {
+        const party = Parties.findOne(this.partyId);
+        return (party && party.owner == Meteor.userId());
+      }
+    }
+
+Now log in, then add a new party, log out and click on the party link.
+Nothing happens meaning that access is restricted to party owners.
+
+Please note it is possible for someone with malicious intent to override your routing restrictions on the client.
+You should never restrict access to sensitive data, sensitive areas, using the client router only.
+
+This is the reason we also made restrictions on the server using the allow/deny functionality, so even if someone gets in they cannot make updates.
+While this prevents writes from happening from unintended sources, reads can still be an issue.
+The next step will take care of privacy, not showing users parties they are not allowed to see.
+
+# Summary
+
+Amazing, only a few lines of code and we have a much more secure application!
+
+We've added two powerful features to our app:
+
+- the "accounts-ui" package that comes with features like user login, logout, registration
+  and complete UI supporting them;
+- restricted access to the party details page, with access available for logged-in users only.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step8.md) | [Next Step >](step10.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From d37d4af23c8632f813e262cf9128df24dc5df54b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 12:54:25 +0200
Subject: [PATCH 074/304] Step 10.1: Remove autopublish package

---
 .meteor/packages | 1 -
 .meteor/versions | 3 +--
 2 files changed, 1 insertion(+), 3 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 10ddf61..cc77370 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -15,7 +15,6 @@ standard-minifier-css@1.2.0_1   # CSS minifier run for production mode
 standard-minifier-js@1.2.0_1    # JS minifier run for production mode
 es5-shim@4.6.14_1                # ECMAScript 5 compatibility for older browsers.
 
-autopublish@1.0.7             # Publish all data to the clients (for prototyping)
 angular2-compilers
 practicalmeteor:mocha
 xolvio:cleaner
diff --git a/.meteor/versions b/.meteor/versions
index 6a1b824..c759c6e 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -2,7 +2,6 @@ accounts-base@1.2.14
 accounts-password@1.3.1
 allow-deny@1.0.5
 angular2-compilers@0.6.5
-autopublish@1.0.7
 autoupdate@1.2.11
 babel-compiler@6.13.0
 babel-runtime@0.1.13
@@ -13,7 +12,7 @@ barbatus:typescript-compiler@0.8.4
 barbatus:typescript-runtime@0.1.2
 base64@1.0.10
 binary-heap@1.0.10
-blaze@2.2.0
+blaze@2.1.9
 blaze-tools@1.0.10
 boilerplate-generator@1.0.11
 caching-compiler@1.0.6
-- 
2.10.2


From 5825f5c44dcc3243d62df6e558afc8c77c6b3531 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 12:56:22 +0200
Subject: [PATCH 075/304] Step 10.2: Publish Parties collection

---
 server/imports/publications/parties.ts | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 server/imports/publications/parties.ts

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
new file mode 100644
index 0000000..08ef863
--- /dev/null
+++ b/server/imports/publications/parties.ts
@@ -0,0 +1,4 @@
+import { Meteor } from 'meteor/meteor';
+import { Parties } from '../../../both/collections/parties.collection';
+
+Meteor.publish('parties', () => Parties.find());
-- 
2.10.2


From 96850d7c875dfbf57b353e76355488067d154518 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 12:57:35 +0200
Subject: [PATCH 076/304] Step 10.3: Add publication to server-side entry point

---
 server/main.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/server/main.ts b/server/main.ts
index cf58a8d..7f8e626 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -2,6 +2,8 @@ import { Meteor } from 'meteor/meteor';
 
 import { loadParties } from './imports/fixtures/parties';
 
+import './imports/publications/parties'; 
+
 Meteor.startup(() => {
   loadParties();
 });
-- 
2.10.2


From 04b25a3c29669fdfdaa2cebf7ace90842e6096f7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 13:54:06 +0200
Subject: [PATCH 077/304] Step 10.4: Subscribe to Parties publication

---
 client/imports/app/parties/parties-list.component.ts | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index bb09b1c..93be382 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -1,5 +1,7 @@
-import { Component } from '@angular/core';
+import { Component, OnInit, OnDestroy } from '@angular/core';
 import { Observable } from 'rxjs/Observable';
+import { Subscription } from 'rxjs/Subscription';
+import { MeteorObservable } from 'meteor-rxjs';
 
 import { Parties } from '../../../../both/collections/parties.collection';
 import { Party } from '../../../../both/models/party.model';
@@ -10,14 +12,20 @@ import template from './parties-list.component.html';
   selector: 'parties-list',
   template
 })
-export class PartiesListComponent {
+export class PartiesListComponent implements OnInit, OnDestroy {
   parties: Observable<Party[]>;
+  partiesSub: Subscription;
 
-  constructor() {
+  ngOnInit() {
     this.parties = Parties.find({}).zone();
+    this.partiesSub = MeteorObservable.subscribe('parties').subscribe();
   }
 
   removeParty(party: Party): void {
     Parties.remove(party._id);
   }
+
+  ngOnDestroy() {
+    this.partiesSub.unsubscribe();
+  }
 }
-- 
2.10.2


From c970f138f3c5081ca20ce5e4bae0cbae07e96ee1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:02:19 +0200
Subject: [PATCH 078/304] Step 10.5: Add checkbox for public property

---
 client/imports/app/parties/parties-form.component.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index 98f90ca..3cc8990 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -7,6 +7,9 @@
 
   <label>Location</label>
   <input type="text" formControlName="location">
+
+  <label>Public</label>
+  <input type="checkbox" formControlName="public">
   
   <button type="submit">Add</button>
 </form>
\ No newline at end of file
-- 
2.10.2


From 8d68e83be4791843b02e64c0dcdeaf6e3ce00305 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:05:09 +0200
Subject: [PATCH 079/304] Step 10.6: Update Party interface

---
 both/models/party.model.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index 5b20610..2526c11 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -4,5 +4,6 @@ export interface Party extends CollectionObject {
   name: string;
   description: string;
   location: string;
-  owner?: string; 
+  owner?: string;
+  public: boolean;
 }
-- 
2.10.2


From ac098e8d07a303d30799d0a8b5feb83a4d59284a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:05:26 +0200
Subject: [PATCH 080/304] Step 10.7: Update parties initials

---
 server/imports/fixtures/parties.ts | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
index 4f6d555..6c7b374 100644
--- a/server/imports/fixtures/parties.ts
+++ b/server/imports/fixtures/parties.ts
@@ -6,15 +6,18 @@ export function loadParties() {
     const parties: Party[] = [{
       name: 'Dubstep-Free Zone',
       description: 'Can we please just for an evening not listen to dubstep.',
-      location: 'Palo Alto'
+      location: 'Palo Alto',
+      public: true
     }, {
       name: 'All dubstep all the time',
       description: 'Get it on!',
-      location: 'Palo Alto'
+      location: 'Palo Alto',
+      public: true
     }, {
       name: 'Savage lounging',
       description: 'Leisure suit required. And only fiercest manners.',
-      location: 'San Francisco'
+      location: 'San Francisco',
+      public: false
     }];
 
     parties.forEach((party: Party) => Parties.insert(party));
-- 
2.10.2


From 66aac0334c756217d7a65fff940fca81ab5eab1a Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:06:19 +0200
Subject: [PATCH 081/304] Step 10.8: Add public property to form builder

---
 client/imports/app/parties/parties-form.component.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 978f6e4..0823749 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -21,7 +21,8 @@ export class PartiesFormComponent implements OnInit {
     this.addForm = this.formBuilder.group({
       name: ['', Validators.required],
       description: [],
-      location: ['', Validators.required]
+      location: ['', Validators.required],
+      public: [false]
     });
   }
 
-- 
2.10.2


From ed3ed02f16ca5c57c84eb14f91803bc47c1afa7d Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:09:53 +0200
Subject: [PATCH 082/304] Step 10.9: Limit data sent to the client

---
 server/imports/publications/parties.ts | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 08ef863..b7652bb 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -1,4 +1,24 @@
 import { Meteor } from 'meteor/meteor';
 import { Parties } from '../../../both/collections/parties.collection';
 
-Meteor.publish('parties', () => Parties.find());
+Meteor.publish('parties', function() {
+  const selector = {
+    $or: [{
+      // party is public
+      public: true
+    },
+    // or
+    { 
+      // current user is the owner
+      $and: [{
+        owner: this.userId 
+      }, {
+        owner: {
+          $exists: true
+        }
+      }]
+    }]
+  };
+
+  return Parties.find(selector);
+});
-- 
2.10.2


From 40ad71ccb5ab72551290b65aed6e690fde27ebee Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:13:28 +0200
Subject: [PATCH 083/304] Step 10.10: Add party publication

---
 server/imports/publications/parties.ts | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index b7652bb..5314c57 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -2,7 +2,16 @@ import { Meteor } from 'meteor/meteor';
 import { Parties } from '../../../both/collections/parties.collection';
 
 Meteor.publish('parties', function() {
-  const selector = {
+  return Parties.find(buildQuery.call(this));
+});
+
+Meteor.publish('party', function(partyId: string) {
+  return Parties.find(buildQuery.call(this, partyId));
+});
+
+
+function buildQuery(partyId?: string): Object {
+  const isAvailable = {
     $or: [{
       // party is public
       public: true
@@ -20,5 +29,16 @@ Meteor.publish('parties', function() {
     }]
   };
 
-  return Parties.find(selector);
-});
+  if (partyId) {
+    return {
+      // only single party
+      $and: [{
+          _id: partyId
+        },
+        isAvailable
+      ]
+    };
+  }
+
+  return isAvailable;
+}
\ No newline at end of file
-- 
2.10.2


From a520dda46819df294ffad7bdbd9668ff09eea6c1 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:22:47 +0200
Subject: [PATCH 084/304] Step 10.11: Subscribe to the party publication

---
 client/imports/app/parties/party-details.component.ts | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 0032c65..9c7a9e7 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -1,7 +1,8 @@
 import { Component, OnInit, OnDestroy } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
 import { Subscription } from 'rxjs/Subscription';
-import { Meteor } from 'meteor/meteor'; 
+import { Meteor } from 'meteor/meteor';
+import { MeteorObservable } from 'meteor-rxjs';
 
 import 'rxjs/add/operator/map';
 
@@ -18,6 +19,7 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   partyId: string;
   paramsSub: Subscription;
   party: Party;
+  partySub: Subscription;
 
   constructor(
     private route: ActivatedRoute
@@ -27,9 +29,15 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
     this.paramsSub = this.route.params
       .map(params => params['partyId'])
       .subscribe(partyId => {
-        this.partyId = partyId
+        this.partyId = partyId;
         
-        this.party = Parties.findOne(this.partyId);
+        if (this.partySub) {
+          this.partySub.unsubscribe();
+        }
+
+        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
+          this.party = Parties.findOne(this.partyId);
+        });
       });
   }
 
@@ -50,5 +58,6 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
 
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
+    this.partySub.unsubscribe();
   }
 }
-- 
2.10.2


From d1c809fe14356143c78ce0c5654c4247a218b244 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:24:27 +0200
Subject: [PATCH 085/304] Step 10.12: Add search input

---
 client/imports/app/parties/parties-list.component.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 20400c4..bd2f99c 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -1,5 +1,8 @@
 <div>
-  <parties-form></parties-form>
+  <parties-form style="float: left"></parties-form>
+  <input type="text" #searchtext placeholder="Search by Location">
+  <button type="button" (click)="search(searchtext.value)">Search</button>
+  
   <login-buttons></login-buttons>
 
   <ul>
-- 
2.10.2


From cdd26d00cf11eff5854771f64d47cdddba3a9628 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:37:54 +0200
Subject: [PATCH 086/304] Step 10.13: Add search method

---
 client/imports/app/parties/parties-list.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 93be382..b80de38 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -25,6 +25,10 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     Parties.remove(party._id);
   }
 
+  search(value: string): void {
+    this.parties = Parties.find(value ? { location: value } : {}).zone();
+  }
+
   ngOnDestroy() {
     this.partiesSub.unsubscribe();
   }
-- 
2.10.2


From 77013be526dfd3543e08c2b68971dfb9fe3f941d Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:51 -0200
Subject: [PATCH 087/304] Step 10: Privacy and publish-subscribe functions

---
 manuals/templates/step10.md | 185 ++++++++++++++++
 manuals/views/step10.md     | 501 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 686 insertions(+)
 create mode 100644 manuals/templates/step10.md
 create mode 100644 manuals/views/step10.md

diff --git a/manuals/templates/step10.md b/manuals/templates/step10.md
new file mode 100644
index 0000000..97d7828
--- /dev/null
+++ b/manuals/templates/step10.md
@@ -0,0 +1,185 @@
+You may have noticed that all available parties were always shown on the page
+at the time, regardless of whether they had been added by a logged-in user or
+anonymously.
+
+In future versions of our app, we'll probably want to have a RSVP feature for parties,
+which should only display:
+
+- public parties
+- parties the current user has been invited to
+
+In this step we are going to learn how we can restrict data flow from the server side
+to the client side for only desired data in Meteor, based on the user currently logged-in and some other parameters.
+
+## Autopublish
+
+First we need to remove the `autopublish` Meteor package.
+
+`autopublish` is added to any new Meteor project.
+Like it was mentioned before, it pushes a full copy of the database to each client.
+It helped us rapidly develop our app, but it's not so good for privacy...
+
+Write this command in the console:
+
+    meteor remove autopublish
+
+Now run the app. Oops, nothing on the page!
+
+## Meteor.publish
+
+Data in Meteor is published from the server and subscribed to by the client.
+
+We need to tell Meteor what parties we want transferred to the client side.
+
+To do that we will use Meteor's [publish function](http://docs.meteor.com/#/full/meteor_publish).
+
+Publication functions are placed inside the "server" folder so clients won't have access to them.
+
+Let's create a new file inside the "server/imports/publications" folder called `parties.ts`. Here we can specify which parties to pass to the client.
+
+{{{diff_step 10.2}}}
+
+As you can see, parameters of the Meteor.publish are self-explanatory:
+first one is a publication name, then there goes a function that returns
+a Mongo cursor, which represents a subset of the parties collection
+that server will transfer to the client.
+
+The publish function can take parameters as well, but
+we'll get to that in a minute.
+
+We've just created a module, as you already know, one necessary thing is left — to import it in the `main.ts` in order to execute code inside:
+
+{{{diff_step 10.3}}}
+
+## Meteor.subscribe
+
+[Meteor.subscribe](http://docs.meteor.com/#/full/meteor_subscribe) is the receiving end of Meteor.publish on the client.
+
+:et's add the following line to subscribe to the `parties` publications:
+
+    MeteorObservable.subscribe('parties').subscribe();
+
+> Note that the first `subscribe` belongs to Meteor API, and the return value in this case is an `Observable` because we used `MeteorObservable`. The second `subscribe` is a method of `Observable`.
+
+> When using `MeteorObservable.subscribe`, the `next` callback called only once - when the subscription is ready to use.
+
+But beyond that simplicity there are two small issues we'll need to solve:
+
+1) Ending a subscription.
+
+Each subscription means that Meteor will continue synchronizing (or in Meteor terms, updating reactively) the particular set of data, we've just subscribed to, between server and client.
+If the PartiesList component gets destroyed, we need to inform Meteor to stop that synchronization, otherwise we'll produce a memory leak.
+
+In this case, we will use `OnDestroy` and implement `ngOnDestroy`, and we will use the `Subscription` object returned from our `Observable` - so when the Component is destroyed - the subscription will end.
+
+2) Updating Angular 2's UI
+
+In order to connect Angular 2 and Meteor, we will use a special `Observable` operator called `zone()` - we use it on the Collection query object, so when the collection changes - the view will update.
+
+So, we are going to extend the `PartiesListComponent` component and make use of `MeteorObservable.subscribe`:
+
+{{{diff_step 10.4}}}
+
+Now run the app. Whoa, we've just made all the parties come back using pub/sub!
+
+As it's mentioned earlier, it'd be nice for the app to implement some basic security and show parties based on who owns them. Let's do it.
+
+Firstly, we'll add a new `public` field to the party data through several steps:
+
+Add UI with the new "Public" checkbox to the right of the "Location" input;
+
+{{{diff_step 10.5}}}
+
+Update Party in `both/models/party.model.ts` to include `public: boolean`;
+
+{{{diff_step 10.6}}}
+
+Change the initial data on the server in `parties.ts` to contain the `public` field as well:
+
+{{{diff_step 10.7}}}
+
+Now, let's add the public field to our Form declaration:
+
+{{{diff_step 10.8}}}
+
+Next, we are limiting data sent to the client. A simple check is to verify that either
+the party is public or the "owner" field exists and is equal to the currently logged-in user:
+
+{{{diff_step 10.9}}}
+
+> `$or`, `$and` and `$exists` names are part of the MongoDB query syntax.
+> If you are not familiar with it, please, read about them here: [$or](http://docs.mongodb.org/manual/reference/operator/query/or/), [$and](http://docs.mongodb.org/manual/reference/operator/query/and/) and [$exists](http://docs.mongodb.org/manual/reference/operator/query/exists/).
+
+We also need to reset the database since schema of the parties inside is already invalid:
+
+    meteor reset
+
+Let's check to make sure everything is working.
+
+Run the app again, and you will see only two items. That's because we set the third party to be private.
+
+Log in with 2 different users in 2 different browsers. Try to create a couple of public parties and a couple of private ones. Now log out and check out what parties are shown. Only public parties should be visible.
+
+Now log in as a party owner user and verify that a couple of private parties got to the page as well.
+
+## Subscribe with Params
+
+There is one page in our app so far where we'll need parameterized publishing — the `PartyDetails` component's page.
+Besides that, let's add another cool feature to Socially, party search by location.
+
+As you already know, the second parameter of Meteor.publish is a callback function that can take a variable number
+of parameters, and these parameters are passed by the user to `Meteor.subscribe` on the client.
+
+Let's elaborate our "party" publication on the server. We want to publish both a list of parties and a single party.
+
+{{{diff_step 10.10}}}
+
+Looks like a lot of code, but it does something powerful. The privacy query, we introduced above, was moved to a separate method called `buildQuery`. We'll need this function to avoid repetition with each different parties query.
+
+> Notice that we used `buildQuery.call(this)` calling syntax in order to make context of this method the same as in Meteor.publish and be able to use `this.userId` inside that method.
+
+Let's subscribe to the new publication in the `PartyDetails` to load one specific party:
+
+{{{diff_step 10.11}}}
+
+We used `MeteorObservable.subscribe` with the parameter we got from the Router params, and do the same logic of OnDestroy.
+
+> Note that in this case, we use the Subscription of the `MeteorObservable.subscribe`, in order to know when the subscription is ready to use, and then we used `findOne` to get the actual object from the Collection.
+
+Run the app and click on one of the party links. You'll see that the party details page loads with full data as before.
+
+# Search
+
+Now it's time for the parties search. Let's add a search input and button to the right of the "Add" button.
+We are going to extend the `PartiesList` component since this features is related to the parties list itself:
+
+{{{diff_step 10.12}}}
+
+As you may have guessed, the next thing is to process the button click event:
+
+{{{diff_step 10.13}}}
+
+Notice that we don't re-subscribe in the `search` method because we've already loaded all parties available to
+the current user from the published parties, so we just query the loaded collection.
+
+# Understanding Publish-Subscribe
+
+It is very important to understand Meteor's Publish-Subscribe mechanism so you don't get confused and use it to filter things in the view!
+
+Meteor accumulates all the data from the different subscriptions of the same collection in the client, so adding a different subscription in a different view won't delete the data that is already in the client.
+
+Please, read more about Pub/Sub in Meteor [here](http://www.meteorpedia.com/read/Understanding_Meteor_Publish_and_Subscribe).
+
+# Summary
+
+In this step we've clearly seen how powerful Meteor and Angular 2 are and how they become even more
+powerful when used together. With rather few lines of code, we were able to add full privacy to Socially as well as
+search capabilities.
+
+Meanwhile, we've learned about:
+
+- the importance of removing `autopublish`;
+- the Publish-Subscribe mechanism in Meteor;
+- how to query particular data from the database via the server side.
+
+In the [next step](/tutorials/angular2/deploying-your-app), we'll look at how quick and easy it is to deploy your Meteor app.
diff --git a/manuals/views/step10.md b/manuals/views/step10.md
new file mode 100644
index 0000000..146f5fd
--- /dev/null
+++ b/manuals/views/step10.md
@@ -0,0 +1,501 @@
+[{]: <region> (header)
+# Step 10: Privacy and publish-subscribe functions
+[}]: #
+[{]: <region> (body)
+You may have noticed that all available parties were always shown on the page
+at the time, regardless of whether they had been added by a logged-in user or
+anonymously.
+
+In future versions of our app, we'll probably want to have a RSVP feature for parties,
+which should only display:
+
+- public parties
+- parties the current user has been invited to
+
+In this step we are going to learn how we can restrict data flow from the server side
+to the client side for only desired data in Meteor, based on the user currently logged-in and some other parameters.
+
+## Autopublish
+
+First we need to remove the `autopublish` Meteor package.
+
+`autopublish` is added to any new Meteor project.
+Like it was mentioned before, it pushes a full copy of the database to each client.
+It helped us rapidly develop our app, but it's not so good for privacy...
+
+Write this command in the console:
+
+    meteor remove autopublish
+
+Now run the app. Oops, nothing on the page!
+
+## Meteor.publish
+
+Data in Meteor is published from the server and subscribed to by the client.
+
+We need to tell Meteor what parties we want transferred to the client side.
+
+To do that we will use Meteor's [publish function](http://docs.meteor.com/#/full/meteor_publish).
+
+Publication functions are placed inside the "server" folder so clients won't have access to them.
+
+Let's create a new file inside the "server/imports/publications" folder called `parties.ts`. Here we can specify which parties to pass to the client.
+
+[{]: <helper> (diff_step 10.2)
+#### Step 10.2: Publish Parties collection
+
+##### Added server/imports/publications/parties.ts
+```diff
+@@ -0,0 +1,4 @@
++┊ ┊1┊import { Meteor } from 'meteor/meteor';
++┊ ┊2┊import { Parties } from '../../../both/collections/parties.collection';
++┊ ┊3┊
++┊ ┊4┊Meteor.publish('parties', () => Parties.find());
+```
+[}]: #
+
+As you can see, parameters of the Meteor.publish are self-explanatory:
+first one is a publication name, then there goes a function that returns
+a Mongo cursor, which represents a subset of the parties collection
+that server will transfer to the client.
+
+The publish function can take parameters as well, but
+we'll get to that in a minute.
+
+We've just created a module, as you already know, one necessary thing is left — to import it in the `main.ts` in order to execute code inside:
+
+[{]: <helper> (diff_step 10.3)
+#### Step 10.3: Add publication to server-side entry point
+
+##### Changed server/main.ts
+```diff
+@@ -2,6 +2,8 @@
+ ┊2┊2┊
+ ┊3┊3┊import { loadParties } from './imports/fixtures/parties';
+ ┊4┊4┊
++┊ ┊5┊import './imports/publications/parties'; 
++┊ ┊6┊
+ ┊5┊7┊Meteor.startup(() => {
+ ┊6┊8┊  loadParties();
+ ┊7┊9┊});
+```
+[}]: #
+
+## Meteor.subscribe
+
+[Meteor.subscribe](http://docs.meteor.com/#/full/meteor_subscribe) is the receiving end of Meteor.publish on the client.
+
+:et's add the following line to subscribe to the `parties` publications:
+
+    MeteorObservable.subscribe('parties').subscribe();
+
+> Note that the first `subscribe` belongs to Meteor API, and the return value in this case is an `Observable` because we used `MeteorObservable`. The second `subscribe` is a method of `Observable`.
+
+> When using `MeteorObservable.subscribe`, the `next` callback called only once - when the subscription is ready to use.
+
+But beyond that simplicity there are two small issues we'll need to solve:
+
+1) Ending a subscription.
+
+Each subscription means that Meteor will continue synchronizing (or in Meteor terms, updating reactively) the particular set of data, we've just subscribed to, between server and client.
+If the PartiesList component gets destroyed, we need to inform Meteor to stop that synchronization, otherwise we'll produce a memory leak.
+
+In this case, we will use `OnDestroy` and implement `ngOnDestroy`, and we will use the `Subscription` object returned from our `Observable` - so when the Component is destroyed - the subscription will end.
+
+2) Updating Angular 2's UI
+
+In order to connect Angular 2 and Meteor, we will use a special `Observable` operator called `zone()` - we use it on the Collection query object, so when the collection changes - the view will update.
+
+So, we are going to extend the `PartiesListComponent` component and make use of `MeteorObservable.subscribe`:
+
+[{]: <helper> (diff_step 10.4)
+#### Step 10.4: Subscribe to Parties publication
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -1,5 +1,7 @@
+-┊1┊ ┊import { Component } from '@angular/core';
++┊ ┊1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊2┊2┊import { Observable } from 'rxjs/Observable';
++┊ ┊3┊import { Subscription } from 'rxjs/Subscription';
++┊ ┊4┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊3┊5┊
+ ┊4┊6┊import { Parties } from '../../../../both/collections/parties.collection';
+ ┊5┊7┊import { Party } from '../../../../both/models/party.model';
+```
+```diff
+@@ -10,14 +12,20 @@
+ ┊10┊12┊  selector: 'parties-list',
+ ┊11┊13┊  template
+ ┊12┊14┊})
+-┊13┊  ┊export class PartiesListComponent {
++┊  ┊15┊export class PartiesListComponent implements OnInit, OnDestroy {
+ ┊14┊16┊  parties: Observable<Party[]>;
++┊  ┊17┊  partiesSub: Subscription;
+ ┊15┊18┊
+-┊16┊  ┊  constructor() {
++┊  ┊19┊  ngOnInit() {
+ ┊17┊20┊    this.parties = Parties.find({}).zone();
++┊  ┊21┊    this.partiesSub = MeteorObservable.subscribe('parties').subscribe();
+ ┊18┊22┊  }
+ ┊19┊23┊
+ ┊20┊24┊  removeParty(party: Party): void {
+ ┊21┊25┊    Parties.remove(party._id);
+ ┊22┊26┊  }
++┊  ┊27┊
++┊  ┊28┊  ngOnDestroy() {
++┊  ┊29┊    this.partiesSub.unsubscribe();
++┊  ┊30┊  }
+ ┊23┊31┊}
+```
+[}]: #
+
+Now run the app. Whoa, we've just made all the parties come back using pub/sub!
+
+As it's mentioned earlier, it'd be nice for the app to implement some basic security and show parties based on who owns them. Let's do it.
+
+Firstly, we'll add a new `public` field to the party data through several steps:
+
+Add UI with the new "Public" checkbox to the right of the "Location" input;
+
+[{]: <helper> (diff_step 10.5)
+#### Step 10.5: Add checkbox for public property
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -7,6 +7,9 @@
+ ┊ 7┊ 7┊
+ ┊ 8┊ 8┊  <label>Location</label>
+ ┊ 9┊ 9┊  <input type="text" formControlName="location">
++┊  ┊10┊
++┊  ┊11┊  <label>Public</label>
++┊  ┊12┊  <input type="checkbox" formControlName="public">
+ ┊10┊13┊  
+ ┊11┊14┊  <button type="submit">Add</button>
+ ┊12┊15┊</form>🚫↵
+```
+[}]: #
+
+Update Party in `both/models/party.model.ts` to include `public: boolean`;
+
+[{]: <helper> (diff_step 10.6)
+#### Step 10.6: Update Party interface
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -4,5 +4,6 @@
+ ┊4┊4┊  name: string;
+ ┊5┊5┊  description: string;
+ ┊6┊6┊  location: string;
+-┊7┊ ┊  owner?: string; 
++┊ ┊7┊  owner?: string;
++┊ ┊8┊  public: boolean;
+ ┊8┊9┊}
+```
+[}]: #
+
+Change the initial data on the server in `parties.ts` to contain the `public` field as well:
+
+[{]: <helper> (diff_step 10.7)
+#### Step 10.7: Update parties initials
+
+##### Changed server/imports/fixtures/parties.ts
+```diff
+@@ -6,15 +6,18 @@
+ ┊ 6┊ 6┊    const parties: Party[] = [{
+ ┊ 7┊ 7┊      name: 'Dubstep-Free Zone',
+ ┊ 8┊ 8┊      description: 'Can we please just for an evening not listen to dubstep.',
+-┊ 9┊  ┊      location: 'Palo Alto'
++┊  ┊ 9┊      location: 'Palo Alto',
++┊  ┊10┊      public: true
+ ┊10┊11┊    }, {
+ ┊11┊12┊      name: 'All dubstep all the time',
+ ┊12┊13┊      description: 'Get it on!',
+-┊13┊  ┊      location: 'Palo Alto'
++┊  ┊14┊      location: 'Palo Alto',
++┊  ┊15┊      public: true
+ ┊14┊16┊    }, {
+ ┊15┊17┊      name: 'Savage lounging',
+ ┊16┊18┊      description: 'Leisure suit required. And only fiercest manners.',
+-┊17┊  ┊      location: 'San Francisco'
++┊  ┊19┊      location: 'San Francisco',
++┊  ┊20┊      public: false
+ ┊18┊21┊    }];
+ ┊19┊22┊
+ ┊20┊23┊    parties.forEach((party: Party) => Parties.insert(party));
+```
+[}]: #
+
+Now, let's add the public field to our Form declaration:
+
+[{]: <helper> (diff_step 10.8)
+#### Step 10.8: Add public property to form builder
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -21,7 +21,8 @@
+ ┊21┊21┊    this.addForm = this.formBuilder.group({
+ ┊22┊22┊      name: ['', Validators.required],
+ ┊23┊23┊      description: [],
+-┊24┊  ┊      location: ['', Validators.required]
++┊  ┊24┊      location: ['', Validators.required],
++┊  ┊25┊      public: [false]
+ ┊25┊26┊    });
+ ┊26┊27┊  }
+```
+[}]: #
+
+Next, we are limiting data sent to the client. A simple check is to verify that either
+the party is public or the "owner" field exists and is equal to the currently logged-in user:
+
+[{]: <helper> (diff_step 10.9)
+#### Step 10.9: Limit data sent to the client
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -1,4 +1,24 @@
+ ┊ 1┊ 1┊import { Meteor } from 'meteor/meteor';
+ ┊ 2┊ 2┊import { Parties } from '../../../both/collections/parties.collection';
+ ┊ 3┊ 3┊
+-┊ 4┊  ┊Meteor.publish('parties', () => Parties.find());
++┊  ┊ 4┊Meteor.publish('parties', function() {
++┊  ┊ 5┊  const selector = {
++┊  ┊ 6┊    $or: [{
++┊  ┊ 7┊      // party is public
++┊  ┊ 8┊      public: true
++┊  ┊ 9┊    },
++┊  ┊10┊    // or
++┊  ┊11┊    { 
++┊  ┊12┊      // current user is the owner
++┊  ┊13┊      $and: [{
++┊  ┊14┊        owner: this.userId 
++┊  ┊15┊      }, {
++┊  ┊16┊        owner: {
++┊  ┊17┊          $exists: true
++┊  ┊18┊        }
++┊  ┊19┊      }]
++┊  ┊20┊    }]
++┊  ┊21┊  };
++┊  ┊22┊
++┊  ┊23┊  return Parties.find(selector);
++┊  ┊24┊});
+```
+[}]: #
+
+> `$or`, `$and` and `$exists` names are part of the MongoDB query syntax.
+> If you are not familiar with it, please, read about them here: [$or](http://docs.mongodb.org/manual/reference/operator/query/or/), [$and](http://docs.mongodb.org/manual/reference/operator/query/and/) and [$exists](http://docs.mongodb.org/manual/reference/operator/query/exists/).
+
+We also need to reset the database since schema of the parties inside is already invalid:
+
+    meteor reset
+
+Let's check to make sure everything is working.
+
+Run the app again, and you will see only two items. That's because we set the third party to be private.
+
+Log in with 2 different users in 2 different browsers. Try to create a couple of public parties and a couple of private ones. Now log out and check out what parties are shown. Only public parties should be visible.
+
+Now log in as a party owner user and verify that a couple of private parties got to the page as well.
+
+## Subscribe with Params
+
+There is one page in our app so far where we'll need parameterized publishing — the `PartyDetails` component's page.
+Besides that, let's add another cool feature to Socially, party search by location.
+
+As you already know, the second parameter of Meteor.publish is a callback function that can take a variable number
+of parameters, and these parameters are passed by the user to `Meteor.subscribe` on the client.
+
+Let's elaborate our "party" publication on the server. We want to publish both a list of parties and a single party.
+
+[{]: <helper> (diff_step 10.10)
+#### Step 10.10: Add party publication
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -2,7 +2,16 @@
+ ┊ 2┊ 2┊import { Parties } from '../../../both/collections/parties.collection';
+ ┊ 3┊ 3┊
+ ┊ 4┊ 4┊Meteor.publish('parties', function() {
+-┊ 5┊  ┊  const selector = {
++┊  ┊ 5┊  return Parties.find(buildQuery.call(this));
++┊  ┊ 6┊});
++┊  ┊ 7┊
++┊  ┊ 8┊Meteor.publish('party', function(partyId: string) {
++┊  ┊ 9┊  return Parties.find(buildQuery.call(this, partyId));
++┊  ┊10┊});
++┊  ┊11┊
++┊  ┊12┊
++┊  ┊13┊function buildQuery(partyId?: string): Object {
++┊  ┊14┊  const isAvailable = {
+ ┊ 6┊15┊    $or: [{
+ ┊ 7┊16┊      // party is public
+ ┊ 8┊17┊      public: true
+```
+```diff
+@@ -20,5 +29,16 @@
+ ┊20┊29┊    }]
+ ┊21┊30┊  };
+ ┊22┊31┊
+-┊23┊  ┊  return Parties.find(selector);
+-┊24┊  ┊});
++┊  ┊32┊  if (partyId) {
++┊  ┊33┊    return {
++┊  ┊34┊      // only single party
++┊  ┊35┊      $and: [{
++┊  ┊36┊          _id: partyId
++┊  ┊37┊        },
++┊  ┊38┊        isAvailable
++┊  ┊39┊      ]
++┊  ┊40┊    };
++┊  ┊41┊  }
++┊  ┊42┊
++┊  ┊43┊  return isAvailable;
++┊  ┊44┊}🚫↵
+```
+[}]: #
+
+Looks like a lot of code, but it does something powerful. The privacy query, we introduced above, was moved to a separate method called `buildQuery`. We'll need this function to avoid repetition with each different parties query.
+
+> Notice that we used `buildQuery.call(this)` calling syntax in order to make context of this method the same as in Meteor.publish and be able to use `this.userId` inside that method.
+
+Let's subscribe to the new publication in the `PartyDetails` to load one specific party:
+
+[{]: <helper> (diff_step 10.11)
+#### Step 10.11: Subscribe to the party publication
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -1,7 +1,8 @@
+ ┊1┊1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊2┊2┊import { ActivatedRoute } from '@angular/router';
+ ┊3┊3┊import { Subscription } from 'rxjs/Subscription';
+-┊4┊ ┊import { Meteor } from 'meteor/meteor'; 
++┊ ┊4┊import { Meteor } from 'meteor/meteor';
++┊ ┊5┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊5┊6┊
+ ┊6┊7┊import 'rxjs/add/operator/map';
+ ┊7┊8┊
+```
+```diff
+@@ -18,6 +19,7 @@
+ ┊18┊19┊  partyId: string;
+ ┊19┊20┊  paramsSub: Subscription;
+ ┊20┊21┊  party: Party;
++┊  ┊22┊  partySub: Subscription;
+ ┊21┊23┊
+ ┊22┊24┊  constructor(
+ ┊23┊25┊    private route: ActivatedRoute
+```
+```diff
+@@ -27,9 +29,15 @@
+ ┊27┊29┊    this.paramsSub = this.route.params
+ ┊28┊30┊      .map(params => params['partyId'])
+ ┊29┊31┊      .subscribe(partyId => {
+-┊30┊  ┊        this.partyId = partyId
++┊  ┊32┊        this.partyId = partyId;
+ ┊31┊33┊        
+-┊32┊  ┊        this.party = Parties.findOne(this.partyId);
++┊  ┊34┊        if (this.partySub) {
++┊  ┊35┊          this.partySub.unsubscribe();
++┊  ┊36┊        }
++┊  ┊37┊
++┊  ┊38┊        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
++┊  ┊39┊          this.party = Parties.findOne(this.partyId);
++┊  ┊40┊        });
+ ┊33┊41┊      });
+ ┊34┊42┊  }
+ ┊35┊43┊
+```
+```diff
+@@ -50,5 +58,6 @@
+ ┊50┊58┊
+ ┊51┊59┊  ngOnDestroy() {
+ ┊52┊60┊    this.paramsSub.unsubscribe();
++┊  ┊61┊    this.partySub.unsubscribe();
+ ┊53┊62┊  }
+ ┊54┊63┊}
+```
+[}]: #
+
+We used `MeteorObservable.subscribe` with the parameter we got from the Router params, and do the same logic of OnDestroy.
+
+> Note that in this case, we use the Subscription of the `MeteorObservable.subscribe`, in order to know when the subscription is ready to use, and then we used `findOne` to get the actual object from the Collection.
+
+Run the app and click on one of the party links. You'll see that the party details page loads with full data as before.
+
+# Search
+
+Now it's time for the parties search. Let's add a search input and button to the right of the "Add" button.
+We are going to extend the `PartiesList` component since this features is related to the parties list itself:
+
+[{]: <helper> (diff_step 10.12)
+#### Step 10.12: Add search input
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -1,5 +1,8 @@
+ ┊1┊1┊<div>
+-┊2┊ ┊  <parties-form></parties-form>
++┊ ┊2┊  <parties-form style="float: left"></parties-form>
++┊ ┊3┊  <input type="text" #searchtext placeholder="Search by Location">
++┊ ┊4┊  <button type="button" (click)="search(searchtext.value)">Search</button>
++┊ ┊5┊  
+ ┊3┊6┊  <login-buttons></login-buttons>
+ ┊4┊7┊
+ ┊5┊8┊  <ul>
+```
+[}]: #
+
+As you may have guessed, the next thing is to process the button click event:
+
+[{]: <helper> (diff_step 10.13)
+#### Step 10.13: Add search method
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -25,6 +25,10 @@
+ ┊25┊25┊    Parties.remove(party._id);
+ ┊26┊26┊  }
+ ┊27┊27┊
++┊  ┊28┊  search(value: string): void {
++┊  ┊29┊    this.parties = Parties.find(value ? { location: value } : {}).zone();
++┊  ┊30┊  }
++┊  ┊31┊
+ ┊28┊32┊  ngOnDestroy() {
+ ┊29┊33┊    this.partiesSub.unsubscribe();
+ ┊30┊34┊  }
+```
+[}]: #
+
+Notice that we don't re-subscribe in the `search` method because we've already loaded all parties available to
+the current user from the published parties, so we just query the loaded collection.
+
+# Understanding Publish-Subscribe
+
+It is very important to understand Meteor's Publish-Subscribe mechanism so you don't get confused and use it to filter things in the view!
+
+Meteor accumulates all the data from the different subscriptions of the same collection in the client, so adding a different subscription in a different view won't delete the data that is already in the client.
+
+Please, read more about Pub/Sub in Meteor [here](http://www.meteorpedia.com/read/Understanding_Meteor_Publish_and_Subscribe).
+
+# Summary
+
+In this step we've clearly seen how powerful Meteor and Angular 2 are and how they become even more
+powerful when used together. With rather few lines of code, we were able to add full privacy to Socially as well as
+search capabilities.
+
+Meanwhile, we've learned about:
+
+- the importance of removing `autopublish`;
+- the Publish-Subscribe mechanism in Meteor;
+- how to query particular data from the database via the server side.
+
+In the [next step](/tutorials/angular2/deploying-your-app), we'll look at how quick and easy it is to deploy your Meteor app.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step9.md) | [Next Step >](step11.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 115d973821dcc26f1eb777f8c2a8eb47a10d49a7 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:51 -0200
Subject: [PATCH 088/304] Step 11: Deploying your app

---
 manuals/templates/step11.md | 31 +++++++++++++++++++++++++++++++
 manuals/views/step11.md     | 43 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 74 insertions(+)
 create mode 100644 manuals/templates/step11.md
 create mode 100644 manuals/views/step11.md

diff --git a/manuals/templates/step11.md b/manuals/templates/step11.md
new file mode 100644
index 0000000..8013cd4
--- /dev/null
+++ b/manuals/templates/step11.md
@@ -0,0 +1,31 @@
+Now that we have a working app, we can go public!
+
+One way to operate your app with confidence is to use Galaxy, the service built by Meteor Development Group specifically to run Meteor apps.
+
+In order to deploy to Galaxy, you’ll need to sign up for an account [here](https://www.meteor.com/galaxy/signup), and separately provision a MongoDB database later.
+
+Simply type in the command line of your app directory
+(replace `your-app` with your own name):
+
+    DEPLOY_HOSTNAME=galaxy.meteor.com meteor deploy your-app.com
+
+In order for Galaxy to work with your custom domain (your-app.com in this case), you need to [set up your DNS to point at Galaxy](https://galaxy.meteor.com/help/configuring-dns). Once you’ve done this, you should be able to reach your site from a browser.
+
+For full Galaxy deployment tutorial, please follow [here](http://guide.meteor.com/deployment.html#deployment-options).
+
+Now try to play around with the deployed app on different devices.
+This might be in a browser on your mobile phone, a laptop or a desktop computer.
+
+Add, remove and change some parties and you will see that all opened versions of the app update
+almost simultaneously on different devices.
+
+UI updates of a Meteor app are fast, user-friendly and reliable,
+thanks to WebSockets, latency compensation and different complex concepts realized in Meteor.
+
+# Summary
+
+Congratulations, you've made a working app that you can now use with your friends!
+
+You can download the source code of the app up to this point [here](https://github.com/Urigo/meteor-angular2.0-socially/archive/step_09.zip).
+
+In the next step, we'll take a detour to see that while we were building a web app, we've also created a pretty nice mobile app along the way.
diff --git a/manuals/views/step11.md b/manuals/views/step11.md
new file mode 100644
index 0000000..37d979b
--- /dev/null
+++ b/manuals/views/step11.md
@@ -0,0 +1,43 @@
+[{]: <region> (header)
+# Step 11: Deploying your app
+[}]: #
+[{]: <region> (body)
+Now that we have a working app, we can go public!
+
+One way to operate your app with confidence is to use Galaxy, the service built by Meteor Development Group specifically to run Meteor apps.
+
+In order to deploy to Galaxy, you’ll need to sign up for an account [here](https://www.meteor.com/galaxy/signup), and separately provision a MongoDB database later.
+
+Simply type in the command line of your app directory
+(replace `your-app` with your own name):
+
+    DEPLOY_HOSTNAME=galaxy.meteor.com meteor deploy your-app.com
+
+In order for Galaxy to work with your custom domain (your-app.com in this case), you need to [set up your DNS to point at Galaxy](https://galaxy.meteor.com/help/configuring-dns). Once you’ve done this, you should be able to reach your site from a browser.
+
+For full Galaxy deployment tutorial, please follow [here](http://guide.meteor.com/deployment.html#deployment-options).
+
+Now try to play around with the deployed app on different devices.
+This might be in a browser on your mobile phone, a laptop or a desktop computer.
+
+Add, remove and change some parties and you will see that all opened versions of the app update
+almost simultaneously on different devices.
+
+UI updates of a Meteor app are fast, user-friendly and reliable,
+thanks to WebSockets, latency compensation and different complex concepts realized in Meteor.
+
+# Summary
+
+Congratulations, you've made a working app that you can now use with your friends!
+
+You can download the source code of the app up to this point [here](https://github.com/Urigo/meteor-angular2.0-socially/archive/step_09.zip).
+
+In the next step, we'll take a detour to see that while we were building a web app, we've also created a pretty nice mobile app along the way.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step10.md) | [Next Step >](step12.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 17d898c6ad0240480b4bde4ccb5edcd8819b2cb4 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:51 -0200
Subject: [PATCH 089/304] Step 12: Running your app on Android or iOS with
 PhoneGap

---
 manuals/templates/step12.md | 82 +++++++++++++++++++++++++++++++++++++++
 manuals/views/step12.md     | 93 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 175 insertions(+)
 create mode 100644 manuals/templates/step12.md
 create mode 100644 manuals/views/step12.md

diff --git a/manuals/templates/step12.md b/manuals/templates/step12.md
new file mode 100644
index 0000000..c8135f1
--- /dev/null
+++ b/manuals/templates/step12.md
@@ -0,0 +1,82 @@
+So far, we've been building our app and testing only in a web browser,
+however Meteor has been designed to work across different platforms — your socially website can become an iOS or Android app with just a few commands.
+
+## Cordova
+
+Meteor uses an open-sourced framework called [Cordova](https://cordova.apache.org) to build and run Web apps on iOS or Android mobile devices.
+
+Cordova is integrated with Meteor's toolkit, which means you won't need anything more than the `meteor` command in the terminal to build mobile Web apps. You will, however, require two necessary dependencies to install:
+
+- an Android emulator for Android
+- XCode for iOS.
+
+In addition, Meteor has an especially useful feature for mobile apps: [hot code pushes](http://info.meteor.com/blog/meteor-hot-code-push).
+After you deploy your app to the stores, once you update your code, all your apps are instantly updated; no need to go through the app/play store update process!
+
+You can find more information about Cordova integration with Meteor [here](https://github.com/meteor/meteor/wiki/Meteor-Cordova-Phonegap-integration).
+
+### Running on Android Emulator
+
+Follow this [instruction](https://github.com/meteor/meteor/wiki/Mobile-Development-Install:-Android-on-Mac) to install all of the necessary tools to build an Android app from your project.
+
+When you are done installing everything, type:
+
+    meteor add-platform android
+
+After you agree to the license terms, type:
+
+    meteor run android
+
+After some initialization, you will see an Android emulator pop up, running your app inside of a native Android wrapper. The emulator can be somewhat slow, [Geny Motion](https://www.genymotion.com/) is a popular Android emulator alternative. However, if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android Device
+
+First, complete all of the steps above to set up the Android tools on your system.
+Then, make sure you have USB Debugging enabled on your phone and the phone is plugged into your computer with a USB cable. You must also quit the Android emulator before running your app on a device.
+
+Run the following command:
+
+    meteor run android-device
+
+The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
+
+    meteor run android-device --mobile-server my_app_name.meteor.com
+
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Follow this [instruction](https://github.com/meteor/meteor/wiki/Mobile-Development-Install:-iOS-on-Mac) to run you through the setup necessary to build an iOS app from your project.
+
+When you're done, type:
+
+    meteor add-platform ios
+    meteor run ios
+
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an iPhone or iPad (Mac Only)
+
+> Requires an Apple developer account
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+    meteor run ios-device
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
+If you want to point your app to the previously deployed server, run:
+
+    meteor run ios-device --mobile-server my_app_name.meteor.com
+
+### Submit your Android app to the Play Store:
+
+[https://github.com/meteor/meteor/wiki/How-to-submit-your-Android-app-to-Play-Store](https://github.com/meteor/meteor/wiki/How-to-submit-your-Android-app-to-Play-Store)
+
+### Submit your iOS app to the App Store:
+
+[https://github.com/meteor/meteor/wiki/How-to-submit-your-iOS-app-to-App-Store](https://github.com/meteor/meteor/wiki/How-to-submit-your-iOS-app-to-App-Store)
+
+# Summary
+
+Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features. In the [next step](/tutorials/angular2/search-sort-pagination-and-reactive-vars) we'll look at adding party sorting and pagination.
\ No newline at end of file
diff --git a/manuals/views/step12.md b/manuals/views/step12.md
new file mode 100644
index 0000000..958b360
--- /dev/null
+++ b/manuals/views/step12.md
@@ -0,0 +1,93 @@
+[{]: <region> (header)
+# Step 12: Running your app on Android or iOS with PhoneGap
+[}]: #
+[{]: <region> (body)
+So far, we've been building our app and testing only in a web browser,
+however Meteor has been designed to work across different platforms — your socially website can become an iOS or Android app with just a few commands.
+
+## Cordova
+
+Meteor uses an open-sourced framework called [Cordova](https://cordova.apache.org) to build and run Web apps on iOS or Android mobile devices.
+
+Cordova is integrated with Meteor's toolkit, which means you won't need anything more than the `meteor` command in the terminal to build mobile Web apps. You will, however, require two necessary dependencies to install:
+
+- an Android emulator for Android
+- XCode for iOS.
+
+In addition, Meteor has an especially useful feature for mobile apps: [hot code pushes](http://info.meteor.com/blog/meteor-hot-code-push).
+After you deploy your app to the stores, once you update your code, all your apps are instantly updated; no need to go through the app/play store update process!
+
+You can find more information about Cordova integration with Meteor [here](https://github.com/meteor/meteor/wiki/Meteor-Cordova-Phonegap-integration).
+
+### Running on Android Emulator
+
+Follow this [instruction](https://github.com/meteor/meteor/wiki/Mobile-Development-Install:-Android-on-Mac) to install all of the necessary tools to build an Android app from your project.
+
+When you are done installing everything, type:
+
+    meteor add-platform android
+
+After you agree to the license terms, type:
+
+    meteor run android
+
+After some initialization, you will see an Android emulator pop up, running your app inside of a native Android wrapper. The emulator can be somewhat slow, [Geny Motion](https://www.genymotion.com/) is a popular Android emulator alternative. However, if you want to see what it's really like using your app, you should run it on an actual device.
+
+### Running on an Android Device
+
+First, complete all of the steps above to set up the Android tools on your system.
+Then, make sure you have USB Debugging enabled on your phone and the phone is plugged into your computer with a USB cable. You must also quit the Android emulator before running your app on a device.
+
+Run the following command:
+
+    meteor run android-device
+
+The app will be built and installed on your device. If you want to point your app to the server you deployed in the previous step, run:
+
+    meteor run android-device --mobile-server my_app_name.meteor.com
+
+### Running on an iOS simulator (Mac Only)
+
+If you have a Mac, you can run your app inside the iOS simulator.
+
+Follow this [instruction](https://github.com/meteor/meteor/wiki/Mobile-Development-Install:-iOS-on-Mac) to run you through the setup necessary to build an iOS app from your project.
+
+When you're done, type:
+
+    meteor add-platform ios
+    meteor run ios
+
+You will see the iOS simulator pop up with your app running inside.
+
+### Running on an iPhone or iPad (Mac Only)
+
+> Requires an Apple developer account
+
+If you have an Apple developer account, you can also run your app on an iOS device. Run the following command:
+
+    meteor run ios-device
+
+This will open Xcode with a project for your iOS app. You can use Xcode to then launch the app on any device or simulator that Xcode supports.
+
+If you want to point your app to the previously deployed server, run:
+
+    meteor run ios-device --mobile-server my_app_name.meteor.com
+
+### Submit your Android app to the Play Store:
+
+[https://github.com/meteor/meteor/wiki/How-to-submit-your-Android-app-to-Play-Store](https://github.com/meteor/meteor/wiki/How-to-submit-your-Android-app-to-Play-Store)
+
+### Submit your iOS app to the App Store:
+
+[https://github.com/meteor/meteor/wiki/How-to-submit-your-iOS-app-to-App-Store](https://github.com/meteor/meteor/wiki/How-to-submit-your-iOS-app-to-App-Store)
+
+# Summary
+
+Now that we have seen how easy it is to deploy our app and run it on mobile, let's get to adding some more features. In the [next step](/tutorials/angular2/search-sort-pagination-and-reactive-vars) we'll look at adding party sorting and pagination.
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step11.md) | [Next Step >](step13.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 44537e1e883037bf2dd29d14ad4e5f59cb68b560 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Thu, 22 Sep 2016 14:37:40 +0200
Subject: [PATCH 090/304] Step 13.1: Add options to the parties publication

---
 server/imports/publications/parties.ts | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 5314c57..1e5d5df 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -1,8 +1,12 @@
 import { Meteor } from 'meteor/meteor';
 import { Parties } from '../../../both/collections/parties.collection';
 
-Meteor.publish('parties', function() {
-  return Parties.find(buildQuery.call(this));
+interface Options {
+  [key: string]: any;
+}
+
+Meteor.publish('parties', function(options: Options) {
+  return Parties.find(buildQuery.call(this), options);
 });
 
 Meteor.publish('party', function(partyId: string) {
-- 
2.10.2


From b726ccc4778fdcba4c946c870b5cd4478149ebd3 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:24:11 +0200
Subject: [PATCH 091/304] Step 13.2: Define options and use it in the
 subscription

---
 .../imports/app/parties/parties-list.component.ts  | 23 ++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index b80de38..c9be502 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -8,6 +8,15 @@ import { Party } from '../../../../both/models/party.model';
 
 import template from './parties-list.component.html';
 
+interface Pagination {
+  limit: number;
+  skip: number;
+}
+
+interface Options extends Pagination {
+  [key: string]: any
+}
+
 @Component({
   selector: 'parties-list',
   template
@@ -15,10 +24,20 @@ import template from './parties-list.component.html';
 export class PartiesListComponent implements OnInit, OnDestroy {
   parties: Observable<Party[]>;
   partiesSub: Subscription;
+  pageSize: number = 10;
+  curPage: number = 1;
+  nameOrder: number = 1;
 
   ngOnInit() {
-    this.parties = Parties.find({}).zone();
-    this.partiesSub = MeteorObservable.subscribe('parties').subscribe();
+    const options: Options = {
+      limit: this.pageSize,
+      skip: (this.curPage - 1) * this.pageSize,
+      sort: { name: this.nameOrder }
+    };
+
+    this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
+      this.parties = Parties.find({}).zone();
+    });
   }
 
   removeParty(party: Party): void {
-- 
2.10.2


From 20768d7a1bcb0ea5255cb4221c3aed09adfed6e6 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:27:05 +0200
Subject: [PATCH 092/304] Step 13.3: Add sorting by party name to PartiesList

---
 client/imports/app/parties/parties-list.component.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index c9be502..4930912 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -36,7 +36,11 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     };
 
     this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
-      this.parties = Parties.find({}).zone();
+      this.parties = Parties.find({}, {
+        sort: {
+          name: this.nameOrder
+        }
+      }).zone();
     });
   }
 
-- 
2.10.2


From 2b4e2bcaa9ea83b19763ae995ad4556294419b11 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:29:02 +0200
Subject: [PATCH 093/304] Step 13.4: Turn primitive values into Subjects

---
 client/imports/app/parties/parties-list.component.ts | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 4930912..30a8be4 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -1,5 +1,6 @@
 import { Component, OnInit, OnDestroy } from '@angular/core';
 import { Observable } from 'rxjs/Observable';
+import { Subject } from 'rxjs/Subject';
 import { Subscription } from 'rxjs/Subscription';
 import { MeteorObservable } from 'meteor-rxjs';
 
@@ -24,9 +25,9 @@ interface Options extends Pagination {
 export class PartiesListComponent implements OnInit, OnDestroy {
   parties: Observable<Party[]>;
   partiesSub: Subscription;
-  pageSize: number = 10;
-  curPage: number = 1;
-  nameOrder: number = 1;
+  pageSize: Subject<number> = new Subject<number>();
+  curPage: Subject<number> = new Subject<number>();
+  nameOrder: Subject<number> = new Subject<number>();
 
   ngOnInit() {
     const options: Options = {
@@ -42,6 +43,10 @@ export class PartiesListComponent implements OnInit, OnDestroy {
         }
       }).zone();
     });
+
+    this.pageSize.next(10);
+    this.curPage.next(1);
+    this.nameOrder.next(1);
   }
 
   removeParty(party: Party): void {
-- 
2.10.2


From aff3ca700fe6178847e06cf6cba8fe066e3ed637 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:46:28 +0200
Subject: [PATCH 094/304] Step 13.5: Re-subscribe on current page changes

---
 .../imports/app/parties/parties-list.component.ts  | 38 +++++++++++++++-------
 1 file changed, 26 insertions(+), 12 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 30a8be4..0960bbb 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -4,6 +4,8 @@ import { Subject } from 'rxjs/Subject';
 import { Subscription } from 'rxjs/Subscription';
 import { MeteorObservable } from 'meteor-rxjs';
 
+import 'rxjs/add/operator/combineLatest';
+
 import { Parties } from '../../../../both/collections/parties.collection';
 import { Party } from '../../../../both/models/party.model';
 
@@ -28,20 +30,31 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   pageSize: Subject<number> = new Subject<number>();
   curPage: Subject<number> = new Subject<number>();
   nameOrder: Subject<number> = new Subject<number>();
+  optionsSub: Subscription;
 
   ngOnInit() {
-    const options: Options = {
-      limit: this.pageSize,
-      skip: (this.curPage - 1) * this.pageSize,
-      sort: { name: this.nameOrder }
-    };
-
-    this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
-      this.parties = Parties.find({}, {
-        sort: {
-          name: this.nameOrder
-        }
-      }).zone();
+    this.optionsSub = Observable.combineLatest(
+      this.pageSize,
+      this.curPage,
+      this.nameOrder
+    ).subscribe(([pageSize, curPage, nameOrder]) => {
+      const options: Options = {
+        limit: pageSize as number,
+        skip: ((curPage as number) - 1) * (pageSize as number),
+        sort: { name: nameOrder as number }
+      };
+
+      if (this.partiesSub) {
+        this.partiesSub.unsubscribe();
+      }
+      
+      this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
+        this.parties = Parties.find({}, {
+          sort: {
+            name: nameOrder
+          }
+        }).zone();
+      });
     });
 
     this.pageSize.next(10);
@@ -59,5 +72,6 @@ export class PartiesListComponent implements OnInit, OnDestroy {
 
   ngOnDestroy() {
     this.partiesSub.unsubscribe();
+    this.optionsSub.unsubscribe();
   }
 }
-- 
2.10.2


From 4f01cd14dcfe3ec3180ef97fb819f26da97ef025 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:51:56 +0200
Subject: [PATCH 095/304] Step 13.6: Install ng2-pagination

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index f5c112e..cb4a116 100644
--- a/package.json
+++ b/package.json
@@ -20,6 +20,7 @@
     "angular2-meteor-tests-polyfills": "0.0.2",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
+    "ng2-pagination": "0.5.1",
     "reflect-metadata": "0.1.8",
     "rxjs": "5.0.0-beta.12",
     "zone.js": "0.6.26",
-- 
2.10.2


From 59f0be2c186224bc7ce7e6f998ad99a509e1e361 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:53:03 +0200
Subject: [PATCH 096/304] Step 13.7: Import Ng2PaginationModule

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 139b880..65145a8 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -3,6 +3,7 @@ import { BrowserModule } from '@angular/platform-browser';
 import { FormsModule, ReactiveFormsModule } from '@angular/forms';
 import { RouterModule } from '@angular/router';
 import { AccountsModule } from 'angular2-meteor-accounts-ui';
+import { Ng2PaginationModule } from 'ng2-pagination';
 
 import { AppComponent } from './app.component';
 import { routes, ROUTES_PROVIDERS } from './app.routes';
@@ -14,7 +15,8 @@ import { PARTIES_DECLARATIONS } from './parties';
     FormsModule,
     ReactiveFormsModule,
     RouterModule.forRoot(routes),
-    AccountsModule
+    AccountsModule,
+    Ng2PaginationModule
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From 0e34d7b08b90584c35be60c350b78293588a03f7 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:54:54 +0200
Subject: [PATCH 097/304] Step 13.8: Register configuration of pagination

---
 client/imports/app/parties/parties-list.component.ts | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 0960bbb..aacb366 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -3,6 +3,7 @@ import { Observable } from 'rxjs/Observable';
 import { Subject } from 'rxjs/Subject';
 import { Subscription } from 'rxjs/Subscription';
 import { MeteorObservable } from 'meteor-rxjs';
+import { PaginationService } from 'ng2-pagination';
 
 import 'rxjs/add/operator/combineLatest';
 
@@ -32,6 +33,10 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   nameOrder: Subject<number> = new Subject<number>();
   optionsSub: Subscription;
 
+  constructor(
+    private paginationService: PaginationService
+  ) {}
+
   ngOnInit() {
     this.optionsSub = Observable.combineLatest(
       this.pageSize,
@@ -57,6 +62,13 @@ export class PartiesListComponent implements OnInit, OnDestroy {
       });
     });
 
+    this.paginationService.register({
+      id: this.paginationService.defaultId,
+      itemsPerPage: 10,
+      currentPage: 1,
+      totalItems: 30,
+    });
+
     this.pageSize.next(10);
     this.curPage.next(1);
     this.nameOrder.next(1);
-- 
2.10.2


From 073bb7e8732515752370a71aa1c2ed79cb6ee831 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:56:31 +0200
Subject: [PATCH 098/304] Step 13.9: Update current page when options change

---
 client/imports/app/parties/parties-list.component.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index aacb366..bc1fa19 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -49,6 +49,8 @@ export class PartiesListComponent implements OnInit, OnDestroy {
         sort: { name: nameOrder as number }
       };
 
+      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);
+
       if (this.partiesSub) {
         this.partiesSub.unsubscribe();
       }
-- 
2.10.2


From 648ab0aedc24e0068e45a33816ce2c6c6e110ad2 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:58:16 +0200
Subject: [PATCH 099/304] Step 13.10: Add pagination to the list

---
 client/imports/app/parties/parties-list.component.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index bd2f99c..d72d6f5 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -13,4 +13,6 @@
       <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
+
+  <pagination-controls></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.10.2


From a0e93fc05516d223707538ac04110f85d1edfb15 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:58:41 +0200
Subject: [PATCH 100/304] Step 13.11: Add pageChange event binding

---
 client/imports/app/parties/parties-list.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index d72d6f5..4e998d4 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -14,5 +14,5 @@
     </li>
   </ul>
 
-  <pagination-controls></pagination-controls>
+  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.10.2


From bf247182a7ea085f60c13fd4e72df7b87edfa618 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 12:59:27 +0200
Subject: [PATCH 101/304] Step 13.12: Add event handler for pageChange

---
 client/imports/app/parties/parties-list.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index bc1fa19..d360f15 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -84,6 +84,10 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     this.parties = Parties.find(value ? { location: value } : {}).zone();
   }
 
+  onPageChanged(page: number): void {
+    this.curPage.next(page);
+  }
+
   ngOnDestroy() {
     this.partiesSub.unsubscribe();
     this.optionsSub.unsubscribe();
-- 
2.10.2


From 130503510445e07ff7fe6c04a820c25da9a39545 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 13:01:25 +0200
Subject: [PATCH 102/304] Step 13.13: Add tmeasday:publish-counts

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index cc77370..97bd58e 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -22,3 +22,4 @@ hwillson:stub-collections
 dispatch:mocha-phantomjs
 shell-server@0.2.1
 accounts-password
+tmeasday:publish-counts
diff --git a/.meteor/versions b/.meteor/versions
index c759c6e..a60f9df 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -84,6 +84,7 @@ standard-minifier-css@1.3.2
 standard-minifier-js@1.2.1
 templating@1.1.14
 templating-tools@1.0.5
+tmeasday:publish-counts@0.7.3
 tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.1
 ui@1.0.12
-- 
2.10.2


From f510b104ae1836004cf37f1c96491890d8909cc0 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 13:15:05 +0200
Subject: [PATCH 103/304] Step 13.14: Publish total number of parties

---
 server/imports/publications/parties.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 1e5d5df..f772e48 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -1,4 +1,6 @@
 import { Meteor } from 'meteor/meteor';
+import { Counts } from 'meteor/tmeasday:publish-counts';
+
 import { Parties } from '../../../both/collections/parties.collection';
 
 interface Options {
@@ -6,6 +8,8 @@ interface Options {
 }
 
 Meteor.publish('parties', function(options: Options) {
+  Counts.publish(this, 'numberOfParties', Parties.collection.find(buildQuery.call(this)), { noReady: true });
+
   return Parties.find(buildQuery.call(this), options);
 });
 
-- 
2.10.2


From 1c8f1408ec29befc699af5f67091a53bfd846e22 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 13:15:19 +0200
Subject: [PATCH 104/304] Step 13.15: Add declaration of counts package

---
 typings.d.ts | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/typings.d.ts b/typings.d.ts
index 6982da6..88c4daf 100644
--- a/typings.d.ts
+++ b/typings.d.ts
@@ -25,4 +25,15 @@ declare module '*.css' {
 declare module '*.sass' {
   const style: string;
   export default style;
-}
\ No newline at end of file
+}
+
+declare module 'meteor/tmeasday:publish-counts' {
+  import { Mongo } from 'meteor/mongo';
+
+  interface CountsObject {
+    get(publicationName: string): number;
+    publish(context: any, publicationName: string, cursor: Mongo.Cursor, options: any): number;
+  }
+
+  export const Counts: CountsObject;
+}
-- 
2.10.2


From 048194c9af89583791bf0a13d009eac5bb357a76 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 13:32:27 +0200
Subject: [PATCH 105/304] Step 13.16: Handle reactive updates of the parties
 total number

---
 client/imports/app/parties/parties-list.component.ts | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index d360f15..b725d0c 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -4,6 +4,7 @@ import { Subject } from 'rxjs/Subject';
 import { Subscription } from 'rxjs/Subscription';
 import { MeteorObservable } from 'meteor-rxjs';
 import { PaginationService } from 'ng2-pagination';
+import { Counts } from 'meteor/tmeasday:publish-counts';
 
 import 'rxjs/add/operator/combineLatest';
 
@@ -32,6 +33,8 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   curPage: Subject<number> = new Subject<number>();
   nameOrder: Subject<number> = new Subject<number>();
   optionsSub: Subscription;
+  partiesSize: number = 0;
+  autorunSub: Subscription;
 
   constructor(
     private paginationService: PaginationService
@@ -68,12 +71,17 @@ export class PartiesListComponent implements OnInit, OnDestroy {
       id: this.paginationService.defaultId,
       itemsPerPage: 10,
       currentPage: 1,
-      totalItems: 30,
+      totalItems: this.partiesSize
     });
 
     this.pageSize.next(10);
     this.curPage.next(1);
     this.nameOrder.next(1);
+
+    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
+      this.partiesSize = Counts.get('numberOfParties');
+      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
+    });
   }
 
   removeParty(party: Party): void {
@@ -91,5 +99,6 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   ngOnDestroy() {
     this.partiesSub.unsubscribe();
     this.optionsSub.unsubscribe();
+    this.autorunSub.unsubscribe();
   }
 }
-- 
2.10.2


From cbb277e9da6f45f843316a2cbd5dcb93f8200e44 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 14:07:04 +0200
Subject: [PATCH 106/304] Step 13.17: Add the sort order dropdown

---
 client/imports/app/parties/parties-list.component.html | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 4e998d4..f1083e3 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -5,6 +5,15 @@
   
   <login-buttons></login-buttons>
 
+  <h1>Parties:</h1>
+
+  <div>
+    <select #sort (change)="changeSortOrder(sort.value)">
+      <option value="1" selected>Ascending</option>
+      <option value="-1">Descending</option>
+    </select>
+  </div>
+
   <ul>
     <li *ngFor="let party of parties | async">
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-- 
2.10.2


From 252bb11408c95d2a43d76decc0368d738d34c824 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 14:18:38 +0200
Subject: [PATCH 107/304] Step 13.18: Re-subscribe when sort order changes

---
 client/imports/app/parties/parties-list.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index b725d0c..1a3201c 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -96,6 +96,10 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     this.curPage.next(page);
   }
 
+  changeSortOrder(nameOrder: string): void {
+    this.nameOrder.next(parseInt(nameOrder));
+  }
+
   ngOnDestroy() {
     this.partiesSub.unsubscribe();
     this.optionsSub.unsubscribe();
-- 
2.10.2


From 414832ac08bb13501c41f17f76085f2bfc91c512 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 14:30:35 +0200
Subject: [PATCH 108/304] Step 13.19: Add search by the party location using
 regex

---
 server/imports/publications/parties.ts | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index f772e48..34c9470 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -7,10 +7,12 @@ interface Options {
   [key: string]: any;
 }
 
-Meteor.publish('parties', function(options: Options) {
-  Counts.publish(this, 'numberOfParties', Parties.collection.find(buildQuery.call(this)), { noReady: true });
+Meteor.publish('parties', function(options: Options, location?: string) {
+  const selector = buildQuery.call(this, null, location);
 
-  return Parties.find(buildQuery.call(this), options);
+  Counts.publish(this, 'numberOfParties', Parties.collection.find(selector), { noReady: true });
+
+  return Parties.find(selector, options);
 });
 
 Meteor.publish('party', function(partyId: string) {
@@ -18,7 +20,7 @@ Meteor.publish('party', function(partyId: string) {
 });
 
 
-function buildQuery(partyId?: string): Object {
+function buildQuery(partyId?: string, location?: string): Object {
   const isAvailable = {
     $or: [{
       // party is public
@@ -48,5 +50,13 @@ function buildQuery(partyId?: string): Object {
     };
   }
 
-  return isAvailable;
+  const searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };
+
+  return {
+    $and: [{
+        location: searchRegEx
+      },
+      isAvailable
+    ]
+  };
 }
\ No newline at end of file
-- 
2.10.2


From 5aa89cfcf958394697d6345bc506fa62e3a104db Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 14:33:46 +0200
Subject: [PATCH 109/304] Step 13.20: Add reactive search by location

---
 client/imports/app/parties/parties-list.component.ts | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 1a3201c..f94da32 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -35,6 +35,7 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   optionsSub: Subscription;
   partiesSize: number = 0;
   autorunSub: Subscription;
+  location: Subject<string> = new Subject<string>();
 
   constructor(
     private paginationService: PaginationService
@@ -44,8 +45,9 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     this.optionsSub = Observable.combineLatest(
       this.pageSize,
       this.curPage,
-      this.nameOrder
-    ).subscribe(([pageSize, curPage, nameOrder]) => {
+      this.nameOrder,
+      this.location
+    ).subscribe(([pageSize, curPage, nameOrder, location]) => {
       const options: Options = {
         limit: pageSize as number,
         skip: ((curPage as number) - 1) * (pageSize as number),
@@ -58,7 +60,7 @@ export class PartiesListComponent implements OnInit, OnDestroy {
         this.partiesSub.unsubscribe();
       }
       
-      this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
+      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {
         this.parties = Parties.find({}, {
           sort: {
             name: nameOrder
@@ -77,6 +79,7 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     this.pageSize.next(10);
     this.curPage.next(1);
     this.nameOrder.next(1);
+    this.location.next('');
 
     this.autorunSub = MeteorObservable.autorun().subscribe(() => {
       this.partiesSize = Counts.get('numberOfParties');
@@ -89,7 +92,8 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   }
 
   search(value: string): void {
-    this.parties = Parties.find(value ? { location: value } : {}).zone();
+    this.curPage.next(1);
+    this.location.next(value);
   }
 
   onPageChanged(page: number): void {
-- 
2.10.2


From 17e5d10558ecca36da3dcd1a65466dc3796c97a6 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:51 -0200
Subject: [PATCH 110/304] Step 13: Search, sort, pagination and reactive vars

---
 manuals/templates/step13.md | 295 +++++++++++++++
 manuals/views/step13.md     | 882 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1177 insertions(+)
 create mode 100644 manuals/templates/step13.md
 create mode 100644 manuals/views/step13.md

diff --git a/manuals/templates/step13.md b/manuals/templates/step13.md
new file mode 100644
index 0000000..d6b0d3b
--- /dev/null
+++ b/manuals/templates/step13.md
@@ -0,0 +1,295 @@
+In this step we are going to add:
+
+- parties list pagination
+- sorting by party name
+- lastly, we will move our previously implemented parties location search to the server side.
+
+Pagination simply means delivering and showing parties to the client on a page-by-page basis,
+where each page has a predefined number of items. Pagination reduces the number of documents to be transferred at one time thus decreasing load time. It also increases the usability of the user interface if there are too many documents in the storage.
+
+Besides client-side logic, it usually includes querying a specific page of parties on
+the server side to deliver up to the client as well.
+
+# Pagination
+
+First off, we'll add pagination on the server side.
+
+Thanks to the simplicity of the Mongo API combined with Meteor's power, we only need to execute `Parties.find` on the server with some additional parameters. Keep in mind, with Meteor's isomorphic environment, we'll query `Parties` on the client with the same parameters as on the server.
+
+### Mongo Collection query options
+
+`Collection.find` has a convenient second parameter called `options`,
+which takes an object for configuring collection querying.
+To implement pagination we'll need to provide _sort_, _limit_, and _skip_ fields as `options`.
+
+While  _limit_ and _skip_ set boundaries on the result set, _sort_, at the same time, may not.
+We'll use _sort_ to guarantee consistency of our pagination across page changes and page loads,
+since Mongo doesn't guarantee any order of documents if they are queried and not sorted.
+You can find more information about the _find_ method in Mongo [here](http://docs.meteor.com/#/full/find).
+
+Now, let's go to the `parties` subscription in the `server/imports/publications/parties.ts` file,
+add the `options` parameter to the subscription method, and then pass it to `Parties.find`:
+
+{{{diff_step 13.1}}}
+
+On the client side, we are going to define three additional variables in the `PartiesList` component which our pagination will depend on:
+page size, current page number and name sort order.
+Secondly, we'll create a special _options_ object made up of these variables and pass it to the parties subscription:
+
+{{{diff_step 13.2}}}
+
+As was said before, we also need to query `Parties` on the client side with same parameters and options as we used on the server, i.e., parameters and options we pass to the server side.
+
+In reality, though, we don't need _skip_ and _limit_ options in this case, since the subscription result of the parties collection will always have a maximum page size of documents on the client.
+
+So, we will only add sorting:
+
+{{{diff_step 13.3}}}
+
+### Reactive Changes
+
+The idea behind Reactive variables and changes - is to update our Meteor subscription according to the user interaction - for example: if the user changes the sort order - we want to drop the old Meteor subscription and replace it with a new one that matches the new parameters.
+
+Because we are using RxJS, we can create variables that are `Observable`s - which means we can register to the changes notification - and act as required - in our case - changed the Meteor subscription.
+
+In order to do so, we will use RxJS `Subject` - which is an extension for `Observable`.
+
+A `Subject` is a sort of bridge or proxy that is available in some implementations of RxJS that acts both as an observer and as an Observable.
+
+Which means we can both register to the updates notifications and trigger the notification!
+
+In our case - when the user changes the parameters of the Meteor subscription, we need to trigger the notification.
+
+So let's do it. We will replace the regular variables with `Subject`s, and in order to trigger the notification in the first time, we will execute `next()` for the `Subject`s:
+
+{{{diff_step 13.4}}}
+
+Now we need to register to those changes notifications.
+
+Because we need to register to multiple notifications (page size, current page, sort), we need to use a special RxJS Operator called `combineLatest` - which combines multiple `Observable`s into one, and trigger a notification when one of them changes!
+
+So let's use it and update the subscription:
+
+{{{diff_step 13.5}}}
+
+> Notice that we also removes the Subscription and use `unsubscribe` because we want to drop the old subscription each time it changes.
+
+# Pagination UI
+
+As this paragraph name suggests, the next logical thing to do would be to implement a
+pagination UI, which consists of, at least, a list of page links at the bottom of every page,
+so that the user can switch pages by clicking on these links.
+
+Creating a pagination component is not a trivial task and not one of the primary goals of this tutorial,
+so we are going to make use of an already existing package with Angular 2 pagination components.
+Run the following line to add this package:
+
+    $ meteor npm install ng2-pagination --save
+
+> This package's pagination mark-up follows the structure of
+> the [Bootstrap pagination component](http://getbootstrap.com/components/#pagination),
+> so you can change its look simply by using proper CSS styles.
+> It's worth noting, though, that this package has been created
+> with the only this tutorial in mind.
+> It misses a lot of features that would be quite useful
+> in the real world, for example, custom templates.
+
+Ng2-Pagination consists of three main parts:
+
+- pagination controls that render a list of links
+- a pagination service to manipulate logic programmatically
+- a pagination pipe component, which can be added in any component template, with the main goal to
+transform a list of items according to the current state of the pagination service and show current page of items on UI
+
+First, let's import the pagination module into our `NgModule`:
+
+{{{diff_step 13.7}}}
+
+Because of pagination pipe of ng2-pagination supports only arrays we'll use the `PaginationService`.
+Let's define the configuration:
+
+{{{diff_step 13.8}}}
+
+> `id` - this is the identifier of specific pagination, we use the default.
+
+We need to notify the pagination that the current page has been changed, so let's add it to the method where we handle the reactive changes:
+
+{{{diff_step 13.9}}}
+
+Now, add the pagination controls to the `parties-list.component.html` template:
+
+{{{diff_step 13.10}}}
+
+In the configuration, we provided the current page number, the page size and a new value of total items in the list to paginate.
+
+This total number of items are required to be set in our case, since we don't provide a
+regular array of elements but instead an `Observable`, the pagination service simply won't know how to calculate its size.
+
+We'll get back to this in the next paragraph where we'll be setting parties total size reactively.
+
+For now, let's just set it to be 30. We'll see why this default value is needed shortly.
+
+### pageChange events
+
+The final part is to handle user clicks on the page links. The pagination controls component
+fires a special event when the user clicks on a page link, causing the current page to update.
+
+Let's handle this event in the template first and then add a method to the `PartiesList` component itself:
+
+{{{diff_step 13.11}}}
+
+As you can see, the pagination controls component fires the `pageChange` event, calling the `onPageChanged` method with
+a special event object that contains the new page number to set. Add the `onPageChanged` method:
+
+{{{diff_step 13.12}}}
+
+At this moment, we have almost everything in place. Let's check if everything is working.
+We are going to have to add a lot of parties, at least, a couple of pages.
+But, since we've chosen quite a large default page size (10), it would be tedious to add all parties manually.
+
+### Generating Mock Data
+
+In this example, we need to deal with multiple objects and in order to test it and get the best results - we need a lot of Parties objects.
+
+Thankfully, we have a helpful package called [_anti:fake_](https://atmospherejs.com/anti/fake), which will help us out with the generation of names, locations and other properties of new fake parties.
+
+    $ meteor add anti:fake
+
+So, with the following lines of code we are going to have 30 parties in total
+(given that we already have three):
+
+__`server/imports/fixtures/parties.ts`__:
+
+    ...
+
+    for (var i = 0; i < 27; i++) {
+      Parties.insert({
+        name: Fake.sentence(50),
+        location: Fake.sentence(10),
+        description: Fake.sentence(100),
+        public: true
+      });
+    }
+
+
+Fake is loaded in Meteor as a global, you may want to declare it for TypeScript.
+
+You can add it to the end of the `typings.d.ts` file:
+
+    declare var Fake: {
+        sentence(words: number): string;
+    }
+
+Now reset the database (`meteor reset`) and run the app. You should see a list of 10 parties shown initially and 3 pages links just at the bottom.
+
+Play around with the pagination: click on page links to go back and forth,
+then try to delete parties to check if the current page updates properly.
+
+
+# Getting the Total Number of Parties
+
+The pagination component needs to know how many pages it will create. As such, we need to know the total number of parties in storage and divide it by the number of items per page.
+
+At the same time, our parties collection will always have no more than necessary parties on the client side.
+This suggests that we have to add a new publication to publish only the current count of parties existing in storage.
+
+This task looks quite common and, thankfully, it's already been
+implemented. We can use the [tmeasday:publish-counts](https://github.com/percolatestudio/publish-counts) package.
+
+    $ meteor add tmeasday:publish-counts
+
+This package is an example for a package that does not provide it's own TypeScript declaration file, so we will have to manually create and add it to the `typings.d.ts` file according to the package API:
+
+{{{diff_step 13.15}}}
+
+This package exports a `Counts` object with all of the API methods we will need.
+
+> Notice that you'll see a TypeScript warning in the terminal
+> saying that "Counts" has no method you want to use, when you start using the API.
+> You can remove this warning by adding a [publish-counts type declaration file](https://github.com/correpw/meteor-publish-counts.d.ts/blob/master/Counts.d.ts) to your typings.
+
+Let's publish the total number of parties as follows:
+
+{{{diff_step 13.14}}}
+
+> Notice that we are passing `{ noReady: true }` in the last argument so
+> that the publication will be ready only after our main cursor is loaded, instead of waiting for Counts.
+
+We've just created the new _numberOfParties_ publication.
+Let's get it reactively on the client side using the `Counts` object, and, at the same time,
+introduce a new `partiesSize` property in the `PartiesList` component:
+
+{{{diff_step 13.16}}}
+
+We used `MeteorObservable.autorun` because we wan't to know when there are changes regarding the data that comes from Meteor - so now every change of data, we will calculate the total number of parties and save it in our Component, then we will set it in the `PaginationService`.
+
+Let's verify that the app works the same as before.
+Run the app. There should be same three pages of parties.
+
+What's more interesting is to add a couple of new parties, thus, adding
+a new 4th page. By this way, we can prove that our new "total number" publication and pagination controls are all working properly.
+
+# Changing Sort Order
+
+It's time for a new cool feature Socially users will certainly enjoy - sorting the parties list by party name.
+At this moment, we know everything we need to implement it.
+
+As previously implements, `nameOrder` uses one of two values, 1 or -1, to express ascending and descending orders
+respectively. Then, as you can see, we assign `nameOrder` to the party property (currently, `name`) we want to sort.
+
+We'll add a new dropdown UI control with two orders to change, ascending and descending. Let's add it in front of our parties list:
+
+{{{diff_step 13.17}}}
+
+In the `PartiesList` component, we change the `nameOrder` property to be a reactive variable and add a `changeSortOrder` event handler, where we set the new sort order:
+
+{{{diff_step 13.18}}}
+
+> Calling `next` on `nameOrder` Subject, will trigger the change notification - and then the Meteor subscription will re-created with the new parameters!
+
+That's just it! Run the app and change the sort order back and forth.
+
+What's important here is that pagination updates properly, i.e. according to a new sort order.
+
+# Server Side Search
+
+Before this step we had a nice feature to search parties by location, but with the addition of pagination, location search has partly broken. In its current state, there will always be no more than the current page of parties shown simultaneously on the client side. We would like, of course, to search parties across all storage, not just across the current page.
+
+To fix that, we'll need to patch our "parties" and "total number" publications on the server side
+to query parties with a new "location" parameter passed down from the client.
+Having that fixed, it should work properly in accordance with the added pagination.
+
+So, let's add filtering parties by the location with the help of Mongo's regex API.
+It is going to look like this:
+
+{{{diff_step 13.19}}}
+
+On the client side, we are going to add a new reactive variable and set it to update when a user clicks on the search button:
+
+{{{diff_step 13.20}}}
+
+> Notice that we don't know what size to expect from the search
+> that's why we are re-setting the current page to 1.
+
+Let's check it out now that everything works properly altogether: pagination, search, sorting,
+removing and addition of new parties.
+
+For example, you can try to add 30 parties in a way mentioned slightly above;
+then try to remove all 30 parties; then sort by the descending order; then try to search by Palo Alto — it should
+find only two, in case if you have not added any other parties rather than used in this tutorial so far;
+then try to remove one of the found parties and, finally, search with an empty location.
+
+Although this sequence of actions looks quite complicated, it was accomplished with rather few lines of code.
+
+# Summary
+
+This step covered a lot. We looked at:
+
+- Mongo query sort options: `sort`, `limit`, `skip`
+- RxJS `Subject` for updating variables automatically
+- Handling onChange events in Angular 2
+- Generating fake data with `anti:fake`
+- Establishing the total number of results with `tmeasday:publish-counts`
+- Enabling server-side searching across an entire collection
+
+In the [next step](/tutorials/angular2/using-and-creating-angularjs-filters) we'll look at sending out our party invitations and look deeper into pipes.
diff --git a/manuals/views/step13.md b/manuals/views/step13.md
new file mode 100644
index 0000000..68166b8
--- /dev/null
+++ b/manuals/views/step13.md
@@ -0,0 +1,882 @@
+[{]: <region> (header)
+# Step 13: Search, sort, pagination and reactive vars
+[}]: #
+[{]: <region> (body)
+In this step we are going to add:
+
+- parties list pagination
+- sorting by party name
+- lastly, we will move our previously implemented parties location search to the server side.
+
+Pagination simply means delivering and showing parties to the client on a page-by-page basis,
+where each page has a predefined number of items. Pagination reduces the number of documents to be transferred at one time thus decreasing load time. It also increases the usability of the user interface if there are too many documents in the storage.
+
+Besides client-side logic, it usually includes querying a specific page of parties on
+the server side to deliver up to the client as well.
+
+# Pagination
+
+First off, we'll add pagination on the server side.
+
+Thanks to the simplicity of the Mongo API combined with Meteor's power, we only need to execute `Parties.find` on the server with some additional parameters. Keep in mind, with Meteor's isomorphic environment, we'll query `Parties` on the client with the same parameters as on the server.
+
+### Mongo Collection query options
+
+`Collection.find` has a convenient second parameter called `options`,
+which takes an object for configuring collection querying.
+To implement pagination we'll need to provide _sort_, _limit_, and _skip_ fields as `options`.
+
+While  _limit_ and _skip_ set boundaries on the result set, _sort_, at the same time, may not.
+We'll use _sort_ to guarantee consistency of our pagination across page changes and page loads,
+since Mongo doesn't guarantee any order of documents if they are queried and not sorted.
+You can find more information about the _find_ method in Mongo [here](http://docs.meteor.com/#/full/find).
+
+Now, let's go to the `parties` subscription in the `server/imports/publications/parties.ts` file,
+add the `options` parameter to the subscription method, and then pass it to `Parties.find`:
+
+[{]: <helper> (diff_step 13.1)
+#### Step 13.1: Add options to the parties publication
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -1,8 +1,12 @@
+ ┊ 1┊ 1┊import { Meteor } from 'meteor/meteor';
+ ┊ 2┊ 2┊import { Parties } from '../../../both/collections/parties.collection';
+ ┊ 3┊ 3┊
+-┊ 4┊  ┊Meteor.publish('parties', function() {
+-┊ 5┊  ┊  return Parties.find(buildQuery.call(this));
++┊  ┊ 4┊interface Options {
++┊  ┊ 5┊  [key: string]: any;
++┊  ┊ 6┊}
++┊  ┊ 7┊
++┊  ┊ 8┊Meteor.publish('parties', function(options: Options) {
++┊  ┊ 9┊  return Parties.find(buildQuery.call(this), options);
+ ┊ 6┊10┊});
+ ┊ 7┊11┊
+ ┊ 8┊12┊Meteor.publish('party', function(partyId: string) {
+```
+[}]: #
+
+On the client side, we are going to define three additional variables in the `PartiesList` component which our pagination will depend on:
+page size, current page number and name sort order.
+Secondly, we'll create a special _options_ object made up of these variables and pass it to the parties subscription:
+
+[{]: <helper> (diff_step 13.2)
+#### Step 13.2: Define options and use it in the subscription
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -8,6 +8,15 @@
+ ┊ 8┊ 8┊
+ ┊ 9┊ 9┊import template from './parties-list.component.html';
+ ┊10┊10┊
++┊  ┊11┊interface Pagination {
++┊  ┊12┊  limit: number;
++┊  ┊13┊  skip: number;
++┊  ┊14┊}
++┊  ┊15┊
++┊  ┊16┊interface Options extends Pagination {
++┊  ┊17┊  [key: string]: any
++┊  ┊18┊}
++┊  ┊19┊
+ ┊11┊20┊@Component({
+ ┊12┊21┊  selector: 'parties-list',
+ ┊13┊22┊  template
+```
+```diff
+@@ -15,10 +24,20 @@
+ ┊15┊24┊export class PartiesListComponent implements OnInit, OnDestroy {
+ ┊16┊25┊  parties: Observable<Party[]>;
+ ┊17┊26┊  partiesSub: Subscription;
++┊  ┊27┊  pageSize: number = 10;
++┊  ┊28┊  curPage: number = 1;
++┊  ┊29┊  nameOrder: number = 1;
+ ┊18┊30┊
+ ┊19┊31┊  ngOnInit() {
+-┊20┊  ┊    this.parties = Parties.find({}).zone();
+-┊21┊  ┊    this.partiesSub = MeteorObservable.subscribe('parties').subscribe();
++┊  ┊32┊    const options: Options = {
++┊  ┊33┊      limit: this.pageSize,
++┊  ┊34┊      skip: (this.curPage - 1) * this.pageSize,
++┊  ┊35┊      sort: { name: this.nameOrder }
++┊  ┊36┊    };
++┊  ┊37┊
++┊  ┊38┊    this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
++┊  ┊39┊      this.parties = Parties.find({}).zone();
++┊  ┊40┊    });
+ ┊22┊41┊  }
+ ┊23┊42┊
+ ┊24┊43┊  removeParty(party: Party): void {
+```
+[}]: #
+
+As was said before, we also need to query `Parties` on the client side with same parameters and options as we used on the server, i.e., parameters and options we pass to the server side.
+
+In reality, though, we don't need _skip_ and _limit_ options in this case, since the subscription result of the parties collection will always have a maximum page size of documents on the client.
+
+So, we will only add sorting:
+
+[{]: <helper> (diff_step 13.3)
+#### Step 13.3: Add sorting by party name to PartiesList
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -36,7 +36,11 @@
+ ┊36┊36┊    };
+ ┊37┊37┊
+ ┊38┊38┊    this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
+-┊39┊  ┊      this.parties = Parties.find({}).zone();
++┊  ┊39┊      this.parties = Parties.find({}, {
++┊  ┊40┊        sort: {
++┊  ┊41┊          name: this.nameOrder
++┊  ┊42┊        }
++┊  ┊43┊      }).zone();
+ ┊40┊44┊    });
+ ┊41┊45┊  }
+```
+[}]: #
+
+### Reactive Changes
+
+The idea behind Reactive variables and changes - is to update our Meteor subscription according to the user interaction - for example: if the user changes the sort order - we want to drop the old Meteor subscription and replace it with a new one that matches the new parameters.
+
+Because we are using RxJS, we can create variables that are `Observable`s - which means we can register to the changes notification - and act as required - in our case - changed the Meteor subscription.
+
+In order to do so, we will use RxJS `Subject` - which is an extension for `Observable`.
+
+A `Subject` is a sort of bridge or proxy that is available in some implementations of RxJS that acts both as an observer and as an Observable.
+
+Which means we can both register to the updates notifications and trigger the notification!
+
+In our case - when the user changes the parameters of the Meteor subscription, we need to trigger the notification.
+
+So let's do it. We will replace the regular variables with `Subject`s, and in order to trigger the notification in the first time, we will execute `next()` for the `Subject`s:
+
+[{]: <helper> (diff_step 13.4)
+#### Step 13.4: Turn primitive values into Subjects
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊2┊2┊import { Observable } from 'rxjs/Observable';
++┊ ┊3┊import { Subject } from 'rxjs/Subject';
+ ┊3┊4┊import { Subscription } from 'rxjs/Subscription';
+ ┊4┊5┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊5┊6┊
+```
+```diff
+@@ -24,9 +25,9 @@
+ ┊24┊25┊export class PartiesListComponent implements OnInit, OnDestroy {
+ ┊25┊26┊  parties: Observable<Party[]>;
+ ┊26┊27┊  partiesSub: Subscription;
+-┊27┊  ┊  pageSize: number = 10;
+-┊28┊  ┊  curPage: number = 1;
+-┊29┊  ┊  nameOrder: number = 1;
++┊  ┊28┊  pageSize: Subject<number> = new Subject<number>();
++┊  ┊29┊  curPage: Subject<number> = new Subject<number>();
++┊  ┊30┊  nameOrder: Subject<number> = new Subject<number>();
+ ┊30┊31┊
+ ┊31┊32┊  ngOnInit() {
+ ┊32┊33┊    const options: Options = {
+```
+```diff
+@@ -42,6 +43,10 @@
+ ┊42┊43┊        }
+ ┊43┊44┊      }).zone();
+ ┊44┊45┊    });
++┊  ┊46┊
++┊  ┊47┊    this.pageSize.next(10);
++┊  ┊48┊    this.curPage.next(1);
++┊  ┊49┊    this.nameOrder.next(1);
+ ┊45┊50┊  }
+ ┊46┊51┊
+ ┊47┊52┊  removeParty(party: Party): void {
+```
+[}]: #
+
+Now we need to register to those changes notifications.
+
+Because we need to register to multiple notifications (page size, current page, sort), we need to use a special RxJS Operator called `combineLatest` - which combines multiple `Observable`s into one, and trigger a notification when one of them changes!
+
+So let's use it and update the subscription:
+
+[{]: <helper> (diff_step 13.5)
+#### Step 13.5: Re-subscribe on current page changes
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -4,6 +4,8 @@
+ ┊ 4┊ 4┊import { Subscription } from 'rxjs/Subscription';
+ ┊ 5┊ 5┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊ 6┊ 6┊
++┊  ┊ 7┊import 'rxjs/add/operator/combineLatest';
++┊  ┊ 8┊
+ ┊ 7┊ 9┊import { Parties } from '../../../../both/collections/parties.collection';
+ ┊ 8┊10┊import { Party } from '../../../../both/models/party.model';
+ ┊ 9┊11┊
+```
+```diff
+@@ -28,20 +30,31 @@
+ ┊28┊30┊  pageSize: Subject<number> = new Subject<number>();
+ ┊29┊31┊  curPage: Subject<number> = new Subject<number>();
+ ┊30┊32┊  nameOrder: Subject<number> = new Subject<number>();
++┊  ┊33┊  optionsSub: Subscription;
+ ┊31┊34┊
+ ┊32┊35┊  ngOnInit() {
+-┊33┊  ┊    const options: Options = {
+-┊34┊  ┊      limit: this.pageSize,
+-┊35┊  ┊      skip: (this.curPage - 1) * this.pageSize,
+-┊36┊  ┊      sort: { name: this.nameOrder }
+-┊37┊  ┊    };
+-┊38┊  ┊
+-┊39┊  ┊    this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
+-┊40┊  ┊      this.parties = Parties.find({}, {
+-┊41┊  ┊        sort: {
+-┊42┊  ┊          name: this.nameOrder
+-┊43┊  ┊        }
+-┊44┊  ┊      }).zone();
++┊  ┊36┊    this.optionsSub = Observable.combineLatest(
++┊  ┊37┊      this.pageSize,
++┊  ┊38┊      this.curPage,
++┊  ┊39┊      this.nameOrder
++┊  ┊40┊    ).subscribe(([pageSize, curPage, nameOrder]) => {
++┊  ┊41┊      const options: Options = {
++┊  ┊42┊        limit: pageSize as number,
++┊  ┊43┊        skip: ((curPage as number) - 1) * (pageSize as number),
++┊  ┊44┊        sort: { name: nameOrder as number }
++┊  ┊45┊      };
++┊  ┊46┊
++┊  ┊47┊      if (this.partiesSub) {
++┊  ┊48┊        this.partiesSub.unsubscribe();
++┊  ┊49┊      }
++┊  ┊50┊      
++┊  ┊51┊      this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
++┊  ┊52┊        this.parties = Parties.find({}, {
++┊  ┊53┊          sort: {
++┊  ┊54┊            name: nameOrder
++┊  ┊55┊          }
++┊  ┊56┊        }).zone();
++┊  ┊57┊      });
+ ┊45┊58┊    });
+ ┊46┊59┊
+ ┊47┊60┊    this.pageSize.next(10);
+```
+```diff
+@@ -59,5 +72,6 @@
+ ┊59┊72┊
+ ┊60┊73┊  ngOnDestroy() {
+ ┊61┊74┊    this.partiesSub.unsubscribe();
++┊  ┊75┊    this.optionsSub.unsubscribe();
+ ┊62┊76┊  }
+ ┊63┊77┊}
+```
+[}]: #
+
+> Notice that we also removes the Subscription and use `unsubscribe` because we want to drop the old subscription each time it changes.
+
+# Pagination UI
+
+As this paragraph name suggests, the next logical thing to do would be to implement a
+pagination UI, which consists of, at least, a list of page links at the bottom of every page,
+so that the user can switch pages by clicking on these links.
+
+Creating a pagination component is not a trivial task and not one of the primary goals of this tutorial,
+so we are going to make use of an already existing package with Angular 2 pagination components.
+Run the following line to add this package:
+
+    $ meteor npm install ng2-pagination --save
+
+> This package's pagination mark-up follows the structure of
+> the [Bootstrap pagination component](http://getbootstrap.com/components/#pagination),
+> so you can change its look simply by using proper CSS styles.
+> It's worth noting, though, that this package has been created
+> with the only this tutorial in mind.
+> It misses a lot of features that would be quite useful
+> in the real world, for example, custom templates.
+
+Ng2-Pagination consists of three main parts:
+
+- pagination controls that render a list of links
+- a pagination service to manipulate logic programmatically
+- a pagination pipe component, which can be added in any component template, with the main goal to
+transform a list of items according to the current state of the pagination service and show current page of items on UI
+
+First, let's import the pagination module into our `NgModule`:
+
+[{]: <helper> (diff_step 13.7)
+#### Step 13.7: Import Ng2PaginationModule
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -3,6 +3,7 @@
+ ┊3┊3┊import { FormsModule, ReactiveFormsModule } from '@angular/forms';
+ ┊4┊4┊import { RouterModule } from '@angular/router';
+ ┊5┊5┊import { AccountsModule } from 'angular2-meteor-accounts-ui';
++┊ ┊6┊import { Ng2PaginationModule } from 'ng2-pagination';
+ ┊6┊7┊
+ ┊7┊8┊import { AppComponent } from './app.component';
+ ┊8┊9┊import { routes, ROUTES_PROVIDERS } from './app.routes';
+```
+```diff
+@@ -14,7 +15,8 @@
+ ┊14┊15┊    FormsModule,
+ ┊15┊16┊    ReactiveFormsModule,
+ ┊16┊17┊    RouterModule.forRoot(routes),
+-┊17┊  ┊    AccountsModule
++┊  ┊18┊    AccountsModule,
++┊  ┊19┊    Ng2PaginationModule
+ ┊18┊20┊  ],
+ ┊19┊21┊  declarations: [
+ ┊20┊22┊    AppComponent,
+```
+[}]: #
+
+Because of pagination pipe of ng2-pagination supports only arrays we'll use the `PaginationService`.
+Let's define the configuration:
+
+[{]: <helper> (diff_step 13.8)
+#### Step 13.8: Register configuration of pagination
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -3,6 +3,7 @@
+ ┊3┊3┊import { Subject } from 'rxjs/Subject';
+ ┊4┊4┊import { Subscription } from 'rxjs/Subscription';
+ ┊5┊5┊import { MeteorObservable } from 'meteor-rxjs';
++┊ ┊6┊import { PaginationService } from 'ng2-pagination';
+ ┊6┊7┊
+ ┊7┊8┊import 'rxjs/add/operator/combineLatest';
+ ┊8┊9┊
+```
+```diff
+@@ -32,6 +33,10 @@
+ ┊32┊33┊  nameOrder: Subject<number> = new Subject<number>();
+ ┊33┊34┊  optionsSub: Subscription;
+ ┊34┊35┊
++┊  ┊36┊  constructor(
++┊  ┊37┊    private paginationService: PaginationService
++┊  ┊38┊  ) {}
++┊  ┊39┊
+ ┊35┊40┊  ngOnInit() {
+ ┊36┊41┊    this.optionsSub = Observable.combineLatest(
+ ┊37┊42┊      this.pageSize,
+```
+```diff
+@@ -57,6 +62,13 @@
+ ┊57┊62┊      });
+ ┊58┊63┊    });
+ ┊59┊64┊
++┊  ┊65┊    this.paginationService.register({
++┊  ┊66┊      id: this.paginationService.defaultId,
++┊  ┊67┊      itemsPerPage: 10,
++┊  ┊68┊      currentPage: 1,
++┊  ┊69┊      totalItems: 30,
++┊  ┊70┊    });
++┊  ┊71┊
+ ┊60┊72┊    this.pageSize.next(10);
+ ┊61┊73┊    this.curPage.next(1);
+ ┊62┊74┊    this.nameOrder.next(1);
+```
+[}]: #
+
+> `id` - this is the identifier of specific pagination, we use the default.
+
+We need to notify the pagination that the current page has been changed, so let's add it to the method where we handle the reactive changes:
+
+[{]: <helper> (diff_step 13.9)
+#### Step 13.9: Update current page when options change
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -49,6 +49,8 @@
+ ┊49┊49┊        sort: { name: nameOrder as number }
+ ┊50┊50┊      };
+ ┊51┊51┊
++┊  ┊52┊      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);
++┊  ┊53┊
+ ┊52┊54┊      if (this.partiesSub) {
+ ┊53┊55┊        this.partiesSub.unsubscribe();
+ ┊54┊56┊      }
+```
+[}]: #
+
+Now, add the pagination controls to the `parties-list.component.html` template:
+
+[{]: <helper> (diff_step 13.10)
+#### Step 13.10: Add pagination to the list
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -13,4 +13,6 @@
+ ┊13┊13┊      <button (click)="removeParty(party)">X</button>
+ ┊14┊14┊    </li>
+ ┊15┊15┊  </ul>
++┊  ┊16┊
++┊  ┊17┊  <pagination-controls></pagination-controls>
+ ┊16┊18┊</div>🚫↵
+```
+[}]: #
+
+In the configuration, we provided the current page number, the page size and a new value of total items in the list to paginate.
+
+This total number of items are required to be set in our case, since we don't provide a
+regular array of elements but instead an `Observable`, the pagination service simply won't know how to calculate its size.
+
+We'll get back to this in the next paragraph where we'll be setting parties total size reactively.
+
+For now, let's just set it to be 30. We'll see why this default value is needed shortly.
+
+### pageChange events
+
+The final part is to handle user clicks on the page links. The pagination controls component
+fires a special event when the user clicks on a page link, causing the current page to update.
+
+Let's handle this event in the template first and then add a method to the `PartiesList` component itself:
+
+[{]: <helper> (diff_step 13.11)
+#### Step 13.11: Add pageChange event binding
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -14,5 +14,5 @@
+ ┊14┊14┊    </li>
+ ┊15┊15┊  </ul>
+ ┊16┊16┊
+-┊17┊  ┊  <pagination-controls></pagination-controls>
++┊  ┊17┊  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+ ┊18┊18┊</div>🚫↵
+```
+[}]: #
+
+As you can see, the pagination controls component fires the `pageChange` event, calling the `onPageChanged` method with
+a special event object that contains the new page number to set. Add the `onPageChanged` method:
+
+[{]: <helper> (diff_step 13.12)
+#### Step 13.12: Add event handler for pageChange
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -84,6 +84,10 @@
+ ┊84┊84┊    this.parties = Parties.find(value ? { location: value } : {}).zone();
+ ┊85┊85┊  }
+ ┊86┊86┊
++┊  ┊87┊  onPageChanged(page: number): void {
++┊  ┊88┊    this.curPage.next(page);
++┊  ┊89┊  }
++┊  ┊90┊
+ ┊87┊91┊  ngOnDestroy() {
+ ┊88┊92┊    this.partiesSub.unsubscribe();
+ ┊89┊93┊    this.optionsSub.unsubscribe();
+```
+[}]: #
+
+At this moment, we have almost everything in place. Let's check if everything is working.
+We are going to have to add a lot of parties, at least, a couple of pages.
+But, since we've chosen quite a large default page size (10), it would be tedious to add all parties manually.
+
+### Generating Mock Data
+
+In this example, we need to deal with multiple objects and in order to test it and get the best results - we need a lot of Parties objects.
+
+Thankfully, we have a helpful package called [_anti:fake_](https://atmospherejs.com/anti/fake), which will help us out with the generation of names, locations and other properties of new fake parties.
+
+    $ meteor add anti:fake
+
+So, with the following lines of code we are going to have 30 parties in total
+(given that we already have three):
+
+__`server/imports/fixtures/parties.ts`__:
+
+    ...
+
+    for (var i = 0; i < 27; i++) {
+      Parties.insert({
+        name: Fake.sentence(50),
+        location: Fake.sentence(10),
+        description: Fake.sentence(100),
+        public: true
+      });
+    }
+
+
+Fake is loaded in Meteor as a global, you may want to declare it for TypeScript.
+
+You can add it to the end of the `typings.d.ts` file:
+
+    declare var Fake: {
+        sentence(words: number): string;
+    }
+
+Now reset the database (`meteor reset`) and run the app. You should see a list of 10 parties shown initially and 3 pages links just at the bottom.
+
+Play around with the pagination: click on page links to go back and forth,
+then try to delete parties to check if the current page updates properly.
+
+
+# Getting the Total Number of Parties
+
+The pagination component needs to know how many pages it will create. As such, we need to know the total number of parties in storage and divide it by the number of items per page.
+
+At the same time, our parties collection will always have no more than necessary parties on the client side.
+This suggests that we have to add a new publication to publish only the current count of parties existing in storage.
+
+This task looks quite common and, thankfully, it's already been
+implemented. We can use the [tmeasday:publish-counts](https://github.com/percolatestudio/publish-counts) package.
+
+    $ meteor add tmeasday:publish-counts
+
+This package is an example for a package that does not provide it's own TypeScript declaration file, so we will have to manually create and add it to the `typings.d.ts` file according to the package API:
+
+[{]: <helper> (diff_step 13.15)
+#### Step 13.15: Add declaration of counts package
+
+##### Changed typings.d.ts
+```diff
+@@ -25,4 +25,15 @@
+ ┊25┊25┊declare module '*.sass' {
+ ┊26┊26┊  const style: string;
+ ┊27┊27┊  export default style;
+-┊28┊  ┊}🚫↵
++┊  ┊28┊}
++┊  ┊29┊
++┊  ┊30┊declare module 'meteor/tmeasday:publish-counts' {
++┊  ┊31┊  import { Mongo } from 'meteor/mongo';
++┊  ┊32┊
++┊  ┊33┊  interface CountsObject {
++┊  ┊34┊    get(publicationName: string): number;
++┊  ┊35┊    publish(context: any, publicationName: string, cursor: Mongo.Cursor, options: any): number;
++┊  ┊36┊  }
++┊  ┊37┊
++┊  ┊38┊  export const Counts: CountsObject;
++┊  ┊39┊}
+```
+[}]: #
+
+This package exports a `Counts` object with all of the API methods we will need.
+
+> Notice that you'll see a TypeScript warning in the terminal
+> saying that "Counts" has no method you want to use, when you start using the API.
+> You can remove this warning by adding a [publish-counts type declaration file](https://github.com/correpw/meteor-publish-counts.d.ts/blob/master/Counts.d.ts) to your typings.
+
+Let's publish the total number of parties as follows:
+
+[{]: <helper> (diff_step 13.14)
+#### Step 13.14: Publish total number of parties
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -1,4 +1,6 @@
+ ┊1┊1┊import { Meteor } from 'meteor/meteor';
++┊ ┊2┊import { Counts } from 'meteor/tmeasday:publish-counts';
++┊ ┊3┊
+ ┊2┊4┊import { Parties } from '../../../both/collections/parties.collection';
+ ┊3┊5┊
+ ┊4┊6┊interface Options {
+```
+```diff
+@@ -6,6 +8,8 @@
+ ┊ 6┊ 8┊}
+ ┊ 7┊ 9┊
+ ┊ 8┊10┊Meteor.publish('parties', function(options: Options) {
++┊  ┊11┊  Counts.publish(this, 'numberOfParties', Parties.collection.find(buildQuery.call(this)), { noReady: true });
++┊  ┊12┊
+ ┊ 9┊13┊  return Parties.find(buildQuery.call(this), options);
+ ┊10┊14┊});
+```
+[}]: #
+
+> Notice that we are passing `{ noReady: true }` in the last argument so
+> that the publication will be ready only after our main cursor is loaded, instead of waiting for Counts.
+
+We've just created the new _numberOfParties_ publication.
+Let's get it reactively on the client side using the `Counts` object, and, at the same time,
+introduce a new `partiesSize` property in the `PartiesList` component:
+
+[{]: <helper> (diff_step 13.16)
+#### Step 13.16: Handle reactive updates of the parties total number
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -4,6 +4,7 @@
+ ┊ 4┊ 4┊import { Subscription } from 'rxjs/Subscription';
+ ┊ 5┊ 5┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊ 6┊ 6┊import { PaginationService } from 'ng2-pagination';
++┊  ┊ 7┊import { Counts } from 'meteor/tmeasday:publish-counts';
+ ┊ 7┊ 8┊
+ ┊ 8┊ 9┊import 'rxjs/add/operator/combineLatest';
+ ┊ 9┊10┊
+```
+```diff
+@@ -32,6 +33,8 @@
+ ┊32┊33┊  curPage: Subject<number> = new Subject<number>();
+ ┊33┊34┊  nameOrder: Subject<number> = new Subject<number>();
+ ┊34┊35┊  optionsSub: Subscription;
++┊  ┊36┊  partiesSize: number = 0;
++┊  ┊37┊  autorunSub: Subscription;
+ ┊35┊38┊
+ ┊36┊39┊  constructor(
+ ┊37┊40┊    private paginationService: PaginationService
+```
+```diff
+@@ -68,12 +71,17 @@
+ ┊68┊71┊      id: this.paginationService.defaultId,
+ ┊69┊72┊      itemsPerPage: 10,
+ ┊70┊73┊      currentPage: 1,
+-┊71┊  ┊      totalItems: 30,
++┊  ┊74┊      totalItems: this.partiesSize
+ ┊72┊75┊    });
+ ┊73┊76┊
+ ┊74┊77┊    this.pageSize.next(10);
+ ┊75┊78┊    this.curPage.next(1);
+ ┊76┊79┊    this.nameOrder.next(1);
++┊  ┊80┊
++┊  ┊81┊    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
++┊  ┊82┊      this.partiesSize = Counts.get('numberOfParties');
++┊  ┊83┊      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
++┊  ┊84┊    });
+ ┊77┊85┊  }
+ ┊78┊86┊
+ ┊79┊87┊  removeParty(party: Party): void {
+```
+```diff
+@@ -91,5 +99,6 @@
+ ┊ 91┊ 99┊  ngOnDestroy() {
+ ┊ 92┊100┊    this.partiesSub.unsubscribe();
+ ┊ 93┊101┊    this.optionsSub.unsubscribe();
++┊   ┊102┊    this.autorunSub.unsubscribe();
+ ┊ 94┊103┊  }
+ ┊ 95┊104┊}
+```
+[}]: #
+
+We used `MeteorObservable.autorun` because we wan't to know when there are changes regarding the data that comes from Meteor - so now every change of data, we will calculate the total number of parties and save it in our Component, then we will set it in the `PaginationService`.
+
+Let's verify that the app works the same as before.
+Run the app. There should be same three pages of parties.
+
+What's more interesting is to add a couple of new parties, thus, adding
+a new 4th page. By this way, we can prove that our new "total number" publication and pagination controls are all working properly.
+
+# Changing Sort Order
+
+It's time for a new cool feature Socially users will certainly enjoy - sorting the parties list by party name.
+At this moment, we know everything we need to implement it.
+
+As previously implements, `nameOrder` uses one of two values, 1 or -1, to express ascending and descending orders
+respectively. Then, as you can see, we assign `nameOrder` to the party property (currently, `name`) we want to sort.
+
+We'll add a new dropdown UI control with two orders to change, ascending and descending. Let's add it in front of our parties list:
+
+[{]: <helper> (diff_step 13.17)
+#### Step 13.17: Add the sort order dropdown
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -5,6 +5,15 @@
+ ┊ 5┊ 5┊  
+ ┊ 6┊ 6┊  <login-buttons></login-buttons>
+ ┊ 7┊ 7┊
++┊  ┊ 8┊  <h1>Parties:</h1>
++┊  ┊ 9┊
++┊  ┊10┊  <div>
++┊  ┊11┊    <select #sort (change)="changeSortOrder(sort.value)">
++┊  ┊12┊      <option value="1" selected>Ascending</option>
++┊  ┊13┊      <option value="-1">Descending</option>
++┊  ┊14┊    </select>
++┊  ┊15┊  </div>
++┊  ┊16┊
+ ┊ 8┊17┊  <ul>
+ ┊ 9┊18┊    <li *ngFor="let party of parties | async">
+ ┊10┊19┊      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+```
+[}]: #
+
+In the `PartiesList` component, we change the `nameOrder` property to be a reactive variable and add a `changeSortOrder` event handler, where we set the new sort order:
+
+[{]: <helper> (diff_step 13.18)
+#### Step 13.18: Re-subscribe when sort order changes
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -96,6 +96,10 @@
+ ┊ 96┊ 96┊    this.curPage.next(page);
+ ┊ 97┊ 97┊  }
+ ┊ 98┊ 98┊
++┊   ┊ 99┊  changeSortOrder(nameOrder: string): void {
++┊   ┊100┊    this.nameOrder.next(parseInt(nameOrder));
++┊   ┊101┊  }
++┊   ┊102┊
+ ┊ 99┊103┊  ngOnDestroy() {
+ ┊100┊104┊    this.partiesSub.unsubscribe();
+ ┊101┊105┊    this.optionsSub.unsubscribe();
+```
+[}]: #
+
+> Calling `next` on `nameOrder` Subject, will trigger the change notification - and then the Meteor subscription will re-created with the new parameters!
+
+That's just it! Run the app and change the sort order back and forth.
+
+What's important here is that pagination updates properly, i.e. according to a new sort order.
+
+# Server Side Search
+
+Before this step we had a nice feature to search parties by location, but with the addition of pagination, location search has partly broken. In its current state, there will always be no more than the current page of parties shown simultaneously on the client side. We would like, of course, to search parties across all storage, not just across the current page.
+
+To fix that, we'll need to patch our "parties" and "total number" publications on the server side
+to query parties with a new "location" parameter passed down from the client.
+Having that fixed, it should work properly in accordance with the added pagination.
+
+So, let's add filtering parties by the location with the help of Mongo's regex API.
+It is going to look like this:
+
+[{]: <helper> (diff_step 13.19)
+#### Step 13.19: Add search by the party location using regex
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -7,10 +7,12 @@
+ ┊ 7┊ 7┊  [key: string]: any;
+ ┊ 8┊ 8┊}
+ ┊ 9┊ 9┊
+-┊10┊  ┊Meteor.publish('parties', function(options: Options) {
+-┊11┊  ┊  Counts.publish(this, 'numberOfParties', Parties.collection.find(buildQuery.call(this)), { noReady: true });
++┊  ┊10┊Meteor.publish('parties', function(options: Options, location?: string) {
++┊  ┊11┊  const selector = buildQuery.call(this, null, location);
+ ┊12┊12┊
+-┊13┊  ┊  return Parties.find(buildQuery.call(this), options);
++┊  ┊13┊  Counts.publish(this, 'numberOfParties', Parties.collection.find(selector), { noReady: true });
++┊  ┊14┊
++┊  ┊15┊  return Parties.find(selector, options);
+ ┊14┊16┊});
+ ┊15┊17┊
+ ┊16┊18┊Meteor.publish('party', function(partyId: string) {
+```
+```diff
+@@ -18,7 +20,7 @@
+ ┊18┊20┊});
+ ┊19┊21┊
+ ┊20┊22┊
+-┊21┊  ┊function buildQuery(partyId?: string): Object {
++┊  ┊23┊function buildQuery(partyId?: string, location?: string): Object {
+ ┊22┊24┊  const isAvailable = {
+ ┊23┊25┊    $or: [{
+ ┊24┊26┊      // party is public
+```
+```diff
+@@ -48,5 +50,13 @@
+ ┊48┊50┊    };
+ ┊49┊51┊  }
+ ┊50┊52┊
+-┊51┊  ┊  return isAvailable;
++┊  ┊53┊  const searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };
++┊  ┊54┊
++┊  ┊55┊  return {
++┊  ┊56┊    $and: [{
++┊  ┊57┊        location: searchRegEx
++┊  ┊58┊      },
++┊  ┊59┊      isAvailable
++┊  ┊60┊    ]
++┊  ┊61┊  };
+ ┊52┊62┊}🚫↵
+```
+[}]: #
+
+On the client side, we are going to add a new reactive variable and set it to update when a user clicks on the search button:
+
+[{]: <helper> (diff_step 13.20)
+#### Step 13.20: Add reactive search by location
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -35,6 +35,7 @@
+ ┊35┊35┊  optionsSub: Subscription;
+ ┊36┊36┊  partiesSize: number = 0;
+ ┊37┊37┊  autorunSub: Subscription;
++┊  ┊38┊  location: Subject<string> = new Subject<string>();
+ ┊38┊39┊
+ ┊39┊40┊  constructor(
+ ┊40┊41┊    private paginationService: PaginationService
+```
+```diff
+@@ -44,8 +45,9 @@
+ ┊44┊45┊    this.optionsSub = Observable.combineLatest(
+ ┊45┊46┊      this.pageSize,
+ ┊46┊47┊      this.curPage,
+-┊47┊  ┊      this.nameOrder
+-┊48┊  ┊    ).subscribe(([pageSize, curPage, nameOrder]) => {
++┊  ┊48┊      this.nameOrder,
++┊  ┊49┊      this.location
++┊  ┊50┊    ).subscribe(([pageSize, curPage, nameOrder, location]) => {
+ ┊49┊51┊      const options: Options = {
+ ┊50┊52┊        limit: pageSize as number,
+ ┊51┊53┊        skip: ((curPage as number) - 1) * (pageSize as number),
+```
+```diff
+@@ -58,7 +60,7 @@
+ ┊58┊60┊        this.partiesSub.unsubscribe();
+ ┊59┊61┊      }
+ ┊60┊62┊      
+-┊61┊  ┊      this.partiesSub = MeteorObservable.subscribe('parties', options).subscribe(() => {
++┊  ┊63┊      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {
+ ┊62┊64┊        this.parties = Parties.find({}, {
+ ┊63┊65┊          sort: {
+ ┊64┊66┊            name: nameOrder
+```
+```diff
+@@ -77,6 +79,7 @@
+ ┊77┊79┊    this.pageSize.next(10);
+ ┊78┊80┊    this.curPage.next(1);
+ ┊79┊81┊    this.nameOrder.next(1);
++┊  ┊82┊    this.location.next('');
+ ┊80┊83┊
+ ┊81┊84┊    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
+ ┊82┊85┊      this.partiesSize = Counts.get('numberOfParties');
+```
+```diff
+@@ -89,7 +92,8 @@
+ ┊89┊92┊  }
+ ┊90┊93┊
+ ┊91┊94┊  search(value: string): void {
+-┊92┊  ┊    this.parties = Parties.find(value ? { location: value } : {}).zone();
++┊  ┊95┊    this.curPage.next(1);
++┊  ┊96┊    this.location.next(value);
+ ┊93┊97┊  }
+ ┊94┊98┊
+ ┊95┊99┊  onPageChanged(page: number): void {
+```
+[}]: #
+
+> Notice that we don't know what size to expect from the search
+> that's why we are re-setting the current page to 1.
+
+Let's check it out now that everything works properly altogether: pagination, search, sorting,
+removing and addition of new parties.
+
+For example, you can try to add 30 parties in a way mentioned slightly above;
+then try to remove all 30 parties; then sort by the descending order; then try to search by Palo Alto — it should
+find only two, in case if you have not added any other parties rather than used in this tutorial so far;
+then try to remove one of the found parties and, finally, search with an empty location.
+
+Although this sequence of actions looks quite complicated, it was accomplished with rather few lines of code.
+
+# Summary
+
+This step covered a lot. We looked at:
+
+- Mongo query sort options: `sort`, `limit`, `skip`
+- RxJS `Subject` for updating variables automatically
+- Handling onChange events in Angular 2
+- Generating fake data with `anti:fake`
+- Establishing the total number of results with `tmeasday:publish-counts`
+- Enabling server-side searching across an entire collection
+
+In the [next step](/tutorials/angular2/using-and-creating-angularjs-filters) we'll look at sending out our party invitations and look deeper into pipes.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step12.md) | [Next Step >](step14.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 7b5a4fafa728ad0f21b2fdc0c9f3037cc316dd17 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:27:03 +0200
Subject: [PATCH 111/304] Step 14.1: Add uninvited users publication

---
 server/imports/publications/users.ts | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
 create mode 100644 server/imports/publications/users.ts

diff --git a/server/imports/publications/users.ts b/server/imports/publications/users.ts
new file mode 100644
index 0000000..c320f41
--- /dev/null
+++ b/server/imports/publications/users.ts
@@ -0,0 +1,18 @@
+import { Meteor } from 'meteor/meteor';
+
+import { Parties } from '../../../both/collections/parties.collection';
+
+Meteor.publish('uninvited', function (partyId: string) {
+  const party = Parties.findOne(partyId);
+
+  if (!party) {
+    throw new Meteor.Error('404', 'No such party!');
+  }
+
+  return Meteor.users.find({
+    _id: {
+      $nin: party.invited || [],
+      $ne: this.userId
+    }
+  });
+});
-- 
2.10.2


From db0989dc6920897e1e7540407e423292c27eae34 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:28:24 +0200
Subject: [PATCH 112/304] Step 14.2: Add invited to Party interface

---
 both/models/party.model.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index 2526c11..64e6ae1 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -6,4 +6,5 @@ export interface Party extends CollectionObject {
   location: string;
   owner?: string;
   public: boolean;
+  invited?: string[];
 }
-- 
2.10.2


From 9d77b4cfda7faa65705c7827450625d41ca0f000 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:28:59 +0200
Subject: [PATCH 113/304] Step 14.3: Use it on the server

---
 server/main.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/server/main.ts b/server/main.ts
index 7f8e626..f6356dd 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -2,7 +2,8 @@ import { Meteor } from 'meteor/meteor';
 
 import { loadParties } from './imports/fixtures/parties';
 
-import './imports/publications/parties'; 
+import './imports/publications/parties';
+import './imports/publications/users'; 
 
 Meteor.startup(() => {
   loadParties();
-- 
2.10.2


From 1a05181d4d64ff44dec28a26cadf12b5a1894062 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:42:28 +0200
Subject: [PATCH 114/304] Step 14.4: Create Users collection from Meteor.users

---
 both/collections/users.collection.ts | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 both/collections/users.collection.ts

diff --git a/both/collections/users.collection.ts b/both/collections/users.collection.ts
new file mode 100644
index 0000000..dbd121b
--- /dev/null
+++ b/both/collections/users.collection.ts
@@ -0,0 +1,4 @@
+import { MongoObservable } from 'meteor-rxjs';
+import { Meteor } from 'meteor/meteor';
+
+export const Users = MongoObservable.fromExisting(Meteor.users);
-- 
2.10.2


From a9d8732990ac39aa3a7f32dc69a26bee27a6b202 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:42:57 +0200
Subject: [PATCH 115/304] Step 14.5: Create also User interface

---
 both/models/user.model.ts | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 both/models/user.model.ts

diff --git a/both/models/user.model.ts b/both/models/user.model.ts
new file mode 100644
index 0000000..08eeec5
--- /dev/null
+++ b/both/models/user.model.ts
@@ -0,0 +1,3 @@
+import { Meteor } from 'meteor/meteor';
+
+export interface User extends Meteor.User {}
-- 
2.10.2


From 4369168362866ea3f211029bb7b6cddc8f447e14 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:45:17 +0200
Subject: [PATCH 116/304] Step 14.6: Implement subscription of uninvited users

---
 client/imports/app/parties/party-details.component.ts | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 9c7a9e7..246243e 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -1,5 +1,6 @@
 import { Component, OnInit, OnDestroy } from '@angular/core';
 import { ActivatedRoute } from '@angular/router';
+import { Observable } from 'rxjs/Observable';
 import { Subscription } from 'rxjs/Subscription';
 import { Meteor } from 'meteor/meteor';
 import { MeteorObservable } from 'meteor-rxjs';
@@ -8,6 +9,8 @@ import 'rxjs/add/operator/map';
 
 import { Parties } from '../../../../both/collections/parties.collection';
 import { Party } from '../../../../both/models/party.model';
+import { Users } from '../../../../both/collections/users.collection';
+import { User } from '../../../../both/models/user.model';
 
 import template from './party-details.component.html';
 
@@ -20,6 +23,8 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   paramsSub: Subscription;
   party: Party;
   partySub: Subscription;
+  users: Observable<User>;
+  uninvitedSub: Subscription;
 
   constructor(
     private route: ActivatedRoute
@@ -38,6 +43,18 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
         this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
           this.party = Parties.findOne(this.partyId);
         });
+
+        if (this.uninvitedSub) {
+          this.uninvitedSub.unsubscribe();
+        }
+
+        this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {
+           this.users = Users.find({
+             _id: {
+               $ne: Meteor.userId()
+              }
+            }).zone();
+        });
       });
   }
 
@@ -59,5 +76,6 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
     this.partySub.unsubscribe();
+    this.uninvitedSub.unsubscribe();
   }
 }
-- 
2.10.2


From 4b3fc774c9353d7c576563a2676048800fce93ea Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:46:28 +0200
Subject: [PATCH 117/304] Step 14.7: Display list of uninvited users

---
 client/imports/app/parties/party-details.component.html | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index aef5bae..2ce1e72 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -10,4 +10,11 @@
 
   <button type="submit">Save</button>
   <a [routerLink]="['/']">Cancel</a>
-</form>
\ No newline at end of file
+</form>
+
+<p>Users to invite:</p>
+<ul>
+  <li *ngFor="let user of users | async">
+    <div>{{user.emails[0].address}}</div>
+  </li>
+</ul>
-- 
2.10.2


From 5f729e4b23f953e7352ac645f59569452fac4a98 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:50:06 +0200
Subject: [PATCH 118/304] Step 14.8: Create DisplayNamePipe

---
 client/imports/app/shared/display-name.pipe.ts | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 client/imports/app/shared/display-name.pipe.ts

diff --git a/client/imports/app/shared/display-name.pipe.ts b/client/imports/app/shared/display-name.pipe.ts
new file mode 100644
index 0000000..40efbb6
--- /dev/null
+++ b/client/imports/app/shared/display-name.pipe.ts
@@ -0,0 +1,25 @@
+import { Pipe, PipeTransform } from '@angular/core';
+import { Meteor } from 'meteor/meteor';
+
+import { User } from '../../../../both/models/user.model';
+
+@Pipe({
+  name: 'displayName'
+})
+export class DisplayNamePipe implements PipeTransform {
+  transform(user: User): string {
+    if (!user) {
+      return '';
+    }
+
+    if (user.username) {
+      return user.username;
+    }
+
+    if (user.emails) {
+      return user.emails[0].address;
+    }
+
+    return '';
+  }
+}
-- 
2.10.2


From fb1f8e06392cbf50d0ab9e7d1c23efdaa606f06b Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:51:10 +0200
Subject: [PATCH 119/304] Step 14.9: Make space for shared declarations

---
 client/imports/app/shared/index.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/app/shared/index.ts

diff --git a/client/imports/app/shared/index.ts b/client/imports/app/shared/index.ts
new file mode 100644
index 0000000..d9104e8
--- /dev/null
+++ b/client/imports/app/shared/index.ts
@@ -0,0 +1,5 @@
+import { DisplayNamePipe } from './display-name.pipe';
+
+export const SHARED_DECLARATIONS: any[] = [
+  DisplayNamePipe
+];
-- 
2.10.2


From 27cc946be36e188114f86b2fab19bc6cbd99a516 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:51:49 +0200
Subject: [PATCH 120/304] Step 14.10: Import those declarations to AppModule

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 65145a8..383ed58 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -8,6 +8,7 @@ import { Ng2PaginationModule } from 'ng2-pagination';
 import { AppComponent } from './app.component';
 import { routes, ROUTES_PROVIDERS } from './app.routes';
 import { PARTIES_DECLARATIONS } from './parties';
+import { SHARED_DECLARATIONS } from './shared';
 
 @NgModule({
   imports: [
@@ -20,7 +21,8 @@ import { PARTIES_DECLARATIONS } from './parties';
   ],
   declarations: [
     AppComponent,
-    ...PARTIES_DECLARATIONS
+    ...PARTIES_DECLARATIONS,
+    ...SHARED_DECLARATIONS
   ],
   providers: [
     ...ROUTES_PROVIDERS
-- 
2.10.2


From 8dec0d979e7843998720402e53173370afdeafe8 Mon Sep 17 00:00:00 2001
From: Kamil Kisiela <kamil.kisiela@gmail.com>
Date: Fri, 23 Sep 2016 17:54:00 +0200
Subject: [PATCH 121/304] Step 14.11: Use this Pipe in PartyDetails

---
 client/imports/app/parties/party-details.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index 2ce1e72..78e0c41 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -15,6 +15,6 @@
 <p>Users to invite:</p>
 <ul>
   <li *ngFor="let user of users | async">
-    <div>{{user.emails[0].address}}</div>
+    <div>{{user | displayName}}</div>
   </li>
 </ul>
-- 
2.10.2


From 8080d9bd6ba388ff484a617a018825b117991170 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:51 -0200
Subject: [PATCH 122/304] Step 14: Using and creating AngularJS filters

---
 manuals/templates/step14.md |  93 ++++++++++++
 manuals/views/step14.md     | 347 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 440 insertions(+)
 create mode 100644 manuals/templates/step14.md
 create mode 100644 manuals/views/step14.md

diff --git a/manuals/templates/step14.md b/manuals/templates/step14.md
new file mode 100644
index 0000000..818cb35
--- /dev/null
+++ b/manuals/templates/step14.md
@@ -0,0 +1,93 @@
+In this and next steps we are going to:
+
+- add party invitations;
+- filter data with Angular2 pipes
+- learn about Meteor methods
+
+# Rendering Users
+
+We'll start by working on the `PartyDetails` component. Each party owner should be able to invite multiple guests to a party, hence, the user needs to be able to manipulate the data on the party details page.
+
+First of all, we'll need to render a list of all users to invite on the page. Since we've made the app secure during step 8 by removing the _insecure_ package, to get a list of users — the same as for the parties — we'll need to create a new publication, and then subscribe to load the user collection.
+
+Let's create a new file `server/imports/publications/users.ts` and add a new publication there. We can start by finding all uninvited users, specifically, users who are not invited and not the current user.
+
+{{{diff_step 14.1}}}
+
+Notice that we've made use of a special Mongo selector [`$nin`](https://docs.mongodb.org/manual/reference/operator/query/nin/),
+meaning "not in", to sift out users that have already been invited to this party so far.
+We used [`$ne`](https://docs.mongodb.org/manual/reference/operator/query/ne/) to select ids
+that are "not equal" to the user's id.
+
+As you can see above, we've introduced a new party property — "invited", which is going to be an array of all invited user IDs.
+
+Now, let's update the Party interface to contain the new field:
+
+{{{diff_step 14.2}}}
+
+Next, import the users publication to be defined on the server during startup:
+
+{{{diff_step 14.3}}}
+
+Now, let's create a new Collection with RxJS support for the users collection. Meteor have a built-in users collection, so we just need to wrap it using `MongoObservable.fromExisting`:
+
+{{{diff_step 14.4}}}
+
+And let's create an interface for the User object:
+
+{{{diff_step 14.5}}}
+
+Then, let's load the uninvited users of a particular party into the `PartyDetails` component.
+
+We will use `MeteorObservable.subscribe` to subscribe to the data, and we use `.find` on the `Users` collection in order to fetch the user's details:
+
+{{{diff_step 14.6}}}
+
+Now, render the uninvited users on the `PartyDetails`'s page:
+
+{{{diff_step 14.7}}}
+
+> Remember? we use `async` Pipe because we use RxJS `Observable`
+
+# Implementing Pipes
+
+In the previous section we rendered a list of user emails. In Meteor's [accounts package](http://docs.meteor.com/#/full/accounts_api) an email is considered a primary user ID by default. At the same time, everything is configurable, which means there is way for a user to set a custom username to be identified with during the registration. Considering usernames are more visually appealing than emails, let's render them instead of emails in that list of uninvited users checking if the name is set for each user.
+
+For that purpose we could create a private component method and call it each time in the template to get the right display name, i.e., username or email. Instead, we'll implement a special pipe that handles this, at the same time, we'll learn how to create stateless pipes. One of the advantages of this approach in comparison to class methods is that we can use the same pipe in any component. You can read [the docs](https://angular.io/docs/ts/latest/guide/pipes.html) to know more about Angular2 Pipes.
+
+Let's add a new folder "client/imports/app/shared" and place a new file `display-name.pipe.ts`. We'll add our new `displayName` pipe inside of it:
+
+{{{diff_step 14.8}}}
+
+As you can see, there are a couple of things to remember in order to create a pipe:
+
+- define a class that implements the `PipeTransform` interface, with an implemented method `transform` inside
+- place pipe metadata upon this class with the help of the `@Pipe` decorator to notify Angular 2 that this class essentially is a pipe
+
+Now, in order to use this Pipe, we need to declare it in the `NgModule`, so first let's create an index file for all of the shared declarations:
+
+{{{diff_step 14.9}}}
+
+And import the exposed Array in our `NgModule` definition:
+
+{{{diff_step 14.10}}}
+
+To make use of the created pipe, change the markup of the `PartyDetails`'s template to:
+
+{{{diff_step 14.11}}}
+
+If you were familiar with Angular 1's filters concept, you might believe that Angular 2's pipes are very similar. This is both true and not. While the view syntax and aims they are used for are the same, there are some important differences. The main one is that Angular 2 can now efficiently handle _stateful_ pipes, whereas stateful filters were discouraged in Angular 1. Another thing to note is that Angular 2 pipes are defined in the unique and elegant Angular 2 way, i.e., using classes and class metadata, the same as for components and their views.
+
+# Challenge
+
+In order to cement our knowledge of using pipes, try to create a current user status pipe, which transforms the current user in a party to one of three values: owner, invited and uninvited. This will be helpful in the next step, where we'll get to the implementation of the invitation feature and will change the current UI for improved security.
+
+# Summary
+
+In this step, we learned about:
+
+- how to implement pipes in Angular 2, and how they different from filters in Angular 1
+- configuring our accounts-ui package
+- some Mongo query operators like `$nin` & `$ne`
+
+In the next step we'll look at using Meteor methods as a way to securely verify client-side data changes on the server.
diff --git a/manuals/views/step14.md b/manuals/views/step14.md
new file mode 100644
index 0000000..a05b7b5
--- /dev/null
+++ b/manuals/views/step14.md
@@ -0,0 +1,347 @@
+[{]: <region> (header)
+# Step 14: Using and creating AngularJS filters
+[}]: #
+[{]: <region> (body)
+In this and next steps we are going to:
+
+- add party invitations;
+- filter data with Angular2 pipes
+- learn about Meteor methods
+
+# Rendering Users
+
+We'll start by working on the `PartyDetails` component. Each party owner should be able to invite multiple guests to a party, hence, the user needs to be able to manipulate the data on the party details page.
+
+First of all, we'll need to render a list of all users to invite on the page. Since we've made the app secure during step 8 by removing the _insecure_ package, to get a list of users — the same as for the parties — we'll need to create a new publication, and then subscribe to load the user collection.
+
+Let's create a new file `server/imports/publications/users.ts` and add a new publication there. We can start by finding all uninvited users, specifically, users who are not invited and not the current user.
+
+[{]: <helper> (diff_step 14.1)
+#### Step 14.1: Add uninvited users publication
+
+##### Added server/imports/publications/users.ts
+```diff
+@@ -0,0 +1,18 @@
++┊  ┊ 1┊import { Meteor } from 'meteor/meteor';
++┊  ┊ 2┊
++┊  ┊ 3┊import { Parties } from '../../../both/collections/parties.collection';
++┊  ┊ 4┊
++┊  ┊ 5┊Meteor.publish('uninvited', function (partyId: string) {
++┊  ┊ 6┊  const party = Parties.findOne(partyId);
++┊  ┊ 7┊
++┊  ┊ 8┊  if (!party) {
++┊  ┊ 9┊    throw new Meteor.Error('404', 'No such party!');
++┊  ┊10┊  }
++┊  ┊11┊
++┊  ┊12┊  return Meteor.users.find({
++┊  ┊13┊    _id: {
++┊  ┊14┊      $nin: party.invited || [],
++┊  ┊15┊      $ne: this.userId
++┊  ┊16┊    }
++┊  ┊17┊  });
++┊  ┊18┊});
+```
+[}]: #
+
+Notice that we've made use of a special Mongo selector [`$nin`](https://docs.mongodb.org/manual/reference/operator/query/nin/),
+meaning "not in", to sift out users that have already been invited to this party so far.
+We used [`$ne`](https://docs.mongodb.org/manual/reference/operator/query/ne/) to select ids
+that are "not equal" to the user's id.
+
+As you can see above, we've introduced a new party property — "invited", which is going to be an array of all invited user IDs.
+
+Now, let's update the Party interface to contain the new field:
+
+[{]: <helper> (diff_step 14.2)
+#### Step 14.2: Add invited to Party interface
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -6,4 +6,5 @@
+ ┊ 6┊ 6┊  location: string;
+ ┊ 7┊ 7┊  owner?: string;
+ ┊ 8┊ 8┊  public: boolean;
++┊  ┊ 9┊  invited?: string[];
+ ┊ 9┊10┊}
+```
+[}]: #
+
+Next, import the users publication to be defined on the server during startup:
+
+[{]: <helper> (diff_step 14.3)
+#### Step 14.3: Use it on the server
+
+##### Changed server/main.ts
+```diff
+@@ -2,7 +2,8 @@
+ ┊2┊2┊
+ ┊3┊3┊import { loadParties } from './imports/fixtures/parties';
+ ┊4┊4┊
+-┊5┊ ┊import './imports/publications/parties'; 
++┊ ┊5┊import './imports/publications/parties';
++┊ ┊6┊import './imports/publications/users'; 
+ ┊6┊7┊
+ ┊7┊8┊Meteor.startup(() => {
+ ┊8┊9┊  loadParties();
+```
+[}]: #
+
+Now, let's create a new Collection with RxJS support for the users collection. Meteor have a built-in users collection, so we just need to wrap it using `MongoObservable.fromExisting`:
+
+[{]: <helper> (diff_step 14.4)
+#### Step 14.4: Create Users collection from Meteor.users
+
+##### Added both/collections/users.collection.ts
+```diff
+@@ -0,0 +1,4 @@
++┊ ┊1┊import { MongoObservable } from 'meteor-rxjs';
++┊ ┊2┊import { Meteor } from 'meteor/meteor';
++┊ ┊3┊
++┊ ┊4┊export const Users = MongoObservable.fromExisting(Meteor.users);
+```
+[}]: #
+
+And let's create an interface for the User object:
+
+[{]: <helper> (diff_step 14.5)
+#### Step 14.5: Create also User interface
+
+##### Added both/models/user.model.ts
+```diff
+@@ -0,0 +1,3 @@
++┊ ┊1┊import { Meteor } from 'meteor/meteor';
++┊ ┊2┊
++┊ ┊3┊export interface User extends Meteor.User {}
+```
+[}]: #
+
+Then, let's load the uninvited users of a particular party into the `PartyDetails` component.
+
+We will use `MeteorObservable.subscribe` to subscribe to the data, and we use `.find` on the `Users` collection in order to fetch the user's details:
+
+[{]: <helper> (diff_step 14.6)
+#### Step 14.6: Implement subscription of uninvited users
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊import { Component, OnInit, OnDestroy } from '@angular/core';
+ ┊2┊2┊import { ActivatedRoute } from '@angular/router';
++┊ ┊3┊import { Observable } from 'rxjs/Observable';
+ ┊3┊4┊import { Subscription } from 'rxjs/Subscription';
+ ┊4┊5┊import { Meteor } from 'meteor/meteor';
+ ┊5┊6┊import { MeteorObservable } from 'meteor-rxjs';
+```
+```diff
+@@ -8,6 +9,8 @@
+ ┊ 8┊ 9┊
+ ┊ 9┊10┊import { Parties } from '../../../../both/collections/parties.collection';
+ ┊10┊11┊import { Party } from '../../../../both/models/party.model';
++┊  ┊12┊import { Users } from '../../../../both/collections/users.collection';
++┊  ┊13┊import { User } from '../../../../both/models/user.model';
+ ┊11┊14┊
+ ┊12┊15┊import template from './party-details.component.html';
+ ┊13┊16┊
+```
+```diff
+@@ -20,6 +23,8 @@
+ ┊20┊23┊  paramsSub: Subscription;
+ ┊21┊24┊  party: Party;
+ ┊22┊25┊  partySub: Subscription;
++┊  ┊26┊  users: Observable<User>;
++┊  ┊27┊  uninvitedSub: Subscription;
+ ┊23┊28┊
+ ┊24┊29┊  constructor(
+ ┊25┊30┊    private route: ActivatedRoute
+```
+```diff
+@@ -38,6 +43,18 @@
+ ┊38┊43┊        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
+ ┊39┊44┊          this.party = Parties.findOne(this.partyId);
+ ┊40┊45┊        });
++┊  ┊46┊
++┊  ┊47┊        if (this.uninvitedSub) {
++┊  ┊48┊          this.uninvitedSub.unsubscribe();
++┊  ┊49┊        }
++┊  ┊50┊
++┊  ┊51┊        this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {
++┊  ┊52┊           this.users = Users.find({
++┊  ┊53┊             _id: {
++┊  ┊54┊               $ne: Meteor.userId()
++┊  ┊55┊              }
++┊  ┊56┊            }).zone();
++┊  ┊57┊        });
+ ┊41┊58┊      });
+ ┊42┊59┊  }
+ ┊43┊60┊
+```
+```diff
+@@ -59,5 +76,6 @@
+ ┊59┊76┊  ngOnDestroy() {
+ ┊60┊77┊    this.paramsSub.unsubscribe();
+ ┊61┊78┊    this.partySub.unsubscribe();
++┊  ┊79┊    this.uninvitedSub.unsubscribe();
+ ┊62┊80┊  }
+ ┊63┊81┊}
+```
+[}]: #
+
+Now, render the uninvited users on the `PartyDetails`'s page:
+
+[{]: <helper> (diff_step 14.7)
+#### Step 14.7: Display list of uninvited users
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -10,4 +10,11 @@
+ ┊10┊10┊
+ ┊11┊11┊  <button type="submit">Save</button>
+ ┊12┊12┊  <a [routerLink]="['/']">Cancel</a>
+-┊13┊  ┊</form>🚫↵
++┊  ┊13┊</form>
++┊  ┊14┊
++┊  ┊15┊<p>Users to invite:</p>
++┊  ┊16┊<ul>
++┊  ┊17┊  <li *ngFor="let user of users | async">
++┊  ┊18┊    <div>{{user.emails[0].address}}</div>
++┊  ┊19┊  </li>
++┊  ┊20┊</ul>
+```
+[}]: #
+
+> Remember? we use `async` Pipe because we use RxJS `Observable`
+
+# Implementing Pipes
+
+In the previous section we rendered a list of user emails. In Meteor's [accounts package](http://docs.meteor.com/#/full/accounts_api) an email is considered a primary user ID by default. At the same time, everything is configurable, which means there is way for a user to set a custom username to be identified with during the registration. Considering usernames are more visually appealing than emails, let's render them instead of emails in that list of uninvited users checking if the name is set for each user.
+
+For that purpose we could create a private component method and call it each time in the template to get the right display name, i.e., username or email. Instead, we'll implement a special pipe that handles this, at the same time, we'll learn how to create stateless pipes. One of the advantages of this approach in comparison to class methods is that we can use the same pipe in any component. You can read [the docs](https://angular.io/docs/ts/latest/guide/pipes.html) to know more about Angular2 Pipes.
+
+Let's add a new folder "client/imports/app/shared" and place a new file `display-name.pipe.ts`. We'll add our new `displayName` pipe inside of it:
+
+[{]: <helper> (diff_step 14.8)
+#### Step 14.8: Create DisplayNamePipe
+
+##### Added client/imports/app/shared/display-name.pipe.ts
+```diff
+@@ -0,0 +1,25 @@
++┊  ┊ 1┊import { Pipe, PipeTransform } from '@angular/core';
++┊  ┊ 2┊import { Meteor } from 'meteor/meteor';
++┊  ┊ 3┊
++┊  ┊ 4┊import { User } from '../../../../both/models/user.model';
++┊  ┊ 5┊
++┊  ┊ 6┊@Pipe({
++┊  ┊ 7┊  name: 'displayName'
++┊  ┊ 8┊})
++┊  ┊ 9┊export class DisplayNamePipe implements PipeTransform {
++┊  ┊10┊  transform(user: User): string {
++┊  ┊11┊    if (!user) {
++┊  ┊12┊      return '';
++┊  ┊13┊    }
++┊  ┊14┊
++┊  ┊15┊    if (user.username) {
++┊  ┊16┊      return user.username;
++┊  ┊17┊    }
++┊  ┊18┊
++┊  ┊19┊    if (user.emails) {
++┊  ┊20┊      return user.emails[0].address;
++┊  ┊21┊    }
++┊  ┊22┊
++┊  ┊23┊    return '';
++┊  ┊24┊  }
++┊  ┊25┊}
+```
+[}]: #
+
+As you can see, there are a couple of things to remember in order to create a pipe:
+
+- define a class that implements the `PipeTransform` interface, with an implemented method `transform` inside
+- place pipe metadata upon this class with the help of the `@Pipe` decorator to notify Angular 2 that this class essentially is a pipe
+
+Now, in order to use this Pipe, we need to declare it in the `NgModule`, so first let's create an index file for all of the shared declarations:
+
+[{]: <helper> (diff_step 14.9)
+#### Step 14.9: Make space for shared declarations
+
+##### Added client/imports/app/shared/index.ts
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊import { DisplayNamePipe } from './display-name.pipe';
++┊ ┊2┊
++┊ ┊3┊export const SHARED_DECLARATIONS: any[] = [
++┊ ┊4┊  DisplayNamePipe
++┊ ┊5┊];
+```
+[}]: #
+
+And import the exposed Array in our `NgModule` definition:
+
+[{]: <helper> (diff_step 14.10)
+#### Step 14.10: Import those declarations to AppModule
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -8,6 +8,7 @@
+ ┊ 8┊ 8┊import { AppComponent } from './app.component';
+ ┊ 9┊ 9┊import { routes, ROUTES_PROVIDERS } from './app.routes';
+ ┊10┊10┊import { PARTIES_DECLARATIONS } from './parties';
++┊  ┊11┊import { SHARED_DECLARATIONS } from './shared';
+ ┊11┊12┊
+ ┊12┊13┊@NgModule({
+ ┊13┊14┊  imports: [
+```
+```diff
+@@ -20,7 +21,8 @@
+ ┊20┊21┊  ],
+ ┊21┊22┊  declarations: [
+ ┊22┊23┊    AppComponent,
+-┊23┊  ┊    ...PARTIES_DECLARATIONS
++┊  ┊24┊    ...PARTIES_DECLARATIONS,
++┊  ┊25┊    ...SHARED_DECLARATIONS
+ ┊24┊26┊  ],
+ ┊25┊27┊  providers: [
+ ┊26┊28┊    ...ROUTES_PROVIDERS
+```
+[}]: #
+
+To make use of the created pipe, change the markup of the `PartyDetails`'s template to:
+
+[{]: <helper> (diff_step 14.11)
+#### Step 14.11: Use this Pipe in PartyDetails
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -15,6 +15,6 @@
+ ┊15┊15┊<p>Users to invite:</p>
+ ┊16┊16┊<ul>
+ ┊17┊17┊  <li *ngFor="let user of users | async">
+-┊18┊  ┊    <div>{{user.emails[0].address}}</div>
++┊  ┊18┊    <div>{{user | displayName}}</div>
+ ┊19┊19┊  </li>
+ ┊20┊20┊</ul>
+```
+[}]: #
+
+If you were familiar with Angular 1's filters concept, you might believe that Angular 2's pipes are very similar. This is both true and not. While the view syntax and aims they are used for are the same, there are some important differences. The main one is that Angular 2 can now efficiently handle _stateful_ pipes, whereas stateful filters were discouraged in Angular 1. Another thing to note is that Angular 2 pipes are defined in the unique and elegant Angular 2 way, i.e., using classes and class metadata, the same as for components and their views.
+
+# Challenge
+
+In order to cement our knowledge of using pipes, try to create a current user status pipe, which transforms the current user in a party to one of three values: owner, invited and uninvited. This will be helpful in the next step, where we'll get to the implementation of the invitation feature and will change the current UI for improved security.
+
+# Summary
+
+In this step, we learned about:
+
+- how to implement pipes in Angular 2, and how they different from filters in Angular 1
+- configuring our accounts-ui package
+- some Mongo query operators like `$nin` & `$ne`
+
+In the next step we'll look at using Meteor methods as a way to securely verify client-side data changes on the server.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step13.md) | [Next Step >](step15.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From c5602e05b9ff35c4c6709c80517fd8711dc76a94 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:24:02 +0300
Subject: [PATCH 123/304] Step 15.1: Add a party invitation method

---
 both/methods/parties.methods.ts | 47 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 47 insertions(+)
 create mode 100644 both/methods/parties.methods.ts

diff --git a/both/methods/parties.methods.ts b/both/methods/parties.methods.ts
new file mode 100644
index 0000000..cc324f9
--- /dev/null
+++ b/both/methods/parties.methods.ts
@@ -0,0 +1,47 @@
+import {Parties} from '../collections/parties.collection';
+import {Email} from 'meteor/email';
+import {check} from 'meteor/check';
+import {Meteor} from 'meteor/meteor';
+
+function getContactEmail(user:Meteor.User):string {
+  if (user.emails && user.emails.length)
+    return user.emails[0].address;
+
+  return null;
+}
+
+Meteor.methods({
+  invite: function (partyId:string, userId:string) {
+    check(partyId, String);
+    check(userId, String);
+
+    let party = Parties.collection.findOne(partyId);
+
+    if (!party)
+      throw new Meteor.Error('404', 'No such party!');
+
+    if (party.public)
+      throw new Meteor.Error('400', 'That party is public. No need to invite people.');
+
+    if (party.owner !== this.userId)
+      throw new Meteor.Error('403', 'No permissions!');
+
+    if (userId !== party.owner && (party.invited || []).indexOf(userId) == -1) {
+      Parties.collection.update(partyId, {$addToSet: {invited: userId}});
+
+      let from = getContactEmail(Meteor.users.findOne(this.userId));
+      let to = getContactEmail(Meteor.users.findOne(userId));
+
+      if (Meteor.isServer && to) {
+        Email.send({
+          from: 'noreply@socially.com',
+          to: to,
+          replyTo: from || undefined,
+          subject: 'PARTY: ' + party.name,
+          text: `Hi, I just invited you to ${party.name} on Socially.
+                        \n\nCome check it out: ${Meteor.absoluteUrl()}\n`
+        });
+      }
+    }
+  }
+});
\ No newline at end of file
-- 
2.10.2


From 017e8b8c264bc454198beb9b7f3a03b95223c5a0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:24:34 +0300
Subject: [PATCH 124/304] Step 15.2: Import methods on the server side

---
 server/main.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/server/main.ts b/server/main.ts
index f6356dd..7979c05 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -3,7 +3,8 @@ import { Meteor } from 'meteor/meteor';
 import { loadParties } from './imports/fixtures/parties';
 
 import './imports/publications/parties';
-import './imports/publications/users'; 
+import './imports/publications/users';
+import '../both/methods/parties.methods';
 
 Meteor.startup(() => {
   loadParties();
-- 
2.10.2


From ea7bc0f54c78adeaca06c21aaccc6f35c0f3c776 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:25:20 +0300
Subject: [PATCH 125/304] Step 15.3: Import methods on the client side

---
 client/main.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index c5323fd..45d1530 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -4,5 +4,7 @@ import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 
 import { AppModule } from './imports/app/app.module';
 
+import '../both/methods/parties.methods';
+
 const platform = platformBrowserDynamic();
 platform.bootstrapModule(AppModule);
\ No newline at end of file
-- 
2.10.2


From 048939d51fc8b7d5bf2f84473c6a4664e98ec3db Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:27:04 +0300
Subject: [PATCH 126/304] Step 15.4: Add check and email packages

---
 .meteor/packages | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 97bd58e..22ef14f 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -23,3 +23,5 @@ dispatch:mocha-phantomjs
 shell-server@0.2.1
 accounts-password
 tmeasday:publish-counts
+check
+email
-- 
2.10.2


From 531459dc3d4d2de70d5545d753801272a5282c3d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:29:09 +0300
Subject: [PATCH 127/304] Step 15.5: Add invite method

---
 client/imports/app/parties/party-details.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index 78e0c41..28c9588 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -16,5 +16,6 @@
 <ul>
   <li *ngFor="let user of users | async">
     <div>{{user | displayName}}</div>
+    <button (click)="invite(user)">Invite</button>
   </li>
 </ul>
-- 
2.10.2


From f8411a1c62d5ac5b84253c10cd3320fc54c8840d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:31:02 +0300
Subject: [PATCH 128/304] Step 15.6: Add the click handler in the Component

---
 client/imports/app/parties/party-details.component.ts | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 246243e..d17eb1f 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -73,6 +73,14 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
     });
   }
 
+  invite(user: Meteor.User) {
+    MeteorObservable.call('invite', this.party._id, user._id).subscribe(() => {
+      alert('User successfully invited.');
+    }, (error) => {
+      alert(`Failed to invite due to ${error}`);
+    });
+  }
+
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
     this.partySub.unsubscribe();
-- 
2.10.2


From 98b3518aca0ee5f4c3a466296c06a13ec3c1c91c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:42:39 +0300
Subject: [PATCH 129/304] Step 15.7: Get the party reactively

---
 client/imports/app/parties/party-details.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index d17eb1f..fb07803 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -41,7 +41,9 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
         }
 
         this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
-          this.party = Parties.findOne(this.partyId);
+          MeteorObservable.autorun().subscribe(() => {
+            this.party = Parties.findOne(this.partyId);
+          });
         });
 
         if (this.uninvitedSub) {
-- 
2.10.2


From 31797b5fa94441e89cac47fc0ddf3e96593e98ef Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:44:39 +0300
Subject: [PATCH 130/304] Step 15.8: Update the users list reactively

---
 client/imports/app/parties/party-details.component.ts | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index fb07803..8d877f6 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -43,6 +43,7 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
         this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
           MeteorObservable.autorun().subscribe(() => {
             this.party = Parties.findOne(this.partyId);
+            this.getUsers(this.party);
           });
         });
 
@@ -51,15 +52,22 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
         }
 
         this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {
-           this.users = Users.find({
-             _id: {
-               $ne: Meteor.userId()
-              }
-            }).zone();
+          this.getUsers(this.party);
         });
       });
   }
 
+  getUsers(party: Party) {
+    if (party) {
+      this.users = Users.find({
+        _id: {
+          $nin: party.invited || [],
+          $ne: Meteor.userId()
+        }
+      }).zone();
+    }
+  }
+
   saveParty() {
     if (!Meteor.userId()) {
       alert('Please log in to change this party');
-- 
2.10.2


From 4170609cccf7dcfd0e06b4cc3244d012f4242b42 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:47:08 +0300
Subject: [PATCH 131/304] Step 15.9: Show private parties to the invited and
 owners only

---
 server/imports/publications/parties.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 34c9470..4742280 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -36,6 +36,12 @@ function buildQuery(partyId?: string, location?: string): Object {
           $exists: true
         }
       }]
+    },
+    {
+      $and: [
+        { invited: this.userId },
+        { invited: { $exists: true } }
+      ]
     }]
   };
 
-- 
2.10.2


From c1a7d342cce8bc952ac68fdd4b3f3d0b1c676e9f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:48:03 +0300
Subject: [PATCH 132/304] Step 15.10: Add a reply method

---
 both/methods/parties.methods.ts | 45 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/both/methods/parties.methods.ts b/both/methods/parties.methods.ts
index cc324f9..ac0bfc7 100644
--- a/both/methods/parties.methods.ts
+++ b/both/methods/parties.methods.ts
@@ -43,5 +43,50 @@ Meteor.methods({
         });
       }
     }
+  },
+  reply: function(partyId: string, rsvp: string) {
+    check(partyId, String);
+    check(rsvp, String);
+
+    if (!this.userId)
+      throw new Meteor.Error('403', 'You must be logged-in to reply');
+
+    if (['yes', 'no', 'maybe'].indexOf(rsvp) === -1)
+      throw new Meteor.Error('400', 'Invalid RSVP');
+
+    let party = Parties.findOne({ _id: partyId });
+
+    if (!party)
+      throw new Meteor.Error('404', 'No such party');
+
+    if (party.owner === this.userId)
+      throw new Meteor.Error('500', 'You are the owner!');
+
+    if (!party.public && (!party.invited || party.invited.indexOf(this.userId) == -1))
+      throw new Meteor.Error('403', 'No such party'); // its private, but let's not tell this to the user
+
+    let rsvpIndex = party.rsvps ? party.rsvps.findIndex((rsvp) => rsvp.userId === this.userId) : -1;
+
+    if (rsvpIndex !== -1) {
+      // update existing rsvp entry
+      if (Meteor.isServer) {
+        // update the appropriate rsvp entry with $
+        Parties.update(
+          { _id: partyId, 'rsvps.userId': this.userId },
+          { $set: { 'rsvps.$.response': rsvp } });
+      } else {
+        // minimongo doesn't yet support $ in modifier. as a temporary
+        // workaround, make a modifier that uses an index. this is
+        // safe on the client since there's only one thread.
+        let modifier = { $set: {} };
+        modifier.$set['rsvps.' + rsvpIndex + '.response'] = rsvp;
+
+        Parties.update(partyId, modifier);
+      }
+    } else {
+      // add new rsvp entry
+      Parties.update(partyId,
+        { $push: { rsvps: { userId: this.userId, response: rsvp } } });
+    }
   }
 });
\ No newline at end of file
-- 
2.10.2


From e56d76b0d6e1493d2871896b926e2c79000640cf Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:48:46 +0300
Subject: [PATCH 133/304] Step 15.11: Add RSVP interface

---
 both/models/party.model.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index 64e6ae1..9f7c41e 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -7,4 +7,10 @@ export interface Party extends CollectionObject {
   owner?: string;
   public: boolean;
   invited?: string[];
+  rsvps?: RSVP[];
 }
+
+interface RSVP {
+  userId: string;
+  response: string;
+}
\ No newline at end of file
-- 
2.10.2


From e9582c254822ba4b0045fb44b5cde46c33eafda9 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:49:22 +0300
Subject: [PATCH 134/304] Step 15.12: Add reponse buttons

---
 client/imports/app/parties/party-details.component.html | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index 28c9588..a3e173d 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -19,3 +19,10 @@
     <button (click)="invite(user)">Invite</button>
   </li>
 </ul>
+
+<div>
+  <h2>Reply to the invitation</h2>
+  <input type="button" value="I'm going!" (click)="reply('yes')">
+  <input type="button" value="Maybe" (click)="reply('maybe')">
+  <input type="button" value="No" (click)="reply('no')">
+</div>
-- 
2.10.2


From 9495cf66974a0f5d6b566ef0fbed88278421be3c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:51:03 +0300
Subject: [PATCH 135/304] Step 15.13: Add reply method to PartyDetails
 component

---
 client/imports/app/parties/party-details.component.ts | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 8d877f6..e70f680 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -91,6 +91,14 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
     });
   }
 
+  reply(rsvp: string) {
+    MeteorObservable.call('reply', this.party._id, rsvp).subscribe(() => {
+      alert('You successfully replied.');
+    }, (error) => {
+      alert(`Failed to reply due to ${error}`);
+    });
+  }
+
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
     this.partySub.unsubscribe();
-- 
2.10.2


From 8babf7758c10d5cfdf4c6847781aea65e1ede7ae Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:59:23 +0300
Subject: [PATCH 136/304] Step 15.14: Add a new response counting pipe

---
 client/imports/app/shared/rsvp.pipe.ts | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)
 create mode 100644 client/imports/app/shared/rsvp.pipe.ts

diff --git a/client/imports/app/shared/rsvp.pipe.ts b/client/imports/app/shared/rsvp.pipe.ts
new file mode 100644
index 0000000..5b5938c
--- /dev/null
+++ b/client/imports/app/shared/rsvp.pipe.ts
@@ -0,0 +1,22 @@
+import {Pipe, PipeTransform} from '@angular/core';
+import {Party} from "../../../../both/models/party.model";
+import {Parties} from "../../../../both/collections/parties.collection";
+
+@Pipe({
+  name: 'rsvp'
+})
+export class RsvpPipe implements PipeTransform {
+  transform(party: Party, type: string): number {
+    if (!type) {
+      return 0;
+    }
+
+    let total = 0;
+    const found = Parties.findOne(party._id);
+
+    if (found)
+      total = found.rsvps ? found.rsvps.filter(rsvp => rsvp.response === type).length : 0;
+
+    return total;
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 84c0009a7ca29d6dc31558b03235b31072c9f998 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:59:34 +0300
Subject: [PATCH 137/304] Step 15.15: Display response statistics on the list

---
 client/imports/app/parties/parties-list.component.html | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index f1083e3..40e51d2 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -20,6 +20,12 @@
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
+      <div>
+        Who is coming:
+        Yes - {{party | rsvp:'yes'}}
+        Maybe - {{party | rsvp:'maybe'}}
+        No - {{party | rsvp:'no'}}
+      </div>
     </li>
   </ul>
 
-- 
2.10.2


From 45535b6dfdcb36c883da3bc9df7bf3262bd42207 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 10:59:44 +0300
Subject: [PATCH 138/304] Step 15.16: Import RsvpPipe

---
 client/imports/app/shared/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/shared/index.ts b/client/imports/app/shared/index.ts
index d9104e8..12c7d64 100644
--- a/client/imports/app/shared/index.ts
+++ b/client/imports/app/shared/index.ts
@@ -1,5 +1,7 @@
 import { DisplayNamePipe } from './display-name.pipe';
+import {RsvpPipe} from "./rsvp.pipe";
 
 export const SHARED_DECLARATIONS: any[] = [
-  DisplayNamePipe
+  DisplayNamePipe,
+  RsvpPipe
 ];
-- 
2.10.2


From e9d7221d83f9f5e1bac4e17e7dfacc188d9c3a05 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:52 -0200
Subject: [PATCH 139/304] Step 15: Meteor methods

---
 manuals/templates/step15.md | 195 +++++++++++++++
 manuals/views/step15.md     | 578 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 773 insertions(+)
 create mode 100644 manuals/templates/step15.md
 create mode 100644 manuals/views/step15.md

diff --git a/manuals/templates/step15.md b/manuals/templates/step15.md
new file mode 100644
index 0000000..19a5afa
--- /dev/null
+++ b/manuals/templates/step15.md
@@ -0,0 +1,195 @@
+In this step we will learn how to use Meteor Methods to
+implement server side logic of the party invitation feature.
+
+> A capital "M" will be used with Meteor "M"ethods to avoid confusion with Javascript function methods
+
+Meteor Methods are a more secure and reliable way to
+implement complex logic on the server side in comparison to the direct
+manipulations of Mongo collections. Also, we'll touch briefly on
+Meteor's UI latency compensation mechanism that comes with these Methods.
+This is one of the great Meteor concepts that allows for rapid UI changes.
+
+# Invitation Method
+
+Let's create a new file `both/methods/parties.methods.ts`, and add the following `invite` Meteor Method:
+
+{{{diff_step 15.1}}}
+
+We used a special API method `Meteor.methods` to register
+a new Meteor Method. Again, don't forget to import your created `parties.methods.ts` module
+in the server's `main.ts` module to have the Methods defined properly:
+
+{{{diff_step 15.2}}}
+
+### Latency Compensation
+
+UI Latency compensation is one of the features that makes Meteor stand out amongst most other Web frameworks, thanks again to the isomorphic environment and Meteor Methods.
+In short, visual changes are applied immediately as a response to some user action,
+even before the server responds to anything. If you want to read up more about how the view can securely be updated
+even before the server is contacted proceed to an [Introduction to Latency Compensation](https://meteorhacks.com/introduction-to-latency-compensation) written by Arunoda.
+
+But to make it happen, we need to define our Methods on the client side as well. Let's import our Methods in `client/main.ts`:
+
+{{{diff_step 15.3}}}
+
+### Validating Methods with Check
+
+As you can see, we've also done a lot of checks to verify that
+all arguments passed down to the method are valid.
+
+First the validity of the arguments' types are checked, and then
+the business logic associated with them is checked.
+
+Type validation checks, which are essential for the JavaScript methods dealing with the storage's data,
+are done with the help of a handy Meteor's package called ["check"](https://atmospherejs.com/meteor/check).
+
+    meteor add check
+
+Then, if everything is valid, we send an invitation email.
+Here we are using another handy Meteor's package titled ["email"](https://atmospherejs.com/meteor/email).
+
+    meteor add email
+
+At this point, we are ready to add a call to the new Method from the client.
+
+Let's add a new button right after each username or email in that
+list of users to invite in the `PartyDetails`'s template:
+
+{{{diff_step 15.5}}}
+
+And then, change the component to handle the click event and invite a user:
+
+{{{diff_step 15.6}}}
+
+> We used `MeteorObservable.call` which triggers a Meteor server method, which triggers `next` callback when the server returns a response, and `error` when the server returns an error.
+
+### Updating Invited Users Reactively
+
+One more thing before we are done with the party owner's invitation
+logic. We, of course, would like to make this list of users
+change reactively, i.e. each user disappears from the list
+when the invitation has been sent successfully.
+
+It's worth mentioning that each party should change appropriately
+when we invite a user — the party `invited` array should update
+in the local Mongo storage. If we wrap the line where
+we get the new party with the `MeteorObservable.autorun` method, this code should
+re-run reactively:
+
+{{{diff_step 15.7}}}
+
+> Now each time the Party object changes, we will re-fetch it from the collection and assign it to the Component property. Our view known to update itself's because we used `zone()` operator in order to connect between Meteor data and Angular change detection.
+
+Now its time to update our users list.
+We'll move the line that gets the users list into a
+separate method, provided with the list of IDs of already invited users;
+and call it whenever we need: right in the above `MeteorObservable.autorun` method after the party assignment and in the subscription, like that:
+
+{{{diff_step 15.8}}}
+
+Here comes test time. Let's add a couple of new users.
+Then login as an old user and add a new party.
+Go to the party: you should see a list of all users including
+newly created ones. Invite several of them — each item in the list
+should disappear after a successful invitation.
+
+What's important to notice here is that each user item in the users list
+disappears right after the click, even before the message about
+the invitation was successfully sent. That's the latency compensation at work!
+
+# User Reply
+
+Here we are going to implement the user reply to the party invitation request.
+
+First of all, let's make parties list a bit more secure,
+which means two things: showing private parties to those who have been invited
+or to owners, and elaborate routing activation defense for the party details view:
+
+{{{diff_step 15.9}}}
+
+The next thing is a party invitee response to the invitation itself. Here, as usual,
+we'll need to update the server side and UI. For the server,
+let's add a new `reply` Meteor Method:
+
+{{{diff_step 15.10}}}
+
+As you can see, a new property, called "rsvp", was added
+above to collect user responses of this particular party.
+One more thing. Let's update the party declaration file to
+make TypeScript resolve and compile with no warnings:
+
+{{{diff_step 15.11}}}
+
+For the UI, let's add three new buttons onto the party details view.
+These will be "yes", "no", "maybe" buttons and users responses accordingly:
+
+{{{diff_step 15.12}}}
+
+Then, handle click events in the PartyDetails component:
+
+{{{diff_step 15.13}}}
+
+### Rsvp Pipe
+
+Last, but not the least, let's show statistics of the invitation responses for the party owner.
+Let's imagine that any party owner
+would like to know the total number of those who declined, accepted, or remain tentative.
+This is a perfect use case to add a new stateful pipe, which takes as
+an input a party and a one of the RSVP responses, and calculates the total number of responses
+associated with this, provided as a parameter we'll call "response".
+
+Add a new pipe to the `client/imports/app/shared/rsvp.pipe.ts` as follows:
+
+{{{diff_step 15.14}}}
+
+The RSVP Pipe fetches the party and returns the count of `rsvps` Array, due the fact that we binded the change detection of Angular 2 and the Meteor data change, each time the data changes, Angular 2 renders the view again, and the RSVP Pipe will run again and update the view with the new number.
+
+It's also worth mentioning that the arguments of a Pipe implementation inside a template are passed to the `transform` method in the same form. Only difference is that the first argument of `transform` is a value to be transformed. In our case, passed only the RSVP response, hence, we are taking the first
+value in the list.
+
+An example:
+
+```js
+// usage: text | subStr:20:50
+@Pipe({name: 'subStr'})
+class SubStrPipe implements PipeTransform {
+  transform(text: string, starts: number, ends: number) {
+    return text.substring(starts, ends);
+  }
+}
+```
+
+Let's make use of this pipe in the `PartiesList` component:
+
+{{{diff_step 15.15}}}
+
+And let's add the new Pipe to the shared declarations file:
+
+{{{diff_step 15.16}}}
+
+Now it's testing time! Check that an invited user is able to reply to an
+invitation, and also verify that the party's statistics update properly and reactively.
+Login as an existing user. Add a new party, go to the party and
+invite some other users. Then, open a new browser window in the anonymous mode along with the current window,
+and login as the invited user there. Go to the party details page, and reply, say, "no";
+the party's statistics on the first page with the parties list should duly update.
+
+# Challenge
+
+There is one important thing that we missed. Besides the party invitation
+statistics, each user would like to know if she has already responded, in case she forgot,
+to a particular invitation. This step's challenge will be to add this status
+information onto the PartyDetails's view and make it update reactively.
+
+> Hint: In order to make it reactive, you'll need to add one more handler into
+> the party `MeteorObservable.autorun`, like the `getUsers` method in the this step above.
+
+# Summary
+
+We've just finished the invitation feature in this step, having added bunch of new stuff.
+Socially is looking much more mature with Meteor Methods on board. We can give ourselves
+a big thumbs-up for that!
+
+Though, some places in the app can certainly be improved. For example,
+we still show some private information to all invited users, which should be designated only for the party owner.
+We'll fix this in the next step.
diff --git a/manuals/views/step15.md b/manuals/views/step15.md
new file mode 100644
index 0000000..17a42f5
--- /dev/null
+++ b/manuals/views/step15.md
@@ -0,0 +1,578 @@
+[{]: <region> (header)
+# Step 15: Meteor methods
+[}]: #
+[{]: <region> (body)
+In this step we will learn how to use Meteor Methods to
+implement server side logic of the party invitation feature.
+
+> A capital "M" will be used with Meteor "M"ethods to avoid confusion with Javascript function methods
+
+Meteor Methods are a more secure and reliable way to
+implement complex logic on the server side in comparison to the direct
+manipulations of Mongo collections. Also, we'll touch briefly on
+Meteor's UI latency compensation mechanism that comes with these Methods.
+This is one of the great Meteor concepts that allows for rapid UI changes.
+
+# Invitation Method
+
+Let's create a new file `both/methods/parties.methods.ts`, and add the following `invite` Meteor Method:
+
+[{]: <helper> (diff_step 15.1)
+#### Step 15.1: Add a party invitation method
+
+##### Added both/methods/parties.methods.ts
+```diff
+@@ -0,0 +1,47 @@
++┊  ┊ 1┊import {Parties} from '../collections/parties.collection';
++┊  ┊ 2┊import {Email} from 'meteor/email';
++┊  ┊ 3┊import {check} from 'meteor/check';
++┊  ┊ 4┊import {Meteor} from 'meteor/meteor';
++┊  ┊ 5┊
++┊  ┊ 6┊function getContactEmail(user:Meteor.User):string {
++┊  ┊ 7┊  if (user.emails && user.emails.length)
++┊  ┊ 8┊    return user.emails[0].address;
++┊  ┊ 9┊
++┊  ┊10┊  return null;
++┊  ┊11┊}
++┊  ┊12┊
++┊  ┊13┊Meteor.methods({
++┊  ┊14┊  invite: function (partyId:string, userId:string) {
++┊  ┊15┊    check(partyId, String);
++┊  ┊16┊    check(userId, String);
++┊  ┊17┊
++┊  ┊18┊    let party = Parties.collection.findOne(partyId);
++┊  ┊19┊
++┊  ┊20┊    if (!party)
++┊  ┊21┊      throw new Meteor.Error('404', 'No such party!');
++┊  ┊22┊
++┊  ┊23┊    if (party.public)
++┊  ┊24┊      throw new Meteor.Error('400', 'That party is public. No need to invite people.');
++┊  ┊25┊
++┊  ┊26┊    if (party.owner !== this.userId)
++┊  ┊27┊      throw new Meteor.Error('403', 'No permissions!');
++┊  ┊28┊
++┊  ┊29┊    if (userId !== party.owner && (party.invited || []).indexOf(userId) == -1) {
++┊  ┊30┊      Parties.collection.update(partyId, {$addToSet: {invited: userId}});
++┊  ┊31┊
++┊  ┊32┊      let from = getContactEmail(Meteor.users.findOne(this.userId));
++┊  ┊33┊      let to = getContactEmail(Meteor.users.findOne(userId));
++┊  ┊34┊
++┊  ┊35┊      if (Meteor.isServer && to) {
++┊  ┊36┊        Email.send({
++┊  ┊37┊          from: 'noreply@socially.com',
++┊  ┊38┊          to: to,
++┊  ┊39┊          replyTo: from || undefined,
++┊  ┊40┊          subject: 'PARTY: ' + party.name,
++┊  ┊41┊          text: `Hi, I just invited you to ${party.name} on Socially.
++┊  ┊42┊                        \n\nCome check it out: ${Meteor.absoluteUrl()}\n`
++┊  ┊43┊        });
++┊  ┊44┊      }
++┊  ┊45┊    }
++┊  ┊46┊  }
++┊  ┊47┊});🚫↵
+```
+[}]: #
+
+We used a special API method `Meteor.methods` to register
+a new Meteor Method. Again, don't forget to import your created `parties.methods.ts` module
+in the server's `main.ts` module to have the Methods defined properly:
+
+[{]: <helper> (diff_step 15.2)
+#### Step 15.2: Import methods on the server side
+
+##### Changed server/main.ts
+```diff
+@@ -3,7 +3,8 @@
+ ┊ 3┊ 3┊import { loadParties } from './imports/fixtures/parties';
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊import './imports/publications/parties';
+-┊ 6┊  ┊import './imports/publications/users'; 
++┊  ┊ 6┊import './imports/publications/users';
++┊  ┊ 7┊import '../both/methods/parties.methods';
+ ┊ 7┊ 8┊
+ ┊ 8┊ 9┊Meteor.startup(() => {
+ ┊ 9┊10┊  loadParties();
+```
+[}]: #
+
+### Latency Compensation
+
+UI Latency compensation is one of the features that makes Meteor stand out amongst most other Web frameworks, thanks again to the isomorphic environment and Meteor Methods.
+In short, visual changes are applied immediately as a response to some user action,
+even before the server responds to anything. If you want to read up more about how the view can securely be updated
+even before the server is contacted proceed to an [Introduction to Latency Compensation](https://meteorhacks.com/introduction-to-latency-compensation) written by Arunoda.
+
+But to make it happen, we need to define our Methods on the client side as well. Let's import our Methods in `client/main.ts`:
+
+[{]: <helper> (diff_step 15.3)
+#### Step 15.3: Import methods on the client side
+
+##### Changed client/main.ts
+```diff
+@@ -4,5 +4,7 @@
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊import { AppModule } from './imports/app/app.module';
+ ┊ 6┊ 6┊
++┊  ┊ 7┊import '../both/methods/parties.methods';
++┊  ┊ 8┊
+ ┊ 7┊ 9┊const platform = platformBrowserDynamic();
+ ┊ 8┊10┊platform.bootstrapModule(AppModule);🚫↵
+```
+[}]: #
+
+### Validating Methods with Check
+
+As you can see, we've also done a lot of checks to verify that
+all arguments passed down to the method are valid.
+
+First the validity of the arguments' types are checked, and then
+the business logic associated with them is checked.
+
+Type validation checks, which are essential for the JavaScript methods dealing with the storage's data,
+are done with the help of a handy Meteor's package called ["check"](https://atmospherejs.com/meteor/check).
+
+    meteor add check
+
+Then, if everything is valid, we send an invitation email.
+Here we are using another handy Meteor's package titled ["email"](https://atmospherejs.com/meteor/email).
+
+    meteor add email
+
+At this point, we are ready to add a call to the new Method from the client.
+
+Let's add a new button right after each username or email in that
+list of users to invite in the `PartyDetails`'s template:
+
+[{]: <helper> (diff_step 15.5)
+#### Step 15.5: Add invite method
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -16,5 +16,6 @@
+ ┊16┊16┊<ul>
+ ┊17┊17┊  <li *ngFor="let user of users | async">
+ ┊18┊18┊    <div>{{user | displayName}}</div>
++┊  ┊19┊    <button (click)="invite(user)">Invite</button>
+ ┊19┊20┊  </li>
+ ┊20┊21┊</ul>
+```
+[}]: #
+
+And then, change the component to handle the click event and invite a user:
+
+[{]: <helper> (diff_step 15.6)
+#### Step 15.6: Add the click handler in the Component
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -73,6 +73,14 @@
+ ┊73┊73┊    });
+ ┊74┊74┊  }
+ ┊75┊75┊
++┊  ┊76┊  invite(user: Meteor.User) {
++┊  ┊77┊    MeteorObservable.call('invite', this.party._id, user._id).subscribe(() => {
++┊  ┊78┊      alert('User successfully invited.');
++┊  ┊79┊    }, (error) => {
++┊  ┊80┊      alert(`Failed to invite due to ${error}`);
++┊  ┊81┊    });
++┊  ┊82┊  }
++┊  ┊83┊
+ ┊76┊84┊  ngOnDestroy() {
+ ┊77┊85┊    this.paramsSub.unsubscribe();
+ ┊78┊86┊    this.partySub.unsubscribe();
+```
+[}]: #
+
+> We used `MeteorObservable.call` which triggers a Meteor server method, which triggers `next` callback when the server returns a response, and `error` when the server returns an error.
+
+### Updating Invited Users Reactively
+
+One more thing before we are done with the party owner's invitation
+logic. We, of course, would like to make this list of users
+change reactively, i.e. each user disappears from the list
+when the invitation has been sent successfully.
+
+It's worth mentioning that each party should change appropriately
+when we invite a user — the party `invited` array should update
+in the local Mongo storage. If we wrap the line where
+we get the new party with the `MeteorObservable.autorun` method, this code should
+re-run reactively:
+
+[{]: <helper> (diff_step 15.7)
+#### Step 15.7: Get the party reactively
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -41,7 +41,9 @@
+ ┊41┊41┊        }
+ ┊42┊42┊
+ ┊43┊43┊        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
+-┊44┊  ┊          this.party = Parties.findOne(this.partyId);
++┊  ┊44┊          MeteorObservable.autorun().subscribe(() => {
++┊  ┊45┊            this.party = Parties.findOne(this.partyId);
++┊  ┊46┊          });
+ ┊45┊47┊        });
+ ┊46┊48┊
+ ┊47┊49┊        if (this.uninvitedSub) {
+```
+[}]: #
+
+> Now each time the Party object changes, we will re-fetch it from the collection and assign it to the Component property. Our view known to update itself's because we used `zone()` operator in order to connect between Meteor data and Angular change detection.
+
+Now its time to update our users list.
+We'll move the line that gets the users list into a
+separate method, provided with the list of IDs of already invited users;
+and call it whenever we need: right in the above `MeteorObservable.autorun` method after the party assignment and in the subscription, like that:
+
+[{]: <helper> (diff_step 15.8)
+#### Step 15.8: Update the users list reactively
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -43,6 +43,7 @@
+ ┊43┊43┊        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {
+ ┊44┊44┊          MeteorObservable.autorun().subscribe(() => {
+ ┊45┊45┊            this.party = Parties.findOne(this.partyId);
++┊  ┊46┊            this.getUsers(this.party);
+ ┊46┊47┊          });
+ ┊47┊48┊        });
+ ┊48┊49┊
+```
+```diff
+@@ -51,15 +52,22 @@
+ ┊51┊52┊        }
+ ┊52┊53┊
+ ┊53┊54┊        this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {
+-┊54┊  ┊           this.users = Users.find({
+-┊55┊  ┊             _id: {
+-┊56┊  ┊               $ne: Meteor.userId()
+-┊57┊  ┊              }
+-┊58┊  ┊            }).zone();
++┊  ┊55┊          this.getUsers(this.party);
+ ┊59┊56┊        });
+ ┊60┊57┊      });
+ ┊61┊58┊  }
+ ┊62┊59┊
++┊  ┊60┊  getUsers(party: Party) {
++┊  ┊61┊    if (party) {
++┊  ┊62┊      this.users = Users.find({
++┊  ┊63┊        _id: {
++┊  ┊64┊          $nin: party.invited || [],
++┊  ┊65┊          $ne: Meteor.userId()
++┊  ┊66┊        }
++┊  ┊67┊      }).zone();
++┊  ┊68┊    }
++┊  ┊69┊  }
++┊  ┊70┊
+ ┊63┊71┊  saveParty() {
+ ┊64┊72┊    if (!Meteor.userId()) {
+ ┊65┊73┊      alert('Please log in to change this party');
+```
+[}]: #
+
+Here comes test time. Let's add a couple of new users.
+Then login as an old user and add a new party.
+Go to the party: you should see a list of all users including
+newly created ones. Invite several of them — each item in the list
+should disappear after a successful invitation.
+
+What's important to notice here is that each user item in the users list
+disappears right after the click, even before the message about
+the invitation was successfully sent. That's the latency compensation at work!
+
+# User Reply
+
+Here we are going to implement the user reply to the party invitation request.
+
+First of all, let's make parties list a bit more secure,
+which means two things: showing private parties to those who have been invited
+or to owners, and elaborate routing activation defense for the party details view:
+
+[{]: <helper> (diff_step 15.9)
+#### Step 15.9: Show private parties to the invited and owners only
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -36,6 +36,12 @@
+ ┊36┊36┊          $exists: true
+ ┊37┊37┊        }
+ ┊38┊38┊      }]
++┊  ┊39┊    },
++┊  ┊40┊    {
++┊  ┊41┊      $and: [
++┊  ┊42┊        { invited: this.userId },
++┊  ┊43┊        { invited: { $exists: true } }
++┊  ┊44┊      ]
+ ┊39┊45┊    }]
+ ┊40┊46┊  };
+```
+[}]: #
+
+The next thing is a party invitee response to the invitation itself. Here, as usual,
+we'll need to update the server side and UI. For the server,
+let's add a new `reply` Meteor Method:
+
+[{]: <helper> (diff_step 15.10)
+#### Step 15.10: Add a reply method
+
+##### Changed both/methods/parties.methods.ts
+```diff
+@@ -43,5 +43,50 @@
+ ┊43┊43┊        });
+ ┊44┊44┊      }
+ ┊45┊45┊    }
++┊  ┊46┊  },
++┊  ┊47┊  reply: function(partyId: string, rsvp: string) {
++┊  ┊48┊    check(partyId, String);
++┊  ┊49┊    check(rsvp, String);
++┊  ┊50┊
++┊  ┊51┊    if (!this.userId)
++┊  ┊52┊      throw new Meteor.Error('403', 'You must be logged-in to reply');
++┊  ┊53┊
++┊  ┊54┊    if (['yes', 'no', 'maybe'].indexOf(rsvp) === -1)
++┊  ┊55┊      throw new Meteor.Error('400', 'Invalid RSVP');
++┊  ┊56┊
++┊  ┊57┊    let party = Parties.findOne({ _id: partyId });
++┊  ┊58┊
++┊  ┊59┊    if (!party)
++┊  ┊60┊      throw new Meteor.Error('404', 'No such party');
++┊  ┊61┊
++┊  ┊62┊    if (party.owner === this.userId)
++┊  ┊63┊      throw new Meteor.Error('500', 'You are the owner!');
++┊  ┊64┊
++┊  ┊65┊    if (!party.public && (!party.invited || party.invited.indexOf(this.userId) == -1))
++┊  ┊66┊      throw new Meteor.Error('403', 'No such party'); // its private, but let's not tell this to the user
++┊  ┊67┊
++┊  ┊68┊    let rsvpIndex = party.rsvps ? party.rsvps.findIndex((rsvp) => rsvp.userId === this.userId) : -1;
++┊  ┊69┊
++┊  ┊70┊    if (rsvpIndex !== -1) {
++┊  ┊71┊      // update existing rsvp entry
++┊  ┊72┊      if (Meteor.isServer) {
++┊  ┊73┊        // update the appropriate rsvp entry with $
++┊  ┊74┊        Parties.update(
++┊  ┊75┊          { _id: partyId, 'rsvps.userId': this.userId },
++┊  ┊76┊          { $set: { 'rsvps.$.response': rsvp } });
++┊  ┊77┊      } else {
++┊  ┊78┊        // minimongo doesn't yet support $ in modifier. as a temporary
++┊  ┊79┊        // workaround, make a modifier that uses an index. this is
++┊  ┊80┊        // safe on the client since there's only one thread.
++┊  ┊81┊        let modifier = { $set: {} };
++┊  ┊82┊        modifier.$set['rsvps.' + rsvpIndex + '.response'] = rsvp;
++┊  ┊83┊
++┊  ┊84┊        Parties.update(partyId, modifier);
++┊  ┊85┊      }
++┊  ┊86┊    } else {
++┊  ┊87┊      // add new rsvp entry
++┊  ┊88┊      Parties.update(partyId,
++┊  ┊89┊        { $push: { rsvps: { userId: this.userId, response: rsvp } } });
++┊  ┊90┊    }
+ ┊46┊91┊  }
+ ┊47┊92┊});🚫↵
+```
+[}]: #
+
+As you can see, a new property, called "rsvp", was added
+above to collect user responses of this particular party.
+One more thing. Let's update the party declaration file to
+make TypeScript resolve and compile with no warnings:
+
+[{]: <helper> (diff_step 15.11)
+#### Step 15.11: Add RSVP interface
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -7,4 +7,10 @@
+ ┊ 7┊ 7┊  owner?: string;
+ ┊ 8┊ 8┊  public: boolean;
+ ┊ 9┊ 9┊  invited?: string[];
++┊  ┊10┊  rsvps?: RSVP[];
+ ┊10┊11┊}
++┊  ┊12┊
++┊  ┊13┊interface RSVP {
++┊  ┊14┊  userId: string;
++┊  ┊15┊  response: string;
++┊  ┊16┊}🚫↵
+```
+[}]: #
+
+For the UI, let's add three new buttons onto the party details view.
+These will be "yes", "no", "maybe" buttons and users responses accordingly:
+
+[{]: <helper> (diff_step 15.12)
+#### Step 15.12: Add reponse buttons
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -19,3 +19,10 @@
+ ┊19┊19┊    <button (click)="invite(user)">Invite</button>
+ ┊20┊20┊  </li>
+ ┊21┊21┊</ul>
++┊  ┊22┊
++┊  ┊23┊<div>
++┊  ┊24┊  <h2>Reply to the invitation</h2>
++┊  ┊25┊  <input type="button" value="I'm going!" (click)="reply('yes')">
++┊  ┊26┊  <input type="button" value="Maybe" (click)="reply('maybe')">
++┊  ┊27┊  <input type="button" value="No" (click)="reply('no')">
++┊  ┊28┊</div>
+```
+[}]: #
+
+Then, handle click events in the PartyDetails component:
+
+[{]: <helper> (diff_step 15.13)
+#### Step 15.13: Add reply method to PartyDetails component
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -91,6 +91,14 @@
+ ┊ 91┊ 91┊    });
+ ┊ 92┊ 92┊  }
+ ┊ 93┊ 93┊
++┊   ┊ 94┊  reply(rsvp: string) {
++┊   ┊ 95┊    MeteorObservable.call('reply', this.party._id, rsvp).subscribe(() => {
++┊   ┊ 96┊      alert('You successfully replied.');
++┊   ┊ 97┊    }, (error) => {
++┊   ┊ 98┊      alert(`Failed to reply due to ${error}`);
++┊   ┊ 99┊    });
++┊   ┊100┊  }
++┊   ┊101┊
+ ┊ 94┊102┊  ngOnDestroy() {
+ ┊ 95┊103┊    this.paramsSub.unsubscribe();
+ ┊ 96┊104┊    this.partySub.unsubscribe();
+```
+[}]: #
+
+### Rsvp Pipe
+
+Last, but not the least, let's show statistics of the invitation responses for the party owner.
+Let's imagine that any party owner
+would like to know the total number of those who declined, accepted, or remain tentative.
+This is a perfect use case to add a new stateful pipe, which takes as
+an input a party and a one of the RSVP responses, and calculates the total number of responses
+associated with this, provided as a parameter we'll call "response".
+
+Add a new pipe to the `client/imports/app/shared/rsvp.pipe.ts` as follows:
+
+[{]: <helper> (diff_step 15.14)
+#### Step 15.14: Add a new response counting pipe
+
+##### Added client/imports/app/shared/rsvp.pipe.ts
+```diff
+@@ -0,0 +1,22 @@
++┊  ┊ 1┊import {Pipe, PipeTransform} from '@angular/core';
++┊  ┊ 2┊import {Party} from "../../../../both/models/party.model";
++┊  ┊ 3┊import {Parties} from "../../../../both/collections/parties.collection";
++┊  ┊ 4┊
++┊  ┊ 5┊@Pipe({
++┊  ┊ 6┊  name: 'rsvp'
++┊  ┊ 7┊})
++┊  ┊ 8┊export class RsvpPipe implements PipeTransform {
++┊  ┊ 9┊  transform(party: Party, type: string): number {
++┊  ┊10┊    if (!type) {
++┊  ┊11┊      return 0;
++┊  ┊12┊    }
++┊  ┊13┊
++┊  ┊14┊    let total = 0;
++┊  ┊15┊    const found = Parties.findOne(party._id);
++┊  ┊16┊
++┊  ┊17┊    if (found)
++┊  ┊18┊      total = found.rsvps ? found.rsvps.filter(rsvp => rsvp.response === type).length : 0;
++┊  ┊19┊
++┊  ┊20┊    return total;
++┊  ┊21┊  }
++┊  ┊22┊}🚫↵
+```
+[}]: #
+
+The RSVP Pipe fetches the party and returns the count of `rsvps` Array, due the fact that we binded the change detection of Angular 2 and the Meteor data change, each time the data changes, Angular 2 renders the view again, and the RSVP Pipe will run again and update the view with the new number.
+
+It's also worth mentioning that the arguments of a Pipe implementation inside a template are passed to the `transform` method in the same form. Only difference is that the first argument of `transform` is a value to be transformed. In our case, passed only the RSVP response, hence, we are taking the first
+value in the list.
+
+An example:
+
+```js
+// usage: text | subStr:20:50
+@Pipe({name: 'subStr'})
+class SubStrPipe implements PipeTransform {
+  transform(text: string, starts: number, ends: number) {
+    return text.substring(starts, ends);
+  }
+}
+```
+
+Let's make use of this pipe in the `PartiesList` component:
+
+[{]: <helper> (diff_step 15.15)
+#### Step 15.15: Display response statistics on the list
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -20,6 +20,12 @@
+ ┊20┊20┊      <p>{{party.description}}</p>
+ ┊21┊21┊      <p>{{party.location}}</p>
+ ┊22┊22┊      <button (click)="removeParty(party)">X</button>
++┊  ┊23┊      <div>
++┊  ┊24┊        Who is coming:
++┊  ┊25┊        Yes - {{party | rsvp:'yes'}}
++┊  ┊26┊        Maybe - {{party | rsvp:'maybe'}}
++┊  ┊27┊        No - {{party | rsvp:'no'}}
++┊  ┊28┊      </div>
+ ┊23┊29┊    </li>
+ ┊24┊30┊  </ul>
+```
+[}]: #
+
+And let's add the new Pipe to the shared declarations file:
+
+[{]: <helper> (diff_step 15.16)
+#### Step 15.16: Import RsvpPipe
+
+##### Changed client/imports/app/shared/index.ts
+```diff
+@@ -1,5 +1,7 @@
+ ┊1┊1┊import { DisplayNamePipe } from './display-name.pipe';
++┊ ┊2┊import {RsvpPipe} from "./rsvp.pipe";
+ ┊2┊3┊
+ ┊3┊4┊export const SHARED_DECLARATIONS: any[] = [
+-┊4┊ ┊  DisplayNamePipe
++┊ ┊5┊  DisplayNamePipe,
++┊ ┊6┊  RsvpPipe
+ ┊5┊7┊];
+```
+[}]: #
+
+Now it's testing time! Check that an invited user is able to reply to an
+invitation, and also verify that the party's statistics update properly and reactively.
+Login as an existing user. Add a new party, go to the party and
+invite some other users. Then, open a new browser window in the anonymous mode along with the current window,
+and login as the invited user there. Go to the party details page, and reply, say, "no";
+the party's statistics on the first page with the parties list should duly update.
+
+# Challenge
+
+There is one important thing that we missed. Besides the party invitation
+statistics, each user would like to know if she has already responded, in case she forgot,
+to a particular invitation. This step's challenge will be to add this status
+information onto the PartyDetails's view and make it update reactively.
+
+> Hint: In order to make it reactive, you'll need to add one more handler into
+> the party `MeteorObservable.autorun`, like the `getUsers` method in the this step above.
+
+# Summary
+
+We've just finished the invitation feature in this step, having added bunch of new stuff.
+Socially is looking much more mature with Meteor Methods on board. We can give ourselves
+a big thumbs-up for that!
+
+Though, some places in the app can certainly be improved. For example,
+we still show some private information to all invited users, which should be designated only for the party owner.
+We'll fix this in the next step.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step14.md) | [Next Step >](step16.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 99c950c91b3d5d539c7776e3f21d25c23de1766f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:42:55 +0300
Subject: [PATCH 140/304] Step 16.1: Inject Meteor User and add isOwner method

---
 client/imports/app/parties/parties-list.component.ts | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index f94da32..2e45027 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -5,6 +5,7 @@ import { Subscription } from 'rxjs/Subscription';
 import { MeteorObservable } from 'meteor-rxjs';
 import { PaginationService } from 'ng2-pagination';
 import { Counts } from 'meteor/tmeasday:publish-counts';
+import { InjectUser } from "angular2-meteor-accounts-ui";
 
 import 'rxjs/add/operator/combineLatest';
 
@@ -26,6 +27,7 @@ interface Options extends Pagination {
   selector: 'parties-list',
   template
 })
+@InjectUser('user')
 export class PartiesListComponent implements OnInit, OnDestroy {
   parties: Observable<Party[]>;
   partiesSub: Subscription;
@@ -36,6 +38,7 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   partiesSize: number = 0;
   autorunSub: Subscription;
   location: Subject<string> = new Subject<string>();
+  user: Meteor.User;
 
   constructor(
     private paginationService: PaginationService
@@ -104,6 +107,10 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     this.nameOrder.next(parseInt(nameOrder));
   }
 
+  isOwner(party: Party): boolean {
+    return this.user && this.user._id === party.owner;
+  }
+
   ngOnDestroy() {
     this.partiesSub.unsubscribe();
     this.optionsSub.unsubscribe();
-- 
2.10.2


From 38469518e69a7fbf511f5cd3cd161cc2f5255dde Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:43:04 +0300
Subject: [PATCH 141/304] Step 16.2: Use the hidden attribute in the
 PartiestList

---
 client/imports/app/parties/parties-list.component.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 40e51d2..a94ea42 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -1,5 +1,5 @@
 <div>
-  <parties-form style="float: left"></parties-form>
+  <parties-form [hidden]="!user" style="float: left"></parties-form>
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
   
@@ -19,7 +19,7 @@
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
-      <button (click)="removeParty(party)">X</button>
+      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
       <div>
         Who is coming:
         Yes - {{party | rsvp:'yes'}}
-- 
2.10.2


From 657cc042c8c52b7b7df85c09cc8ed1290187cd0c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:43:14 +0300
Subject: [PATCH 142/304] Step 16.3: Add isOwner property

---
 client/imports/app/parties/party-details.component.ts | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index e70f680..7562d03 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -4,6 +4,7 @@ import { Observable } from 'rxjs/Observable';
 import { Subscription } from 'rxjs/Subscription';
 import { Meteor } from 'meteor/meteor';
 import { MeteorObservable } from 'meteor-rxjs';
+import { InjectUser } from "angular2-meteor-accounts-ui";
 
 import 'rxjs/add/operator/map';
 
@@ -18,6 +19,7 @@ import template from './party-details.component.html';
   selector: 'party-details',
   template
 })
+@InjectUser('user')
 export class PartyDetailsComponent implements OnInit, OnDestroy {
   partyId: string;
   paramsSub: Subscription;
@@ -25,6 +27,7 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   partySub: Subscription;
   users: Observable<User>;
   uninvitedSub: Subscription;
+  user: Meteor.User;
 
   constructor(
     private route: ActivatedRoute
@@ -99,6 +102,10 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
     });
   }
 
+  get isOwner(): boolean {
+    return this.party && this.user && this.user._id === this.party.owner;
+  }
+
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
     this.partySub.unsubscribe();
-- 
2.10.2


From 0b9b960fc5752d1785392d13d743a2dc1905522d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:43:20 +0300
Subject: [PATCH 143/304] Step 16.4: Add disabled attribute bindings

---
 client/imports/app/parties/party-details.component.html | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index a3e173d..a00a045 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -1,14 +1,14 @@
 <form *ngIf="party" (submit)="saveParty()">
   <label>Name</label>
-  <input type="text" [(ngModel)]="party.name" name="name">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name">
 
   <label>Description</label>
-  <input type="text" [(ngModel)]="party.description" name="description">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
 
   <label>Location</label>
-  <input type="text" [(ngModel)]="party.location" name="location">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location" name="location">
 
-  <button type="submit">Save</button>
+  <button [disabled]="!isOwner" type="submit">Save</button>
   <a [routerLink]="['/']">Cancel</a>
 </form>
 
-- 
2.10.2


From 359aaaaa36a50c6397836a29b7f43ab56b653412 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:44:34 +0300
Subject: [PATCH 144/304] Step 16.5: Add isPublic and isInvited properties

---
 client/imports/app/parties/party-details.component.ts | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 7562d03..d498a6e 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -81,7 +81,8 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
       $set: {
         name: this.party.name,
         description: this.party.description,
-        location: this.party.location
+        location: this.party.location,
+        'public': this.party.public
       }
     });
   }
@@ -106,6 +107,20 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
     return this.party && this.user && this.user._id === this.party.owner;
   }
 
+  get isPublic(): boolean {
+    return this.party && this.party.public;
+  }
+
+  get isInvited(): boolean {
+    if (this.party && this.user) {
+      const invited = this.party.invited || [];
+
+      return invited.indexOf(this.user._id) !== -1;
+    }
+
+    return false;
+  }
+
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
     this.partySub.unsubscribe();
-- 
2.10.2


From 07e6f10d4b380788767ef8c59d4dc4822fef4fb2 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:46:12 +0300
Subject: [PATCH 145/304] Step 16.6: Make use of properties in the template

---
 .../imports/app/parties/party-details.component.html   | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index a00a045..7abe835 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -12,15 +12,17 @@
   <a [routerLink]="['/']">Cancel</a>
 </form>
 
-<p>Users to invite:</p>
-<ul>
-  <li *ngFor="let user of users | async">
-    <div>{{user | displayName}}</div>
-    <button (click)="invite(user)">Invite</button>
-  </li>
-</ul>
+<div *ngIf="isOwner || isPublic">
+  <p>Users to invite:</p>
+  <ul>
+    <li *ngFor="let user of users | async">
+      <div>{{user | displayName}}</div>
+      <button (click)="invite(user)">Invite</button>
+    </li>
+  </ul>
+</div>
 
-<div>
+<div *ngIf="isInvited">
   <h2>Reply to the invitation</h2>
   <input type="button" value="I'm going!" (click)="reply('yes')">
   <input type="button" value="Maybe" (click)="reply('maybe')">
-- 
2.10.2


From 2dd3ffe8df5f730f85d90579ad67c625147648b6 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:52 -0200
Subject: [PATCH 146/304] Step 16: Conditional template directives with
 AngularJS

---
 manuals/templates/step16.md |  98 ++++++++++++++
 manuals/views/step16.md     | 323 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 421 insertions(+)
 create mode 100644 manuals/templates/step16.md
 create mode 100644 manuals/views/step16.md

diff --git a/manuals/templates/step16.md b/manuals/templates/step16.md
new file mode 100644
index 0000000..76cdc35
--- /dev/null
+++ b/manuals/templates/step16.md
@@ -0,0 +1,98 @@
+In this step we are going to show or hide
+different parts of the app's UI depending the user's current state: either logged-in or anonymous.
+
+# Attribute Binding
+
+As you may know, Angular 1 has [ng-show](https://docs.angularjs.org/api/ng/directive/ngShow) and [ng-hide](https://docs.angularjs.org/api/ng/directive/ngHide)
+attribute directives for controlling the visibility of content.
+We'll look at how visibility is handled differently in Angular 2.
+
+Angular 2 binds an attribute to an element's property.
+As you already know, one can directly bind to the component attribute directives, for example:
+
+    <my-component [foo]="fooValue" />
+
+The Angular 2 team went further and implemented the same direct binding support for the
+DOM element attributes, including additional attributes like _hidden_ and _disabled_, and which seems logical.
+
+### [hidden]
+
+The `hidden` attribute arrived in the DOM with HTML 5.
+It's essentially similar to the old and well-known `disabled` attribute, but only
+makes an element hidden. With the presence of the `hidden` attribute and direct attribute
+binding, it seems there is no further need for attribute directives like `ng-hide`.
+There is one exception, though.
+
+> The DOM property `hidden` is rather new, and not supported by older versions of Internet Explorer (less than 11).
+> If you need to support older browsers, you must implement a new directive attribute similar to the `ng-hide`
+> yourself or make use of an already existing directive. There are sure to be solutions in the future.
+
+A user who hasn't logged-in does not have all the same permissions; we can hide functionality that anonymous users cannot access such as the "add party" form and the "remove" button for each party in the parties list.
+
+Let's toggle on and off these components with the help of the `hidden` attribute, but first let's inject
+the user property into the PartiesList component, since this is what our attribute
+binding will depend on. User injection was already mentioned in step 8,
+so let's make practical use of it now:
+
+{{{diff_step 16.1}}}
+
+As you can see, we've added a new `isOwner` method to the component,
+thus, we allow only a party owner to remove the party.
+
+Then, change the template to use the `hidden` attribute:
+
+{{{diff_step 16.2}}}
+
+Now run the app.
+
+The "add party" form and "remove" buttons should disappear if you are not logged-in. Try to log in: everything should be visible again.
+
+> Note: CSS's `display` property has priority over the `hidden` property.
+> If one of the CSS classes of any element has this property set,
+> `hidden` gets over-ruled. In this case, you'll have to wrap the element into
+> a container element such as a `<div>` and assign CSS classes with the "display" on that parent container.
+
+### [disabled]
+
+Next let's add the `disabled` attribute to the PartyDetails component.
+Currently, all users have access to the party details page and can
+change the values of the inputs, though they are still prohibited from saving anything
+(remember the parties security added in step 8?).
+Let's disable these inputs for users that are not owners.
+
+We will get an `isOwner` property when the party owner matches the logged-in user id:
+
+{{{diff_step 16.3}}}
+
+`isOwner` can be used before the subscription has finished, so we must check if the `party` property is available before checking if the party owner matches.
+
+Then, let's add our new `[disabled]` condition to the party details template:
+
+{{{diff_step 16.4}}}
+
+# Using `ngIf`
+
+It's important to know the difference between the `hidden` attribute and `ngIf` directive.
+While `hidden` shows and hides a DOM element that is already rendered,
+`ngIf` adds or removes an element from the DOM, making it both heavier and slower.
+It makes sense to use `ngIf` if the decision to show or hide some part of the UI is made during page loading.
+
+Regarding our party details page, we'll show or hide with the help of `ngIf`.
+We'll show or hide the invitation response buttons to those who are already invited,
+and the invitation list to the party owners and to everybody if the party is public.
+
+We've already added our `isOwner` variable. Let's add two more: `isPublic` and `isInvited`.
+
+{{{diff_step 16.5}}}
+
+Then, make use of the properties in the template:
+
+{{{diff_step 16.6}}}
+
+# Summary
+
+In this step we've become familiar with the binding to the DOM attributes in Angular 2 and
+used two of the attributes to make our app better: `hidden` and `disabled`.
+
+The difference between `ngIf` and `hidden` was highlighted, and based on that, `ngIf`
+was used to make the party details page securer and visually better.
diff --git a/manuals/views/step16.md b/manuals/views/step16.md
new file mode 100644
index 0000000..42b51dc
--- /dev/null
+++ b/manuals/views/step16.md
@@ -0,0 +1,323 @@
+[{]: <region> (header)
+# Step 16: Conditional template directives with AngularJS
+[}]: #
+[{]: <region> (body)
+In this step we are going to show or hide
+different parts of the app's UI depending the user's current state: either logged-in or anonymous.
+
+# Attribute Binding
+
+As you may know, Angular 1 has [ng-show](https://docs.angularjs.org/api/ng/directive/ngShow) and [ng-hide](https://docs.angularjs.org/api/ng/directive/ngHide)
+attribute directives for controlling the visibility of content.
+We'll look at how visibility is handled differently in Angular 2.
+
+Angular 2 binds an attribute to an element's property.
+As you already know, one can directly bind to the component attribute directives, for example:
+
+    <my-component [foo]="fooValue" />
+
+The Angular 2 team went further and implemented the same direct binding support for the
+DOM element attributes, including additional attributes like _hidden_ and _disabled_, and which seems logical.
+
+### [hidden]
+
+The `hidden` attribute arrived in the DOM with HTML 5.
+It's essentially similar to the old and well-known `disabled` attribute, but only
+makes an element hidden. With the presence of the `hidden` attribute and direct attribute
+binding, it seems there is no further need for attribute directives like `ng-hide`.
+There is one exception, though.
+
+> The DOM property `hidden` is rather new, and not supported by older versions of Internet Explorer (less than 11).
+> If you need to support older browsers, you must implement a new directive attribute similar to the `ng-hide`
+> yourself or make use of an already existing directive. There are sure to be solutions in the future.
+
+A user who hasn't logged-in does not have all the same permissions; we can hide functionality that anonymous users cannot access such as the "add party" form and the "remove" button for each party in the parties list.
+
+Let's toggle on and off these components with the help of the `hidden` attribute, but first let's inject
+the user property into the PartiesList component, since this is what our attribute
+binding will depend on. User injection was already mentioned in step 8,
+so let's make practical use of it now:
+
+[{]: <helper> (diff_step 16.1)
+#### Step 16.1: Inject Meteor User and add isOwner method
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -5,6 +5,7 @@
+ ┊ 5┊ 5┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊ 6┊ 6┊import { PaginationService } from 'ng2-pagination';
+ ┊ 7┊ 7┊import { Counts } from 'meteor/tmeasday:publish-counts';
++┊  ┊ 8┊import { InjectUser } from "angular2-meteor-accounts-ui";
+ ┊ 8┊ 9┊
+ ┊ 9┊10┊import 'rxjs/add/operator/combineLatest';
+ ┊10┊11┊
+```
+```diff
+@@ -26,6 +27,7 @@
+ ┊26┊27┊  selector: 'parties-list',
+ ┊27┊28┊  template
+ ┊28┊29┊})
++┊  ┊30┊@InjectUser('user')
+ ┊29┊31┊export class PartiesListComponent implements OnInit, OnDestroy {
+ ┊30┊32┊  parties: Observable<Party[]>;
+ ┊31┊33┊  partiesSub: Subscription;
+```
+```diff
+@@ -36,6 +38,7 @@
+ ┊36┊38┊  partiesSize: number = 0;
+ ┊37┊39┊  autorunSub: Subscription;
+ ┊38┊40┊  location: Subject<string> = new Subject<string>();
++┊  ┊41┊  user: Meteor.User;
+ ┊39┊42┊
+ ┊40┊43┊  constructor(
+ ┊41┊44┊    private paginationService: PaginationService
+```
+```diff
+@@ -104,6 +107,10 @@
+ ┊104┊107┊    this.nameOrder.next(parseInt(nameOrder));
+ ┊105┊108┊  }
+ ┊106┊109┊
++┊   ┊110┊  isOwner(party: Party): boolean {
++┊   ┊111┊    return this.user && this.user._id === party.owner;
++┊   ┊112┊  }
++┊   ┊113┊
+ ┊107┊114┊  ngOnDestroy() {
+ ┊108┊115┊    this.partiesSub.unsubscribe();
+ ┊109┊116┊    this.optionsSub.unsubscribe();
+```
+[}]: #
+
+As you can see, we've added a new `isOwner` method to the component,
+thus, we allow only a party owner to remove the party.
+
+Then, change the template to use the `hidden` attribute:
+
+[{]: <helper> (diff_step 16.2)
+#### Step 16.2: Use the hidden attribute in the PartiestList
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -1,5 +1,5 @@
+ ┊1┊1┊<div>
+-┊2┊ ┊  <parties-form style="float: left"></parties-form>
++┊ ┊2┊  <parties-form [hidden]="!user" style="float: left"></parties-form>
+ ┊3┊3┊  <input type="text" #searchtext placeholder="Search by Location">
+ ┊4┊4┊  <button type="button" (click)="search(searchtext.value)">Search</button>
+ ┊5┊5┊  
+```
+```diff
+@@ -19,7 +19,7 @@
+ ┊19┊19┊      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+ ┊20┊20┊      <p>{{party.description}}</p>
+ ┊21┊21┊      <p>{{party.location}}</p>
+-┊22┊  ┊      <button (click)="removeParty(party)">X</button>
++┊  ┊22┊      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
+ ┊23┊23┊      <div>
+ ┊24┊24┊        Who is coming:
+ ┊25┊25┊        Yes - {{party | rsvp:'yes'}}
+```
+[}]: #
+
+Now run the app.
+
+The "add party" form and "remove" buttons should disappear if you are not logged-in. Try to log in: everything should be visible again.
+
+> Note: CSS's `display` property has priority over the `hidden` property.
+> If one of the CSS classes of any element has this property set,
+> `hidden` gets over-ruled. In this case, you'll have to wrap the element into
+> a container element such as a `<div>` and assign CSS classes with the "display" on that parent container.
+
+### [disabled]
+
+Next let's add the `disabled` attribute to the PartyDetails component.
+Currently, all users have access to the party details page and can
+change the values of the inputs, though they are still prohibited from saving anything
+(remember the parties security added in step 8?).
+Let's disable these inputs for users that are not owners.
+
+We will get an `isOwner` property when the party owner matches the logged-in user id:
+
+[{]: <helper> (diff_step 16.3)
+#### Step 16.3: Add isOwner property
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -4,6 +4,7 @@
+ ┊ 4┊ 4┊import { Subscription } from 'rxjs/Subscription';
+ ┊ 5┊ 5┊import { Meteor } from 'meteor/meteor';
+ ┊ 6┊ 6┊import { MeteorObservable } from 'meteor-rxjs';
++┊  ┊ 7┊import { InjectUser } from "angular2-meteor-accounts-ui";
+ ┊ 7┊ 8┊
+ ┊ 8┊ 9┊import 'rxjs/add/operator/map';
+ ┊ 9┊10┊
+```
+```diff
+@@ -18,6 +19,7 @@
+ ┊18┊19┊  selector: 'party-details',
+ ┊19┊20┊  template
+ ┊20┊21┊})
++┊  ┊22┊@InjectUser('user')
+ ┊21┊23┊export class PartyDetailsComponent implements OnInit, OnDestroy {
+ ┊22┊24┊  partyId: string;
+ ┊23┊25┊  paramsSub: Subscription;
+```
+```diff
+@@ -25,6 +27,7 @@
+ ┊25┊27┊  partySub: Subscription;
+ ┊26┊28┊  users: Observable<User>;
+ ┊27┊29┊  uninvitedSub: Subscription;
++┊  ┊30┊  user: Meteor.User;
+ ┊28┊31┊
+ ┊29┊32┊  constructor(
+ ┊30┊33┊    private route: ActivatedRoute
+```
+```diff
+@@ -99,6 +102,10 @@
+ ┊ 99┊102┊    });
+ ┊100┊103┊  }
+ ┊101┊104┊
++┊   ┊105┊  get isOwner(): boolean {
++┊   ┊106┊    return this.party && this.user && this.user._id === this.party.owner;
++┊   ┊107┊  }
++┊   ┊108┊
+ ┊102┊109┊  ngOnDestroy() {
+ ┊103┊110┊    this.paramsSub.unsubscribe();
+ ┊104┊111┊    this.partySub.unsubscribe();
+```
+[}]: #
+
+`isOwner` can be used before the subscription has finished, so we must check if the `party` property is available before checking if the party owner matches.
+
+Then, let's add our new `[disabled]` condition to the party details template:
+
+[{]: <helper> (diff_step 16.4)
+#### Step 16.4: Add disabled attribute bindings
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -1,14 +1,14 @@
+ ┊ 1┊ 1┊<form *ngIf="party" (submit)="saveParty()">
+ ┊ 2┊ 2┊  <label>Name</label>
+-┊ 3┊  ┊  <input type="text" [(ngModel)]="party.name" name="name">
++┊  ┊ 3┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name">
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊  <label>Description</label>
+-┊ 6┊  ┊  <input type="text" [(ngModel)]="party.description" name="description">
++┊  ┊ 6┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
+ ┊ 7┊ 7┊
+ ┊ 8┊ 8┊  <label>Location</label>
+-┊ 9┊  ┊  <input type="text" [(ngModel)]="party.location" name="location">
++┊  ┊ 9┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location" name="location">
+ ┊10┊10┊
+-┊11┊  ┊  <button type="submit">Save</button>
++┊  ┊11┊  <button [disabled]="!isOwner" type="submit">Save</button>
+ ┊12┊12┊  <a [routerLink]="['/']">Cancel</a>
+ ┊13┊13┊</form>
+```
+[}]: #
+
+# Using `ngIf`
+
+It's important to know the difference between the `hidden` attribute and `ngIf` directive.
+While `hidden` shows and hides a DOM element that is already rendered,
+`ngIf` adds or removes an element from the DOM, making it both heavier and slower.
+It makes sense to use `ngIf` if the decision to show or hide some part of the UI is made during page loading.
+
+Regarding our party details page, we'll show or hide with the help of `ngIf`.
+We'll show or hide the invitation response buttons to those who are already invited,
+and the invitation list to the party owners and to everybody if the party is public.
+
+We've already added our `isOwner` variable. Let's add two more: `isPublic` and `isInvited`.
+
+[{]: <helper> (diff_step 16.5)
+#### Step 16.5: Add isPublic and isInvited properties
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -81,7 +81,8 @@
+ ┊81┊81┊      $set: {
+ ┊82┊82┊        name: this.party.name,
+ ┊83┊83┊        description: this.party.description,
+-┊84┊  ┊        location: this.party.location
++┊  ┊84┊        location: this.party.location,
++┊  ┊85┊        'public': this.party.public
+ ┊85┊86┊      }
+ ┊86┊87┊    });
+ ┊87┊88┊  }
+```
+```diff
+@@ -106,6 +107,20 @@
+ ┊106┊107┊    return this.party && this.user && this.user._id === this.party.owner;
+ ┊107┊108┊  }
+ ┊108┊109┊
++┊   ┊110┊  get isPublic(): boolean {
++┊   ┊111┊    return this.party && this.party.public;
++┊   ┊112┊  }
++┊   ┊113┊
++┊   ┊114┊  get isInvited(): boolean {
++┊   ┊115┊    if (this.party && this.user) {
++┊   ┊116┊      const invited = this.party.invited || [];
++┊   ┊117┊
++┊   ┊118┊      return invited.indexOf(this.user._id) !== -1;
++┊   ┊119┊    }
++┊   ┊120┊
++┊   ┊121┊    return false;
++┊   ┊122┊  }
++┊   ┊123┊
+ ┊109┊124┊  ngOnDestroy() {
+ ┊110┊125┊    this.paramsSub.unsubscribe();
+ ┊111┊126┊    this.partySub.unsubscribe();
+```
+[}]: #
+
+Then, make use of the properties in the template:
+
+[{]: <helper> (diff_step 16.6)
+#### Step 16.6: Make use of properties in the template
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -12,15 +12,17 @@
+ ┊12┊12┊  <a [routerLink]="['/']">Cancel</a>
+ ┊13┊13┊</form>
+ ┊14┊14┊
+-┊15┊  ┊<p>Users to invite:</p>
+-┊16┊  ┊<ul>
+-┊17┊  ┊  <li *ngFor="let user of users | async">
+-┊18┊  ┊    <div>{{user | displayName}}</div>
+-┊19┊  ┊    <button (click)="invite(user)">Invite</button>
+-┊20┊  ┊  </li>
+-┊21┊  ┊</ul>
++┊  ┊15┊<div *ngIf="isOwner || isPublic">
++┊  ┊16┊  <p>Users to invite:</p>
++┊  ┊17┊  <ul>
++┊  ┊18┊    <li *ngFor="let user of users | async">
++┊  ┊19┊      <div>{{user | displayName}}</div>
++┊  ┊20┊      <button (click)="invite(user)">Invite</button>
++┊  ┊21┊    </li>
++┊  ┊22┊  </ul>
++┊  ┊23┊</div>
+ ┊22┊24┊
+-┊23┊  ┊<div>
++┊  ┊25┊<div *ngIf="isInvited">
+ ┊24┊26┊  <h2>Reply to the invitation</h2>
+ ┊25┊27┊  <input type="button" value="I'm going!" (click)="reply('yes')">
+ ┊26┊28┊  <input type="button" value="Maybe" (click)="reply('maybe')">
+```
+[}]: #
+
+# Summary
+
+In this step we've become familiar with the binding to the DOM attributes in Angular 2 and
+used two of the attributes to make our app better: `hidden` and `disabled`.
+
+The difference between `ngIf` and `hidden` was highlighted, and based on that, `ngIf`
+was used to make the party details page securer and visually better.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step15.md) | [Next Step >](step17.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 4cf6622ec5eddf2a6d710cf4fda3131f9f1db519 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:48:18 +0300
Subject: [PATCH 147/304] Step 17.1: Extend party location with coords

---
 both/models/party.model.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index 9f7c41e..5e62f1b 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -3,7 +3,7 @@ import { CollectionObject } from './collection-object.model';
 export interface Party extends CollectionObject {
   name: string;
   description: string;
-  location: string;
+  location: Location;
   owner?: string;
   public: boolean;
   invited?: string[];
@@ -13,4 +13,10 @@ export interface Party extends CollectionObject {
 interface RSVP {
   userId: string;
   response: string;
+}
+
+interface Location {
+  name: string;
+  lat?: number;
+  lng?: number;
 }
\ No newline at end of file
-- 
2.10.2


From 8d36f06d7448f05de27eaa5e7cc440403fd8d749 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:49:10 +0300
Subject: [PATCH 148/304] Step 17.2: Change initial parties accordingly

---
 server/imports/fixtures/parties.ts | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/server/imports/fixtures/parties.ts b/server/imports/fixtures/parties.ts
index 6c7b374..3b3b8cf 100644
--- a/server/imports/fixtures/parties.ts
+++ b/server/imports/fixtures/parties.ts
@@ -6,17 +6,23 @@ export function loadParties() {
     const parties: Party[] = [{
       name: 'Dubstep-Free Zone',
       description: 'Can we please just for an evening not listen to dubstep.',
-      location: 'Palo Alto',
+      location: {
+        name: 'Palo Alto'
+      },
       public: true
     }, {
       name: 'All dubstep all the time',
       description: 'Get it on!',
-      location: 'Palo Alto',
+      location: {
+        name: 'Palo Alto'
+      },
       public: true
     }, {
       name: 'Savage lounging',
       description: 'Leisure suit required. And only fiercest manners.',
-      location: 'San Francisco',
+      location: {
+        name: 'San Francisco'
+      },
       public: false
     }];
 
-- 
2.10.2


From 758cd091aab6547029041869197911f924255c55 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:50:53 +0300
Subject: [PATCH 149/304] Step 17.3: Change party creation component

---
 client/imports/app/parties/parties-form.component.ts | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 0823749..3a213f0 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -33,7 +33,15 @@ export class PartiesFormComponent implements OnInit {
     }
 
     if (this.addForm.valid) {
-      Parties.insert(Object.assign({}, this.addForm.value, { owner: Meteor.userId() }));
+      Parties.insert({
+        name: this.addForm.value.name,
+        description: this.addForm.value.description,
+        location: {
+          name: this.addForm.value.location
+        },
+        public: this.addForm.value.public,
+        owner: Meteor.userId()
+      });
 
       this.addForm.reset();
     }
-- 
2.10.2


From 8e7798e41ca220fd6a6f9d2400df9b337df0ec04 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:51:39 +0300
Subject: [PATCH 150/304] Step 17.4: Reflect type changes in the parties search

---
 server/imports/publications/parties.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/server/imports/publications/parties.ts b/server/imports/publications/parties.ts
index 4742280..d1c8e00 100644
--- a/server/imports/publications/parties.ts
+++ b/server/imports/publications/parties.ts
@@ -60,7 +60,7 @@ function buildQuery(partyId?: string, location?: string): Object {
 
   return {
     $and: [{
-        location: searchRegEx
+        'location.name': searchRegEx
       },
       isAvailable
     ]
-- 
2.10.2


From 6a733f7a8553e1b397ec35d9a496d0a3b916683e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:53:13 +0300
Subject: [PATCH 151/304] Step 17.5: Install angular2-google-maps

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index cb4a116..abefcee 100644
--- a/package.json
+++ b/package.json
@@ -14,6 +14,7 @@
     "@angular/platform-browser": "2.1.2",
     "@angular/platform-browser-dynamic": "2.1.2",
     "@angular/router": "3.1.2",
+    "angular2-google-maps": "0.15.0",
     "angular2-meteor": "0.7.0",
     "angular2-meteor-accounts-ui": "1.0.0",
     "angular2-meteor-polyfills": "^0.1.1",
-- 
2.10.2


From 375663838a3d0f352d7882170bd048a13947d098 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:55:17 +0300
Subject: [PATCH 152/304] Step 17.6: Import google maps module

---
 client/imports/app/app.module.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 383ed58..0240ddf 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -4,6 +4,7 @@ import { FormsModule, ReactiveFormsModule } from '@angular/forms';
 import { RouterModule } from '@angular/router';
 import { AccountsModule } from 'angular2-meteor-accounts-ui';
 import { Ng2PaginationModule } from 'ng2-pagination';
+import { AgmCoreModule } from 'angular2-google-maps/core';
 
 import { AppComponent } from './app.component';
 import { routes, ROUTES_PROVIDERS } from './app.routes';
@@ -17,7 +18,10 @@ import { SHARED_DECLARATIONS } from './shared';
     ReactiveFormsModule,
     RouterModule.forRoot(routes),
     AccountsModule,
-    Ng2PaginationModule
+    Ng2PaginationModule,
+    AgmCoreModule.forRoot({
+      apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
+    })
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From 3e54a123990cf06b59d674f6b4a826fc7bb43c49 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 11:55:43 +0300
Subject: [PATCH 153/304] Step 17.7: Change ngModel to location.name

---
 client/imports/app/parties/party-details.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index 7abe835..26f21ca 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -6,7 +6,7 @@
   <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
 
   <label>Location</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location" name="location">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location">
 
   <button [disabled]="!isOwner" type="submit">Save</button>
   <a [routerLink]="['/']">Cancel</a>
-- 
2.10.2


From 46d0f68da41507b3fc0956ea695389bfe602f74b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:19:47 +0300
Subject: [PATCH 154/304] Step 17.8: Use in a template

---
 client/imports/app/parties/party-details.component.html | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index 26f21ca..151fb03 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -28,3 +28,15 @@
   <input type="button" value="Maybe" (click)="reply('maybe')">
   <input type="button" value="No" (click)="reply('no')">
 </div>
+
+<sebm-google-map
+  [latitude]="lat || centerLat"
+  [longitude]="lng || centerLng"
+  [zoom]="8"
+  (mapClick)="mapClicked($event)">
+  <sebm-google-map-marker
+    *ngIf="lat && lng"
+    [latitude]="lat"
+    [longitude]="lng">
+  </sebm-google-map-marker>
+</sebm-google-map>
\ No newline at end of file
-- 
2.10.2


From 29a5d3a6422c6ee68e62f71946fbb340f56f8fbc Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:19:54 +0300
Subject: [PATCH 155/304] Step 17.9: Add maps logic to the component

---
 client/imports/app/parties/party-details.component.ts | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index d498a6e..7b8d963 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -5,6 +5,7 @@ import { Subscription } from 'rxjs/Subscription';
 import { Meteor } from 'meteor/meteor';
 import { MeteorObservable } from 'meteor-rxjs';
 import { InjectUser } from "angular2-meteor-accounts-ui";
+import { MouseEvent } from "angular2-google-maps/core";
 
 import 'rxjs/add/operator/map';
 
@@ -28,6 +29,9 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
   users: Observable<User>;
   uninvitedSub: Subscription;
   user: Meteor.User;
+  // Default center Palo Alto coordinates.
+  centerLat: number = 37.4292;
+  centerLng: number = -122.1381;
 
   constructor(
     private route: ActivatedRoute
@@ -121,6 +125,20 @@ export class PartyDetailsComponent implements OnInit, OnDestroy {
     return false;
   }
 
+
+  get lat(): number {
+    return this.party && this.party.location.lat;
+  }
+
+  get lng(): number {
+    return this.party && this.party.location.lng;
+  }
+
+  mapClicked($event: MouseEvent) {
+    this.party.location.lat = $event.coords.lat;
+    this.party.location.lng = $event.coords.lng;
+  }
+
   ngOnDestroy() {
     this.paramsSub.unsubscribe();
     this.partySub.unsubscribe();
-- 
2.10.2


From bae079fd50a9d18331d64643530a49c4e3cddb1b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:22:56 +0300
Subject: [PATCH 156/304] Step 17.10: Add maps styles

---
 client/main.scss | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 client/main.scss

diff --git a/client/main.scss b/client/main.scss
new file mode 100644
index 0000000..d570355
--- /dev/null
+++ b/client/main.scss
@@ -0,0 +1,4 @@
+.sebm-google-map-container {
+  width: 400px;
+  height: 400px;
+}
\ No newline at end of file
-- 
2.10.2


From 717ee8d23df2bda2fd682ad6cd0ff6faed0437f0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:25:46 +0300
Subject: [PATCH 157/304] Step 17.11: Add all parties locations on the map

---
 client/imports/app/parties/parties-list.component.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index a94ea42..043f2ff 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -18,7 +18,7 @@
     <li *ngFor="let party of parties | async">
       <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       <p>{{party.description}}</p>
-      <p>{{party.location}}</p>
+      <p>{{party.location.name}}</p>
       <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
       <div>
         Who is coming:
@@ -29,5 +29,18 @@
     </li>
   </ul>
 
+  <sebm-google-map
+    [latitude]="0"
+    [longitude]="0"
+    [zoom]="1">
+    <div *ngFor="let party of parties | async">
+      <sebm-google-map-marker
+        *ngIf="party.location.lat"
+        [latitude]="party.location.lat"
+        [longitude]="party.location.lng">
+      </sebm-google-map-marker>
+    </div>
+  </sebm-google-map>
+
   <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.10.2


From a6c94071a60e3cb98693fc0958a7859b096a2352 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:52 -0200
Subject: [PATCH 158/304] Step 17: Google Maps

---
 manuals/templates/step17.md | 125 ++++++++++++++
 manuals/views/step17.md     | 396 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 521 insertions(+)
 create mode 100644 manuals/templates/step17.md
 create mode 100644 manuals/views/step17.md

diff --git a/manuals/templates/step17.md b/manuals/templates/step17.md
new file mode 100644
index 0000000..dd0a5f3
--- /dev/null
+++ b/manuals/templates/step17.md
@@ -0,0 +1,125 @@
+As you see, our app looks far from fancy using only
+pure HTML templates. It urgently needs graphical design improvements
+to be usable. We are going to fix this issue in the next three steps starting
+from the current. Ultimately, we'll try out two graphical design front-end libraries: Twitter's Bootstrap and Google's Material Design,
+which are among most popular design libraries and has multiple open-source implementations on the market.
+
+But first up, we'll add one more visual feature to the Socially: maps.
+This will be quite beneficial, taking into account specifics of our app:
+parties need precise locations to avoid confusions.
+We are going to imploy this package of Google Maps components for Angular 2.
+
+# Adding Location Coordinates
+
+Having maps on board, we can make use of latitute and
+longitute coordinates, which are most precise location information possible.
+And of course, we'll show everything on the map to make this information
+comprehensive for users.
+
+There are two pages in the app which will be changed: main page to
+show all parties' locations on the map and party details page to show and
+change a particular party's location on the map. If it's done nicely,
+it will certantly look terrific and attract more users to the app.
+
+Before we start with the maps directly, we need to make some preparations.
+First up, we need to extend `Party`'s with two more properties: "lat" and "lng",
+which are the above mentioned latitude and longitude.
+Since we have the location name and would like not to remove it since it still might be useful,
+let's consider converting "location" property to an object with three properties: "name", "lat", and "lng".
+It will require, though, some changes in other parts of the app, where `Party` type is used.
+
+Let's add those changes consequently, starting from `Party` type itself:
+
+{{{diff_step 17.1}}}
+
+Then, change the parties, that are created and added on the server initially, accordingly:
+
+{{{diff_step 17.2}}}
+
+The PartiesForm component needs to be changed too to reflect type changes:
+
+{{{diff_step 17.3}}}
+
+Lastly, we are updating the parties publications. It's interesting to
+see what a small change is required to update the parties search by location: it needs only to point out that "location" property has been moved to "location.name", thanks to Mongo's flexible API:
+
+{{{diff_step 17.4}}}
+
+And also let's update it in the view:
+
+{{{diff_step 17.7}}}
+
+Now when we are done with updates, let's reset the database in case it has
+parties of the old type (remember how to do it? Execute `meteor reset`). Then, run the app to make sure that everything is alright and
+works as before.
+
+# Adding Google Maps
+
+Now is the time to upgrade above mentioned components to feature Google Maps.
+Let's add a Meteor package that wraps around that Google Maps NPM package:
+
+    $ meteor npm install angular2-google-maps --save
+
+And just like any other external package, we need to import the module into our `NgModule`:
+
+{{{diff_step 17.6}}}
+
+The maps package contains two major directives: one is to render a HTML container with Google Maps,
+another one is to visualize a map marker. Let's add a maps markup to the PartyDetails component's template:
+
+{{{diff_step 17.8}}}
+
+It needs some explanation. Our markup now contains these two directives.
+As you can see, parent map container directive has a party marker directive as a child element, so that it can be
+parsed and rendered on the map. We are setting "latitude" and "longitude" on the map directive, which will fixate the map at a particular location on the page load.
+
+You may notice as well, four new properties were added:
+"lat", "lng", "centerLat", and "centerLng". "lat" and "lng" are wrappers over a party's coordinates, while "centerLat" and "centerLng" are default center coordinates.
+In addition, location property binding has been corrected to reflect new type changes.
+
+Here come changes to the component itself, including imports, new coordinates properties, and maps click event handler:
+
+{{{diff_step 17.9}}}
+
+It's going to work in a scenario as follows:
+
+  - when the user visit a newly created party,
+    she will see a map centered at Palo Alto;
+  - if she clicks on some part of the map, a new marker
+    will be placed at that place;
+  - if she decides to save the party changes, new location coordinates will
+    be saved as well;
+  - on the next visit, the map will be centered at the saved party location
+    with a marker shown at this point.
+
+That's almost it with the party details. So far, so good and simple.
+
+The last change will be about CSS styles. To show the map container of a specific size,
+we'll have to set element styles. Since we'll need styles for that for two pages, let's create
+a separate CSS file for the whole app, which is, anyways, will be useful on the next steps:
+
+{{{diff_step 17.10}}}
+
+As usual, having introduced new feature, we are finishing it up with testing.
+Let's create a new party with the location name set to some existing place you know, and go to the details page. Click on the maps at the
+location that corresponds to the party's location name: a new marker should appear there.
+Now, click "Save" button and re-load the page: it should be loaded with the map and a marker on it at
+the point you've just pointed out.
+
+# Multiple Markers
+
+Adding multiple markers on the parties front page should be straightforward now.
+Here is the markup:
+
+{{{diff_step 17.11}}}
+
+As you can see, we are looping through the all parties and adding a new marker for each party,
+having checked if the current party has location coordinates available.
+We are also setting the minimum zoom and zero central coordinates on the map to set whole Earth view point initially.
+
+# Summary
+
+It turned to be quite easy to add location coordinates to the parties and make
+changes to the UI, which included Google Maps and location markers on them.
+
+Now we are all set to proceed to more radical visual design changes.
diff --git a/manuals/views/step17.md b/manuals/views/step17.md
new file mode 100644
index 0000000..b1c5c15
--- /dev/null
+++ b/manuals/views/step17.md
@@ -0,0 +1,396 @@
+[{]: <region> (header)
+# Step 17: Google Maps
+[}]: #
+[{]: <region> (body)
+As you see, our app looks far from fancy using only
+pure HTML templates. It urgently needs graphical design improvements
+to be usable. We are going to fix this issue in the next three steps starting
+from the current. Ultimately, we'll try out two graphical design front-end libraries: Twitter's Bootstrap and Google's Material Design,
+which are among most popular design libraries and has multiple open-source implementations on the market.
+
+But first up, we'll add one more visual feature to the Socially: maps.
+This will be quite beneficial, taking into account specifics of our app:
+parties need precise locations to avoid confusions.
+We are going to imploy this package of Google Maps components for Angular 2.
+
+# Adding Location Coordinates
+
+Having maps on board, we can make use of latitute and
+longitute coordinates, which are most precise location information possible.
+And of course, we'll show everything on the map to make this information
+comprehensive for users.
+
+There are two pages in the app which will be changed: main page to
+show all parties' locations on the map and party details page to show and
+change a particular party's location on the map. If it's done nicely,
+it will certantly look terrific and attract more users to the app.
+
+Before we start with the maps directly, we need to make some preparations.
+First up, we need to extend `Party`'s with two more properties: "lat" and "lng",
+which are the above mentioned latitude and longitude.
+Since we have the location name and would like not to remove it since it still might be useful,
+let's consider converting "location" property to an object with three properties: "name", "lat", and "lng".
+It will require, though, some changes in other parts of the app, where `Party` type is used.
+
+Let's add those changes consequently, starting from `Party` type itself:
+
+[{]: <helper> (diff_step 17.1)
+#### Step 17.1: Extend party location with coords
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -3,7 +3,7 @@
+ ┊3┊3┊export interface Party extends CollectionObject {
+ ┊4┊4┊  name: string;
+ ┊5┊5┊  description: string;
+-┊6┊ ┊  location: string;
++┊ ┊6┊  location: Location;
+ ┊7┊7┊  owner?: string;
+ ┊8┊8┊  public: boolean;
+ ┊9┊9┊  invited?: string[];
+```
+```diff
+@@ -13,4 +13,10 @@
+ ┊13┊13┊interface RSVP {
+ ┊14┊14┊  userId: string;
+ ┊15┊15┊  response: string;
++┊  ┊16┊}
++┊  ┊17┊
++┊  ┊18┊interface Location {
++┊  ┊19┊  name: string;
++┊  ┊20┊  lat?: number;
++┊  ┊21┊  lng?: number;
+ ┊16┊22┊}🚫↵
+```
+[}]: #
+
+Then, change the parties, that are created and added on the server initially, accordingly:
+
+[{]: <helper> (diff_step 17.2)
+#### Step 17.2: Change initial parties accordingly
+
+##### Changed server/imports/fixtures/parties.ts
+```diff
+@@ -6,17 +6,23 @@
+ ┊ 6┊ 6┊    const parties: Party[] = [{
+ ┊ 7┊ 7┊      name: 'Dubstep-Free Zone',
+ ┊ 8┊ 8┊      description: 'Can we please just for an evening not listen to dubstep.',
+-┊ 9┊  ┊      location: 'Palo Alto',
++┊  ┊ 9┊      location: {
++┊  ┊10┊        name: 'Palo Alto'
++┊  ┊11┊      },
+ ┊10┊12┊      public: true
+ ┊11┊13┊    }, {
+ ┊12┊14┊      name: 'All dubstep all the time',
+ ┊13┊15┊      description: 'Get it on!',
+-┊14┊  ┊      location: 'Palo Alto',
++┊  ┊16┊      location: {
++┊  ┊17┊        name: 'Palo Alto'
++┊  ┊18┊      },
+ ┊15┊19┊      public: true
+ ┊16┊20┊    }, {
+ ┊17┊21┊      name: 'Savage lounging',
+ ┊18┊22┊      description: 'Leisure suit required. And only fiercest manners.',
+-┊19┊  ┊      location: 'San Francisco',
++┊  ┊23┊      location: {
++┊  ┊24┊        name: 'San Francisco'
++┊  ┊25┊      },
+ ┊20┊26┊      public: false
+ ┊21┊27┊    }];
+```
+[}]: #
+
+The PartiesForm component needs to be changed too to reflect type changes:
+
+[{]: <helper> (diff_step 17.3)
+#### Step 17.3: Change party creation component
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -33,7 +33,15 @@
+ ┊33┊33┊    }
+ ┊34┊34┊
+ ┊35┊35┊    if (this.addForm.valid) {
+-┊36┊  ┊      Parties.insert(Object.assign({}, this.addForm.value, { owner: Meteor.userId() }));
++┊  ┊36┊      Parties.insert({
++┊  ┊37┊        name: this.addForm.value.name,
++┊  ┊38┊        description: this.addForm.value.description,
++┊  ┊39┊        location: {
++┊  ┊40┊          name: this.addForm.value.location
++┊  ┊41┊        },
++┊  ┊42┊        public: this.addForm.value.public,
++┊  ┊43┊        owner: Meteor.userId()
++┊  ┊44┊      });
+ ┊37┊45┊
+ ┊38┊46┊      this.addForm.reset();
+ ┊39┊47┊    }
+```
+[}]: #
+
+Lastly, we are updating the parties publications. It's interesting to
+see what a small change is required to update the parties search by location: it needs only to point out that "location" property has been moved to "location.name", thanks to Mongo's flexible API:
+
+[{]: <helper> (diff_step 17.4)
+#### Step 17.4: Reflect type changes in the parties search
+
+##### Changed server/imports/publications/parties.ts
+```diff
+@@ -60,7 +60,7 @@
+ ┊60┊60┊
+ ┊61┊61┊  return {
+ ┊62┊62┊    $and: [{
+-┊63┊  ┊        location: searchRegEx
++┊  ┊63┊        'location.name': searchRegEx
+ ┊64┊64┊      },
+ ┊65┊65┊      isAvailable
+ ┊66┊66┊    ]
+```
+[}]: #
+
+And also let's update it in the view:
+
+[{]: <helper> (diff_step 17.7)
+#### Step 17.7: Change ngModel to location.name
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -6,7 +6,7 @@
+ ┊ 6┊ 6┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
+ ┊ 7┊ 7┊
+ ┊ 8┊ 8┊  <label>Location</label>
+-┊ 9┊  ┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location" name="location">
++┊  ┊ 9┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location">
+ ┊10┊10┊
+ ┊11┊11┊  <button [disabled]="!isOwner" type="submit">Save</button>
+ ┊12┊12┊  <a [routerLink]="['/']">Cancel</a>
+```
+[}]: #
+
+Now when we are done with updates, let's reset the database in case it has
+parties of the old type (remember how to do it? Execute `meteor reset`). Then, run the app to make sure that everything is alright and
+works as before.
+
+# Adding Google Maps
+
+Now is the time to upgrade above mentioned components to feature Google Maps.
+Let's add a Meteor package that wraps around that Google Maps NPM package:
+
+    $ meteor npm install angular2-google-maps --save
+
+And just like any other external package, we need to import the module into our `NgModule`:
+
+[{]: <helper> (diff_step 17.6)
+#### Step 17.6: Import google maps module
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -4,6 +4,7 @@
+ ┊ 4┊ 4┊import { RouterModule } from '@angular/router';
+ ┊ 5┊ 5┊import { AccountsModule } from 'angular2-meteor-accounts-ui';
+ ┊ 6┊ 6┊import { Ng2PaginationModule } from 'ng2-pagination';
++┊  ┊ 7┊import { AgmCoreModule } from 'angular2-google-maps/core';
+ ┊ 7┊ 8┊
+ ┊ 8┊ 9┊import { AppComponent } from './app.component';
+ ┊ 9┊10┊import { routes, ROUTES_PROVIDERS } from './app.routes';
+```
+```diff
+@@ -17,7 +18,10 @@
+ ┊17┊18┊    ReactiveFormsModule,
+ ┊18┊19┊    RouterModule.forRoot(routes),
+ ┊19┊20┊    AccountsModule,
+-┊20┊  ┊    Ng2PaginationModule
++┊  ┊21┊    Ng2PaginationModule,
++┊  ┊22┊    AgmCoreModule.forRoot({
++┊  ┊23┊      apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
++┊  ┊24┊    })
+ ┊21┊25┊  ],
+ ┊22┊26┊  declarations: [
+ ┊23┊27┊    AppComponent,
+```
+[}]: #
+
+The maps package contains two major directives: one is to render a HTML container with Google Maps,
+another one is to visualize a map marker. Let's add a maps markup to the PartyDetails component's template:
+
+[{]: <helper> (diff_step 17.8)
+#### Step 17.8: Use in a template
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -28,3 +28,15 @@
+ ┊28┊28┊  <input type="button" value="Maybe" (click)="reply('maybe')">
+ ┊29┊29┊  <input type="button" value="No" (click)="reply('no')">
+ ┊30┊30┊</div>
++┊  ┊31┊
++┊  ┊32┊<sebm-google-map
++┊  ┊33┊  [latitude]="lat || centerLat"
++┊  ┊34┊  [longitude]="lng || centerLng"
++┊  ┊35┊  [zoom]="8"
++┊  ┊36┊  (mapClick)="mapClicked($event)">
++┊  ┊37┊  <sebm-google-map-marker
++┊  ┊38┊    *ngIf="lat && lng"
++┊  ┊39┊    [latitude]="lat"
++┊  ┊40┊    [longitude]="lng">
++┊  ┊41┊  </sebm-google-map-marker>
++┊  ┊42┊</sebm-google-map>🚫↵
+```
+[}]: #
+
+It needs some explanation. Our markup now contains these two directives.
+As you can see, parent map container directive has a party marker directive as a child element, so that it can be
+parsed and rendered on the map. We are setting "latitude" and "longitude" on the map directive, which will fixate the map at a particular location on the page load.
+
+You may notice as well, four new properties were added:
+"lat", "lng", "centerLat", and "centerLng". "lat" and "lng" are wrappers over a party's coordinates, while "centerLat" and "centerLng" are default center coordinates.
+In addition, location property binding has been corrected to reflect new type changes.
+
+Here come changes to the component itself, including imports, new coordinates properties, and maps click event handler:
+
+[{]: <helper> (diff_step 17.9)
+#### Step 17.9: Add maps logic to the component
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -5,6 +5,7 @@
+ ┊ 5┊ 5┊import { Meteor } from 'meteor/meteor';
+ ┊ 6┊ 6┊import { MeteorObservable } from 'meteor-rxjs';
+ ┊ 7┊ 7┊import { InjectUser } from "angular2-meteor-accounts-ui";
++┊  ┊ 8┊import { MouseEvent } from "angular2-google-maps/core";
+ ┊ 8┊ 9┊
+ ┊ 9┊10┊import 'rxjs/add/operator/map';
+ ┊10┊11┊
+```
+```diff
+@@ -28,6 +29,9 @@
+ ┊28┊29┊  users: Observable<User>;
+ ┊29┊30┊  uninvitedSub: Subscription;
+ ┊30┊31┊  user: Meteor.User;
++┊  ┊32┊  // Default center Palo Alto coordinates.
++┊  ┊33┊  centerLat: number = 37.4292;
++┊  ┊34┊  centerLng: number = -122.1381;
+ ┊31┊35┊
+ ┊32┊36┊  constructor(
+ ┊33┊37┊    private route: ActivatedRoute
+```
+```diff
+@@ -121,6 +125,20 @@
+ ┊121┊125┊    return false;
+ ┊122┊126┊  }
+ ┊123┊127┊
++┊   ┊128┊
++┊   ┊129┊  get lat(): number {
++┊   ┊130┊    return this.party && this.party.location.lat;
++┊   ┊131┊  }
++┊   ┊132┊
++┊   ┊133┊  get lng(): number {
++┊   ┊134┊    return this.party && this.party.location.lng;
++┊   ┊135┊  }
++┊   ┊136┊
++┊   ┊137┊  mapClicked($event: MouseEvent) {
++┊   ┊138┊    this.party.location.lat = $event.coords.lat;
++┊   ┊139┊    this.party.location.lng = $event.coords.lng;
++┊   ┊140┊  }
++┊   ┊141┊
+ ┊124┊142┊  ngOnDestroy() {
+ ┊125┊143┊    this.paramsSub.unsubscribe();
+ ┊126┊144┊    this.partySub.unsubscribe();
+```
+[}]: #
+
+It's going to work in a scenario as follows:
+
+  - when the user visit a newly created party,
+    she will see a map centered at Palo Alto;
+  - if she clicks on some part of the map, a new marker
+    will be placed at that place;
+  - if she decides to save the party changes, new location coordinates will
+    be saved as well;
+  - on the next visit, the map will be centered at the saved party location
+    with a marker shown at this point.
+
+That's almost it with the party details. So far, so good and simple.
+
+The last change will be about CSS styles. To show the map container of a specific size,
+we'll have to set element styles. Since we'll need styles for that for two pages, let's create
+a separate CSS file for the whole app, which is, anyways, will be useful on the next steps:
+
+[{]: <helper> (diff_step 17.10)
+#### Step 17.10: Add maps styles
+
+##### Added client/main.scss
+```diff
+@@ -0,0 +1,4 @@
++┊ ┊1┊.sebm-google-map-container {
++┊ ┊2┊  width: 400px;
++┊ ┊3┊  height: 400px;
++┊ ┊4┊}🚫↵
+```
+[}]: #
+
+As usual, having introduced new feature, we are finishing it up with testing.
+Let's create a new party with the location name set to some existing place you know, and go to the details page. Click on the maps at the
+location that corresponds to the party's location name: a new marker should appear there.
+Now, click "Save" button and re-load the page: it should be loaded with the map and a marker on it at
+the point you've just pointed out.
+
+# Multiple Markers
+
+Adding multiple markers on the parties front page should be straightforward now.
+Here is the markup:
+
+[{]: <helper> (diff_step 17.11)
+#### Step 17.11: Add all parties locations on the map
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -18,7 +18,7 @@
+ ┊18┊18┊    <li *ngFor="let party of parties | async">
+ ┊19┊19┊      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+ ┊20┊20┊      <p>{{party.description}}</p>
+-┊21┊  ┊      <p>{{party.location}}</p>
++┊  ┊21┊      <p>{{party.location.name}}</p>
+ ┊22┊22┊      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
+ ┊23┊23┊      <div>
+ ┊24┊24┊        Who is coming:
+```
+```diff
+@@ -29,5 +29,18 @@
+ ┊29┊29┊    </li>
+ ┊30┊30┊  </ul>
+ ┊31┊31┊
++┊  ┊32┊  <sebm-google-map
++┊  ┊33┊    [latitude]="0"
++┊  ┊34┊    [longitude]="0"
++┊  ┊35┊    [zoom]="1">
++┊  ┊36┊    <div *ngFor="let party of parties | async">
++┊  ┊37┊      <sebm-google-map-marker
++┊  ┊38┊        *ngIf="party.location.lat"
++┊  ┊39┊        [latitude]="party.location.lat"
++┊  ┊40┊        [longitude]="party.location.lng">
++┊  ┊41┊      </sebm-google-map-marker>
++┊  ┊42┊    </div>
++┊  ┊43┊  </sebm-google-map>
++┊  ┊44┊
+ ┊32┊45┊  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+ ┊33┊46┊</div>🚫↵
+```
+[}]: #
+
+As you can see, we are looping through the all parties and adding a new marker for each party,
+having checked if the current party has location coordinates available.
+We are also setting the minimum zoom and zero central coordinates on the map to set whole Earth view point initially.
+
+# Summary
+
+It turned to be quite easy to add location coordinates to the parties and make
+changes to the UI, which included Google Maps and location markers on them.
+
+Now we are all set to proceed to more radical visual design changes.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step16.md) | [Next Step >](step18.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 6d8ed9b35632cc23c855932db4ff8e5e85740202 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:43:17 +0300
Subject: [PATCH 159/304] Step 18.1: Install Bootstrap 4

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index abefcee..06255a4 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
     "angular2-meteor-accounts-ui": "1.0.0",
     "angular2-meteor-polyfills": "^0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
+    "bootstrap": "^4.0.0-alpha.4",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
     "ng2-pagination": "0.5.1",
-- 
2.10.2


From 25d49e10cf8c3d97b314f1f041af0e4cf2d965c8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:44:18 +0300
Subject: [PATCH 160/304] Step 18.2: Import bootstrap style into the main style
 file

---
 client/main.scss | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/main.scss b/client/main.scss
index d570355..65392b5 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,3 +1,5 @@
+@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
+
 .sebm-google-map-container {
   width: 400px;
   height: 400px;
-- 
2.10.2


From e099605cd46e8b898bbea0bb1d30582410c951c4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:44:23 +0300
Subject: [PATCH 161/304] Step 18.3: Add bootstrap navbar

---
 client/imports/app/app.component.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index b426778..b3c49f0 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,3 +1,6 @@
-<div>
+<nav class="navbar navbar-light bg-faded">
+  <a class="navbar-brand" href="#">Socially</a>
+</nav>
+<div class="container-fluid">
   <router-outlet></router-outlet>
 </div>
\ No newline at end of file
-- 
2.10.2


From 80e8d62f07ad49b02bd2d3db885fdaa2ea304e4e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:49:04 +0300
Subject: [PATCH 162/304] Step 18.4: Remove LoginButtons from a template

---
 client/imports/app/parties/parties-list.component.html | 2 --
 1 file changed, 2 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 043f2ff..96fd80f 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -2,8 +2,6 @@
   <parties-form [hidden]="!user" style="float: left"></parties-form>
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
-  
-  <login-buttons></login-buttons>
 
   <h1>Parties:</h1>
 
-- 
2.10.2


From 502332a2553faa16204bb13639e919d7dc79ba95 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:49:33 +0300
Subject: [PATCH 163/304] Step 18.5: Add login buttons to the navigation bar

---
 client/imports/app/app.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index b3c49f0..dffc2ea 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,5 +1,6 @@
 <nav class="navbar navbar-light bg-faded">
   <a class="navbar-brand" href="#">Socially</a>
+  <login-buttons class="pull-right"></login-buttons>
 </nav>
 <div class="container-fluid">
   <router-outlet></router-outlet>
-- 
2.10.2


From daab7578a6f1a41d1e2fd41d58deb11c51b9a70d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:50:05 +0300
Subject: [PATCH 164/304] Step 18.6: Add fonts and FontAwesome

---
 client/index.html | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/index.html b/client/index.html
index 4e8596c..264730d 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,5 +1,8 @@
 <head>
+  <meta name="viewport" content="width=device-width, initial-scale=1">
   <base href="/">
+  <link href='http://fonts.googleapis.com/css?family=Muli:400,300' rel='stylesheet' type='text/css'>
+  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
 </head>
 <body>
   <app>Loading...</app>
-- 
2.10.2


From bb5124e8818d9d17f314f58311c786529edf4f1e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:53:42 +0300
Subject: [PATCH 165/304] Step 18.7: Update the new party form

---
 .../app/parties/parties-form.component.html        | 30 +++++++++++++---------
 1 file changed, 18 insertions(+), 12 deletions(-)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index 3cc8990..c791629 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -1,15 +1,21 @@
-<form [formGroup]="addForm" (ngSubmit)="addParty()">
-  <label>Name</label>
-  <input type="text" formControlName="name">
+<form [formGroup]="addForm" (ngSubmit)="addParty()" class="form-inline">
+  <fieldset class="form-group">
+    <label for="partyName">Party name</label>
+    <input id="partyName" class="form-control" type="text" formControlName="name" placeholder="Party name" />
 
-  <label>Description</label>
-  <input type="text" formControlName="description">
+    <label for="description">Description</label>
+    <input id="description" class="form-control" type="text" formControlName="description" placeholder="Description">
 
-  <label>Location</label>
-  <input type="text" formControlName="location">
+    <label for="location_name">Location</label>
+    <input id="location_name" class="form-control" type="text" formControlName="location" placeholder="Location name">
 
-  <label>Public</label>
-  <input type="checkbox" formControlName="public">
-  
-  <button type="submit">Add</button>
-</form>
\ No newline at end of file
+    <div class="checkbox">
+      <label>
+        <input type="checkbox" formControlName="public">
+        Public
+      </label>
+    </div>
+
+    <button type="submit" class="btn btn-primary">Add</button>
+  </fieldset>
+</form>
-- 
2.10.2


From c8a2d4c3d55b720941d6a01c41aa5e2e85130af8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:55:08 +0300
Subject: [PATCH 166/304] Step 18.8: Update parties list layout

---
 .../app/parties/parties-list.component.html        | 134 +++++++++++++++------
 1 file changed, 95 insertions(+), 39 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 96fd80f..0629b28 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -1,44 +1,100 @@
-<div>
-  <parties-form [hidden]="!user" style="float: left"></parties-form>
-  <input type="text" #searchtext placeholder="Search by Location">
-  <button type="button" (click)="search(searchtext.value)">Search</button>
-
-  <h1>Parties:</h1>
-
-  <div>
-    <select #sort (change)="changeSortOrder(sort.value)">
+<div class="row">
+  <div class="col-md-12">
+    <div class="jumbotron">
+      <h3>Create a new party!</h3>
+      <parties-form [hidden]="!user"></parties-form>
+      <div [hidden]="user">You need to login to create new parties!</div>
+    </div>
+  </div>
+</div>
+<div class="row ma-filters">
+  <div class="col-md-6">
+    <h3>All Parties:</h3>
+    <form class="form-inline">
+      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
+      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
+      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
       <option value="1" selected>Ascending</option>
       <option value="-1">Descending</option>
     </select>
+    </form>
+  </div>
+</div>
+<div class="row">
+  <div class="col-md-6">
+    <ul class="list-group">
+      <li class="list-group-item">
+        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+      </li>
+      <li *ngFor="let party of parties | async"
+          class="list-group-item ma-party-item">
+        <div class="row">
+          <div class="col-sm-8">
+            <h2 class="ma-party-name">
+              <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+            </h2>
+            @ {{party.location.name}}
+            <p class="ma-party-description">
+              {{party.description}}
+            </p>
+          </div>
+          <div class="col-sm-4">
+            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
+              class="fa fa-times"></i></button>
+          </div>
+        </div>
+        <div class="row ma-party-item-bottom">
+          <div class="col-sm-4">
+            <div class="ma-rsvp-sum">
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'yes'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  YES
+                </div>
+              </div>
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'maybe'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  MAYBE
+                </div>
+              </div>
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'no'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  NO
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
+      </li>
+      <li class="list-group-item">
+        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+      </li>
+    </ul>
+  </div>
+  <div class="col-md-6">
+    <ul class="list-group">
+      <li class="list-group-item">
+        <sebm-google-map
+          [latitude]="0"
+          [longitude]="0"
+          [zoom]="1">
+          <div *ngFor="let party of parties | async">
+            <sebm-google-map-marker
+              *ngIf="party.location.lat"
+              [latitude]="party.location.lat"
+              [longitude]="party.location.lng">
+            </sebm-google-map-marker>
+          </div>
+        </sebm-google-map>
+      </li>
+    </ul>
   </div>
-
-  <ul>
-    <li *ngFor="let party of parties | async">
-      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-      <p>{{party.description}}</p>
-      <p>{{party.location.name}}</p>
-      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
-      <div>
-        Who is coming:
-        Yes - {{party | rsvp:'yes'}}
-        Maybe - {{party | rsvp:'maybe'}}
-        No - {{party | rsvp:'no'}}
-      </div>
-    </li>
-  </ul>
-
-  <sebm-google-map
-    [latitude]="0"
-    [longitude]="0"
-    [zoom]="1">
-    <div *ngFor="let party of parties | async">
-      <sebm-google-map-marker
-        *ngIf="party.location.lat"
-        [latitude]="party.location.lat"
-        [longitude]="party.location.lng">
-      </sebm-google-map-marker>
-    </div>
-  </sebm-google-map>
-
-  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.10.2


From 9e81e867246f03759a736c4f1d80434d62fba303 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:56:18 +0300
Subject: [PATCH 167/304] Step 18.9: Add styles for PartiesList

---
 .../app/parties/parties-list.component.scss        | 127 +++++++++++++++++++++
 1 file changed, 127 insertions(+)
 create mode 100644 client/imports/app/parties/parties-list.component.scss

diff --git a/client/imports/app/parties/parties-list.component.scss b/client/imports/app/parties/parties-list.component.scss
new file mode 100644
index 0000000..3e09211
--- /dev/null
+++ b/client/imports/app/parties/parties-list.component.scss
@@ -0,0 +1,127 @@
+@import "../colors";
+
+.ma-add-button-container {
+  button.btn {
+    background: $color3;
+    float: right;
+    margin-right: 5px;
+    outline: none;
+    i {
+      color: $color5;
+    }
+  }
+}
+
+.ma-parties-col {
+  padding-top: 20px;
+}
+
+.ma-filters {
+  margin-bottom: 10px;
+}
+
+.ma-party-item {
+  .ma-party-name {
+    margin-bottom: 20px;
+    a {
+      color: $color6;
+      text-decoration: none !important;
+      font-weight: 400;
+    }
+  }
+  .ma-party-description {
+    color: $color6;
+    font-weight: 300;
+    padding-left: 18px;
+    font-size: 14px;
+  }
+
+  .ma-remove {
+    color: lighten($color7, 20%);
+    position: absolute;
+    right: 20px;
+    top: 20px;
+    &:hover {
+      color: $color7;
+    }
+  }
+
+  .ma-party-item-bottom {
+    padding-top: 10px;
+    .ma-posted-by-col {
+      .ma-posted-by {
+        color: darken($color4, 30%);
+        font-size: 12px;
+      }
+      .ma-everyone-invited {
+        @media (max-width: 400px) {
+          display: block;
+          i {
+            margin-left: 0px !important;
+          }
+        }
+        font-size: 12px;
+        color: darken($color4, 10%);
+        i {
+          color: darken($color4, 10%);
+          margin-left: 5px;
+        }
+      }
+    }
+
+    .ma-rsvp-buttons {
+      input.btn {
+        color: darken($color3, 20%);
+        background: transparent !important;
+        outline: none;
+        padding-left: 0;
+        &:active {
+          box-shadow: none;
+        }
+        &:hover {
+          color: darken($color3, 30%);
+        }
+        &.btn-primary {
+          color: lighten($color3, 10%);
+          border: 0;
+          background: transparent !important;
+        }
+      }
+    }
+
+    .ma-rsvp-sum {
+      width: 160px;
+      @media (min-width: 400px) {
+        float: right;
+      }
+      @media (max-width: 400px) {
+        margin: 0 auto;
+      }
+    }
+    .ma-rsvp-amount {
+      display: inline-block;
+      text-align: center;
+      width: 50px;
+      .ma-amount {
+        font-weight: bold;
+        font-size: 20px;
+      }
+      .ma-rsvp-title {
+        font-size: 11px;
+        color: #aaa;
+        text-transform: uppercase;
+      }
+    }
+  }
+}
+
+.ma-angular-map-col {
+  .angular-google-map-container, .angular-google-map {
+    height: 100%;
+    width: 100%;
+  }
+}
+
+.search-form {
+  margin-bottom: 1em;
+}
\ No newline at end of file
-- 
2.10.2


From eed938aad1cb46b064513a5443513eba574348be Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:56:48 +0300
Subject: [PATCH 168/304] Step 18.10: Add styles for the party details page

---
 .../app/parties/party-details.component.scss       | 32 ++++++++++++++++++++++
 1 file changed, 32 insertions(+)
 create mode 100644 client/imports/app/parties/party-details.component.scss

diff --git a/client/imports/app/parties/party-details.component.scss b/client/imports/app/parties/party-details.component.scss
new file mode 100644
index 0000000..82dcfc3
--- /dev/null
+++ b/client/imports/app/parties/party-details.component.scss
@@ -0,0 +1,32 @@
+.ma-party-details-container {
+  padding: 20px;
+
+  .angular-google-map-container {
+    width: 100%;
+    height: 100%;
+  }
+
+  .angular-google-map {
+    width: 100%;
+    height: 400px;
+  }
+
+  .ma-map-title {
+    font-size: 16px;
+    font-weight: bolder;
+  }
+
+  .ma-invite-list {
+    margin-top: 20px;
+    margin-bottom: 20px;
+
+    h3 {
+      font-size: 16px;
+      font-weight: bolder;
+    }
+
+    ul {
+      padding: 0;
+    }
+  }
+}
\ No newline at end of file
-- 
2.10.2


From a66a9ab0e76124d5032fed235751e80a1eccce8d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:57:37 +0300
Subject: [PATCH 169/304] Step 18.11: Add components styles in main style entry
 point

---
 client/imports/app/colors.scss |  7 +++++++
 client/main.scss               | 33 ++++++++++++++++++++++++++++++---
 2 files changed, 37 insertions(+), 3 deletions(-)
 create mode 100644 client/imports/app/colors.scss

diff --git a/client/imports/app/colors.scss b/client/imports/app/colors.scss
new file mode 100644
index 0000000..8c50009
--- /dev/null
+++ b/client/imports/app/colors.scss
@@ -0,0 +1,7 @@
+$color1 : #2F2933;
+$color2 : #01A2A6;
+$color3 : #29D9C2;
+$color4 : #BDF271;
+$color5 : #FFFFA6;
+$color6 : #2F2933;
+$color7 : #FF6F69;
\ No newline at end of file
diff --git a/client/main.scss b/client/main.scss
index 65392b5..5dc2452 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,6 +1,33 @@
-@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
+@import "../node_modules/bootstrap/scss/bootstrap.scss";
+@import "./imports/app/colors.scss";
+
+html, body {
+  height: 100%;
+}
+
+body {
+  background-color: #f8f8f8;
+  font-family: 'Muli', sans-serif;
+}
 
 .sebm-google-map-container {
-  width: 400px;
-  height: 400px;
+  width: 450px;
+  height: 450px;
+}
+
+.navbar {
+  background-color: #ffffff;
+  border-bottom: #eee 1px solid;
+  color: $color3;
+  font-family: 'Muli', sans-serif;
+  a {
+    color: $color3;
+    text-decoration: none !important;
+  }
+
+  .navbar-right-container {
+    position: absolute;
+    top: 17px;
+    right: 17px;
+  }
 }
\ No newline at end of file
-- 
2.10.2


From fd144603376ec7b5267294174d90f4fad0588726 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 13:19:34 +0300
Subject: [PATCH 170/304] Step 18.12: Import parties list style

---
 client/imports/app/parties/parties-list.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 2e45027..341adea 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -13,6 +13,7 @@ import { Parties } from '../../../../both/collections/parties.collection';
 import { Party } from '../../../../both/models/party.model';
 
 import template from './parties-list.component.html';
+import style from './parties-list.component.scss';
 
 interface Pagination {
   limit: number;
@@ -25,7 +26,8 @@ interface Options extends Pagination {
 
 @Component({
   selector: 'parties-list',
-  template
+  template,
+  styles: [ style ]
 })
 @InjectUser('user')
 export class PartiesListComponent implements OnInit, OnDestroy {
-- 
2.10.2


From c477ffd67b9d55f88ec9ba72656c51ca217163e7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 13:19:55 +0300
Subject: [PATCH 171/304] Step 18.13: Import party details style

---
 client/imports/app/parties/party-details.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/party-details.component.ts b/client/imports/app/parties/party-details.component.ts
index 7b8d963..cc3f5de 100644
--- a/client/imports/app/parties/party-details.component.ts
+++ b/client/imports/app/parties/party-details.component.ts
@@ -15,10 +15,12 @@ import { Users } from '../../../../both/collections/users.collection';
 import { User } from '../../../../both/models/user.model';
 
 import template from './party-details.component.html';
+import style from './party-details.component.scss';
 
 @Component({
   selector: 'party-details',
-  template
+  template,
+  styles: [ style ]
 })
 @InjectUser('user')
 export class PartyDetailsComponent implements OnInit, OnDestroy {
-- 
2.10.2


From d67bc4f203365f549abea08584ff16265cef5841 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:58:27 +0300
Subject: [PATCH 172/304] Step 18.14: Update the layout of the party details
 page

---
 .../app/parties/party-details.component.html       | 91 +++++++++++++---------
 1 file changed, 55 insertions(+), 36 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index 151fb03..c7fc234 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -1,42 +1,61 @@
-<form *ngIf="party" (submit)="saveParty()">
-  <label>Name</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name">
+<div class="row ma-party-details-container">
+  <div class="col-sm-6 col-sm-offset-3">
+    <legend>View and Edit Your Party Details:</legend>
+    <form class="form-horizontal" *ngIf="party" (submit)="saveParty()">
+      <div class="form-group">
+        <label>Party Name</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name" class="form-control">
+      </div>
 
-  <label>Description</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
+      <div class="form-group">
+        <label>Description</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description" class="form-control">
+      </div>
 
-  <label>Location</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location">
+      <div class="form-group">
+        <label>Location name</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location" class="form-control">
+      </div>
 
-  <button [disabled]="!isOwner" type="submit">Save</button>
-  <a [routerLink]="['/']">Cancel</a>
-</form>
+      <div class="form-group">
+        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
+        <a [routerLink]="['/']" class="btn">Back</a>
+      </div>
+    </form>
 
-<div *ngIf="isOwner || isPublic">
-  <p>Users to invite:</p>
-  <ul>
-    <li *ngFor="let user of users | async">
-      <div>{{user | displayName}}</div>
-      <button (click)="invite(user)">Invite</button>
-    </li>
-  </ul>
-</div>
+    <ul class="ma-invite-list" *ngIf="isOwner || isPublic">
+      <h3>
+        Users to invite:
+      </h3>
+      <li *ngFor="let user of users | async">
+        <div>{{ user | displayName }}</div>
+        <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
+      </li>
+    </ul>
 
-<div *ngIf="isInvited">
-  <h2>Reply to the invitation</h2>
-  <input type="button" value="I'm going!" (click)="reply('yes')">
-  <input type="button" value="Maybe" (click)="reply('maybe')">
-  <input type="button" value="No" (click)="reply('no')">
-</div>
+    <div *ngIf="isInvited">
+      <h2>Reply to the invitation</h2>
+      <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
+      <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
+      <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
+    </div>
 
-<sebm-google-map
-  [latitude]="lat || centerLat"
-  [longitude]="lng || centerLng"
-  [zoom]="8"
-  (mapClick)="mapClicked($event)">
-  <sebm-google-map-marker
-    *ngIf="lat && lng"
-    [latitude]="lat"
-    [longitude]="lng">
-  </sebm-google-map-marker>
-</sebm-google-map>
\ No newline at end of file
+    <h3 class="ma-map-title">
+      Click the map to set the party location
+    </h3>
+
+    <div class="angular-google-map-container">
+      <sebm-google-map
+        [latitude]="lat || centerLat"
+        [longitude]="lng || centerLng"
+        [zoom]="8"
+        (mapClick)="mapClicked($event)">
+        <sebm-google-map-marker
+          *ngIf="lat && lng"
+          [latitude]="lat"
+          [longitude]="lng">
+        </sebm-google-map-marker>
+      </sebm-google-map>
+    </div>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 2a7ee1d3876cb9d106c650664ad29a4b17270e72 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:53 -0200
Subject: [PATCH 173/304] Step 18: CSS, SASS and Bootstrap

---
 manuals/templates/step18.md |  92 ++++++
 manuals/views/step18.md     | 736 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 828 insertions(+)
 create mode 100644 manuals/templates/step18.md
 create mode 100644 manuals/views/step18.md

diff --git a/manuals/templates/step18.md b/manuals/templates/step18.md
new file mode 100644
index 0000000..cf11dcb
--- /dev/null
+++ b/manuals/templates/step18.md
@@ -0,0 +1,92 @@
+In this chapter we will add Twitter's bootstrap to our project, and add some style and layout to the project.
+
+# Adding and importing Bootstrap 4
+
+First, we need to add Bootstrap 4 to our project - so let's do that.
+
+Run the following command in your Terminal:
+
+    $ meteor npm install --save bootstrap@4.0.0-alpha.3
+
+ Import Bootstrap's styles into your project:
+
+{{{diff_step 18.2}}}
+
+# First touch of style
+
+Now let's add some style! we will add navigation bar in the top of the page.
+
+We will also add a container with the `router-outlet` to keep that content of the page:
+
+{{{diff_step 18.3}}}
+
+# Moving things around
+
+So first thing we want to do now, is to move the login buttons to another place - let's say that we want it as a part of the navigation bar.
+
+So first let's remove it from it's current place (parties list), first the view:
+
+{{{diff_step 18.4}}}
+
+And add it to the main component, which is the component that responsible to the navigation bar, so the view first:
+
+{{{diff_step 18.5}}}
+
+# Fonts and FontAwesome
+
+Meteor gives you the control of your `head` tag, so you can import fonts and add your `meta` tags.
+
+We will add a cool font and add [FontAwesome](https://fortawesome.github.io/Font-Awesome/) style file, which also contains it's font:
+
+{{{diff_step 18.6}}}
+
+# Some more style
+
+So now we will take advantage of all Bootstrap's features - first let's update the layout of the form:
+
+{{{diff_step 18.7}}}
+
+And now the parties list:
+
+{{{diff_step 18.8}}}
+
+# Styling components
+
+We will create style file for each component.
+
+So let's start with the parties list, and add some style (it's not that critical at the moment what is the effect of those CSS rules)
+
+{{{diff_step 18.9}}}
+
+> Note that we used the "colors.scss" import - don't worry - we will add it soon!
+
+And now let's add SASS file for the party details:
+
+{{{diff_step 18.10}}}
+
+Now let's add some styles and colors using SASS to the main file and create the colors definitions file we mentioned earlier:
+
+{{{diff_step 18.11}}}
+
+> We defined our colors in this file, and we used it all across the our application - so it's easy to change and modify the whole theme!
+
+Now let's use Angular 2 Component styles, which bundles the styles into the Component, without effecting other Component's styles (you can red more about it [here](https://angular.io/docs/ts/latest/guide/component-styles.html))
+
+So let's add it to the parties list:
+
+{{{diff_step 18.12}}}
+
+And to the party details:
+
+{{{diff_step 18.13}}}
+
+And use those new cool styles in the view of the party details:
+
+{{{diff_step 18.14}}}
+
+
+# Summary
+
+So in this chapter of the tutorial we added the Bootstrap library and used it's layout and CSS styles.
+
+We also learned how to integrate SASS compiler with Meteor and how to create isolated SASS styles for each component.
diff --git a/manuals/views/step18.md b/manuals/views/step18.md
new file mode 100644
index 0000000..e2fa235
--- /dev/null
+++ b/manuals/views/step18.md
@@ -0,0 +1,736 @@
+[{]: <region> (header)
+# Step 18: CSS, SASS and Bootstrap
+[}]: #
+[{]: <region> (body)
+In this chapter we will add Twitter's bootstrap to our project, and add some style and layout to the project.
+
+# Adding and importing Bootstrap 4
+
+First, we need to add Bootstrap 4 to our project - so let's do that.
+
+Run the following command in your Terminal:
+
+    $ meteor npm install --save bootstrap@4.0.0-alpha.3
+
+ Import Bootstrap's styles into your project:
+
+[{]: <helper> (diff_step 18.2)
+#### Step 18.2: Import bootstrap style into the main style file
+
+##### Changed client/main.scss
+```diff
+@@ -1,3 +1,5 @@
++┊ ┊1┊@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
++┊ ┊2┊
+ ┊1┊3┊.sebm-google-map-container {
+ ┊2┊4┊  width: 400px;
+ ┊3┊5┊  height: 400px;
+```
+[}]: #
+
+# First touch of style
+
+Now let's add some style! we will add navigation bar in the top of the page.
+
+We will also add a container with the `router-outlet` to keep that content of the page:
+
+[{]: <helper> (diff_step 18.3)
+#### Step 18.3: Add bootstrap navbar
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,3 +1,6 @@
+-┊1┊ ┊<div>
++┊ ┊1┊<nav class="navbar navbar-light bg-faded">
++┊ ┊2┊  <a class="navbar-brand" href="#">Socially</a>
++┊ ┊3┊</nav>
++┊ ┊4┊<div class="container-fluid">
+ ┊2┊5┊  <router-outlet></router-outlet>
+ ┊3┊6┊</div>🚫↵
+```
+[}]: #
+
+# Moving things around
+
+So first thing we want to do now, is to move the login buttons to another place - let's say that we want it as a part of the navigation bar.
+
+So first let's remove it from it's current place (parties list), first the view:
+
+[{]: <helper> (diff_step 18.4)
+#### Step 18.4: Remove LoginButtons from a template
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -2,8 +2,6 @@
+ ┊2┊2┊  <parties-form [hidden]="!user" style="float: left"></parties-form>
+ ┊3┊3┊  <input type="text" #searchtext placeholder="Search by Location">
+ ┊4┊4┊  <button type="button" (click)="search(searchtext.value)">Search</button>
+-┊5┊ ┊  
+-┊6┊ ┊  <login-buttons></login-buttons>
+ ┊7┊5┊
+ ┊8┊6┊  <h1>Parties:</h1>
+```
+[}]: #
+
+And add it to the main component, which is the component that responsible to the navigation bar, so the view first:
+
+[{]: <helper> (diff_step 18.5)
+#### Step 18.5: Add login buttons to the navigation bar
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊<nav class="navbar navbar-light bg-faded">
+ ┊2┊2┊  <a class="navbar-brand" href="#">Socially</a>
++┊ ┊3┊  <login-buttons class="pull-right"></login-buttons>
+ ┊3┊4┊</nav>
+ ┊4┊5┊<div class="container-fluid">
+ ┊5┊6┊  <router-outlet></router-outlet>
+```
+[}]: #
+
+# Fonts and FontAwesome
+
+Meteor gives you the control of your `head` tag, so you can import fonts and add your `meta` tags.
+
+We will add a cool font and add [FontAwesome](https://fortawesome.github.io/Font-Awesome/) style file, which also contains it's font:
+
+[{]: <helper> (diff_step 18.6)
+#### Step 18.6: Add fonts and FontAwesome
+
+##### Changed client/index.html
+```diff
+@@ -1,5 +1,8 @@
+ ┊1┊1┊<head>
++┊ ┊2┊  <meta name="viewport" content="width=device-width, initial-scale=1">
+ ┊2┊3┊  <base href="/">
++┊ ┊4┊  <link href='http://fonts.googleapis.com/css?family=Muli:400,300' rel='stylesheet' type='text/css'>
++┊ ┊5┊  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
+ ┊3┊6┊</head>
+ ┊4┊7┊<body>
+ ┊5┊8┊  <app>Loading...</app>
+```
+[}]: #
+
+# Some more style
+
+So now we will take advantage of all Bootstrap's features - first let's update the layout of the form:
+
+[{]: <helper> (diff_step 18.7)
+#### Step 18.7: Update the new party form
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -1,15 +1,21 @@
+-┊ 1┊  ┊<form [formGroup]="addForm" (ngSubmit)="addParty()">
+-┊ 2┊  ┊  <label>Name</label>
+-┊ 3┊  ┊  <input type="text" formControlName="name">
++┊  ┊ 1┊<form [formGroup]="addForm" (ngSubmit)="addParty()" class="form-inline">
++┊  ┊ 2┊  <fieldset class="form-group">
++┊  ┊ 3┊    <label for="partyName">Party name</label>
++┊  ┊ 4┊    <input id="partyName" class="form-control" type="text" formControlName="name" placeholder="Party name" />
+ ┊ 4┊ 5┊
+-┊ 5┊  ┊  <label>Description</label>
+-┊ 6┊  ┊  <input type="text" formControlName="description">
++┊  ┊ 6┊    <label for="description">Description</label>
++┊  ┊ 7┊    <input id="description" class="form-control" type="text" formControlName="description" placeholder="Description">
+ ┊ 7┊ 8┊
+-┊ 8┊  ┊  <label>Location</label>
+-┊ 9┊  ┊  <input type="text" formControlName="location">
++┊  ┊ 9┊    <label for="location_name">Location</label>
++┊  ┊10┊    <input id="location_name" class="form-control" type="text" formControlName="location" placeholder="Location name">
+ ┊10┊11┊
+-┊11┊  ┊  <label>Public</label>
+-┊12┊  ┊  <input type="checkbox" formControlName="public">
+-┊13┊  ┊  
+-┊14┊  ┊  <button type="submit">Add</button>
+-┊15┊  ┊</form>🚫↵
++┊  ┊12┊    <div class="checkbox">
++┊  ┊13┊      <label>
++┊  ┊14┊        <input type="checkbox" formControlName="public">
++┊  ┊15┊        Public
++┊  ┊16┊      </label>
++┊  ┊17┊    </div>
++┊  ┊18┊
++┊  ┊19┊    <button type="submit" class="btn btn-primary">Add</button>
++┊  ┊20┊  </fieldset>
++┊  ┊21┊</form>
+```
+[}]: #
+
+And now the parties list:
+
+[{]: <helper> (diff_step 18.8)
+#### Step 18.8: Update parties list layout
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -1,44 +1,100 @@
+-┊  1┊   ┊<div>
+-┊  2┊   ┊  <parties-form [hidden]="!user" style="float: left"></parties-form>
+-┊  3┊   ┊  <input type="text" #searchtext placeholder="Search by Location">
+-┊  4┊   ┊  <button type="button" (click)="search(searchtext.value)">Search</button>
+-┊  5┊   ┊
+-┊  6┊   ┊  <h1>Parties:</h1>
+-┊  7┊   ┊
+-┊  8┊   ┊  <div>
+-┊  9┊   ┊    <select #sort (change)="changeSortOrder(sort.value)">
++┊   ┊  1┊<div class="row">
++┊   ┊  2┊  <div class="col-md-12">
++┊   ┊  3┊    <div class="jumbotron">
++┊   ┊  4┊      <h3>Create a new party!</h3>
++┊   ┊  5┊      <parties-form [hidden]="!user"></parties-form>
++┊   ┊  6┊      <div [hidden]="user">You need to login to create new parties!</div>
++┊   ┊  7┊    </div>
++┊   ┊  8┊  </div>
++┊   ┊  9┊</div>
++┊   ┊ 10┊<div class="row ma-filters">
++┊   ┊ 11┊  <div class="col-md-6">
++┊   ┊ 12┊    <h3>All Parties:</h3>
++┊   ┊ 13┊    <form class="form-inline">
++┊   ┊ 14┊      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
++┊   ┊ 15┊      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
++┊   ┊ 16┊      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
+ ┊ 10┊ 17┊      <option value="1" selected>Ascending</option>
+ ┊ 11┊ 18┊      <option value="-1">Descending</option>
+ ┊ 12┊ 19┊    </select>
++┊   ┊ 20┊    </form>
++┊   ┊ 21┊  </div>
++┊   ┊ 22┊</div>
++┊   ┊ 23┊<div class="row">
++┊   ┊ 24┊  <div class="col-md-6">
++┊   ┊ 25┊    <ul class="list-group">
++┊   ┊ 26┊      <li class="list-group-item">
++┊   ┊ 27┊        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
++┊   ┊ 28┊      </li>
++┊   ┊ 29┊      <li *ngFor="let party of parties | async"
++┊   ┊ 30┊          class="list-group-item ma-party-item">
++┊   ┊ 31┊        <div class="row">
++┊   ┊ 32┊          <div class="col-sm-8">
++┊   ┊ 33┊            <h2 class="ma-party-name">
++┊   ┊ 34┊              <a [routerLink]="['/party', party._id]">{{party.name}}</a>
++┊   ┊ 35┊            </h2>
++┊   ┊ 36┊            @ {{party.location.name}}
++┊   ┊ 37┊            <p class="ma-party-description">
++┊   ┊ 38┊              {{party.description}}
++┊   ┊ 39┊            </p>
++┊   ┊ 40┊          </div>
++┊   ┊ 41┊          <div class="col-sm-4">
++┊   ┊ 42┊            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
++┊   ┊ 43┊              class="fa fa-times"></i></button>
++┊   ┊ 44┊          </div>
++┊   ┊ 45┊        </div>
++┊   ┊ 46┊        <div class="row ma-party-item-bottom">
++┊   ┊ 47┊          <div class="col-sm-4">
++┊   ┊ 48┊            <div class="ma-rsvp-sum">
++┊   ┊ 49┊              <div class="ma-rsvp-amount">
++┊   ┊ 50┊                <div class="ma-amount">
++┊   ┊ 51┊                  {{party | rsvp:'yes'}}
++┊   ┊ 52┊                </div>
++┊   ┊ 53┊                <div class="ma-rsvp-title">
++┊   ┊ 54┊                  YES
++┊   ┊ 55┊                </div>
++┊   ┊ 56┊              </div>
++┊   ┊ 57┊              <div class="ma-rsvp-amount">
++┊   ┊ 58┊                <div class="ma-amount">
++┊   ┊ 59┊                  {{party | rsvp:'maybe'}}
++┊   ┊ 60┊                </div>
++┊   ┊ 61┊                <div class="ma-rsvp-title">
++┊   ┊ 62┊                  MAYBE
++┊   ┊ 63┊                </div>
++┊   ┊ 64┊              </div>
++┊   ┊ 65┊              <div class="ma-rsvp-amount">
++┊   ┊ 66┊                <div class="ma-amount">
++┊   ┊ 67┊                  {{party | rsvp:'no'}}
++┊   ┊ 68┊                </div>
++┊   ┊ 69┊                <div class="ma-rsvp-title">
++┊   ┊ 70┊                  NO
++┊   ┊ 71┊                </div>
++┊   ┊ 72┊              </div>
++┊   ┊ 73┊            </div>
++┊   ┊ 74┊          </div>
++┊   ┊ 75┊        </div>
++┊   ┊ 76┊      </li>
++┊   ┊ 77┊      <li class="list-group-item">
++┊   ┊ 78┊        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
++┊   ┊ 79┊      </li>
++┊   ┊ 80┊    </ul>
++┊   ┊ 81┊  </div>
++┊   ┊ 82┊  <div class="col-md-6">
++┊   ┊ 83┊    <ul class="list-group">
++┊   ┊ 84┊      <li class="list-group-item">
++┊   ┊ 85┊        <sebm-google-map
++┊   ┊ 86┊          [latitude]="0"
++┊   ┊ 87┊          [longitude]="0"
++┊   ┊ 88┊          [zoom]="1">
++┊   ┊ 89┊          <div *ngFor="let party of parties | async">
++┊   ┊ 90┊            <sebm-google-map-marker
++┊   ┊ 91┊              *ngIf="party.location.lat"
++┊   ┊ 92┊              [latitude]="party.location.lat"
++┊   ┊ 93┊              [longitude]="party.location.lng">
++┊   ┊ 94┊            </sebm-google-map-marker>
++┊   ┊ 95┊          </div>
++┊   ┊ 96┊        </sebm-google-map>
++┊   ┊ 97┊      </li>
++┊   ┊ 98┊    </ul>
+ ┊ 13┊ 99┊  </div>
+-┊ 14┊   ┊
+-┊ 15┊   ┊  <ul>
+-┊ 16┊   ┊    <li *ngFor="let party of parties | async">
+-┊ 17┊   ┊      <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+-┊ 18┊   ┊      <p>{{party.description}}</p>
+-┊ 19┊   ┊      <p>{{party.location.name}}</p>
+-┊ 20┊   ┊      <button [hidden]="!isOwner(party)" (click)="removeParty(party)">X</button>
+-┊ 21┊   ┊      <div>
+-┊ 22┊   ┊        Who is coming:
+-┊ 23┊   ┊        Yes - {{party | rsvp:'yes'}}
+-┊ 24┊   ┊        Maybe - {{party | rsvp:'maybe'}}
+-┊ 25┊   ┊        No - {{party | rsvp:'no'}}
+-┊ 26┊   ┊      </div>
+-┊ 27┊   ┊    </li>
+-┊ 28┊   ┊  </ul>
+-┊ 29┊   ┊
+-┊ 30┊   ┊  <sebm-google-map
+-┊ 31┊   ┊    [latitude]="0"
+-┊ 32┊   ┊    [longitude]="0"
+-┊ 33┊   ┊    [zoom]="1">
+-┊ 34┊   ┊    <div *ngFor="let party of parties | async">
+-┊ 35┊   ┊      <sebm-google-map-marker
+-┊ 36┊   ┊        *ngIf="party.location.lat"
+-┊ 37┊   ┊        [latitude]="party.location.lat"
+-┊ 38┊   ┊        [longitude]="party.location.lng">
+-┊ 39┊   ┊      </sebm-google-map-marker>
+-┊ 40┊   ┊    </div>
+-┊ 41┊   ┊  </sebm-google-map>
+-┊ 42┊   ┊
+-┊ 43┊   ┊  <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+ ┊ 44┊100┊</div>🚫↵
+```
+[}]: #
+
+# Styling components
+
+We will create style file for each component.
+
+So let's start with the parties list, and add some style (it's not that critical at the moment what is the effect of those CSS rules)
+
+[{]: <helper> (diff_step 18.9)
+#### Step 18.9: Add styles for PartiesList
+
+##### Added client/imports/app/parties/parties-list.component.scss
+```diff
+@@ -0,0 +1,127 @@
++┊   ┊  1┊@import "../colors";
++┊   ┊  2┊
++┊   ┊  3┊.ma-add-button-container {
++┊   ┊  4┊  button.btn {
++┊   ┊  5┊    background: $color3;
++┊   ┊  6┊    float: right;
++┊   ┊  7┊    margin-right: 5px;
++┊   ┊  8┊    outline: none;
++┊   ┊  9┊    i {
++┊   ┊ 10┊      color: $color5;
++┊   ┊ 11┊    }
++┊   ┊ 12┊  }
++┊   ┊ 13┊}
++┊   ┊ 14┊
++┊   ┊ 15┊.ma-parties-col {
++┊   ┊ 16┊  padding-top: 20px;
++┊   ┊ 17┊}
++┊   ┊ 18┊
++┊   ┊ 19┊.ma-filters {
++┊   ┊ 20┊  margin-bottom: 10px;
++┊   ┊ 21┊}
++┊   ┊ 22┊
++┊   ┊ 23┊.ma-party-item {
++┊   ┊ 24┊  .ma-party-name {
++┊   ┊ 25┊    margin-bottom: 20px;
++┊   ┊ 26┊    a {
++┊   ┊ 27┊      color: $color6;
++┊   ┊ 28┊      text-decoration: none !important;
++┊   ┊ 29┊      font-weight: 400;
++┊   ┊ 30┊    }
++┊   ┊ 31┊  }
++┊   ┊ 32┊  .ma-party-description {
++┊   ┊ 33┊    color: $color6;
++┊   ┊ 34┊    font-weight: 300;
++┊   ┊ 35┊    padding-left: 18px;
++┊   ┊ 36┊    font-size: 14px;
++┊   ┊ 37┊  }
++┊   ┊ 38┊
++┊   ┊ 39┊  .ma-remove {
++┊   ┊ 40┊    color: lighten($color7, 20%);
++┊   ┊ 41┊    position: absolute;
++┊   ┊ 42┊    right: 20px;
++┊   ┊ 43┊    top: 20px;
++┊   ┊ 44┊    &:hover {
++┊   ┊ 45┊      color: $color7;
++┊   ┊ 46┊    }
++┊   ┊ 47┊  }
++┊   ┊ 48┊
++┊   ┊ 49┊  .ma-party-item-bottom {
++┊   ┊ 50┊    padding-top: 10px;
++┊   ┊ 51┊    .ma-posted-by-col {
++┊   ┊ 52┊      .ma-posted-by {
++┊   ┊ 53┊        color: darken($color4, 30%);
++┊   ┊ 54┊        font-size: 12px;
++┊   ┊ 55┊      }
++┊   ┊ 56┊      .ma-everyone-invited {
++┊   ┊ 57┊        @media (max-width: 400px) {
++┊   ┊ 58┊          display: block;
++┊   ┊ 59┊          i {
++┊   ┊ 60┊            margin-left: 0px !important;
++┊   ┊ 61┊          }
++┊   ┊ 62┊        }
++┊   ┊ 63┊        font-size: 12px;
++┊   ┊ 64┊        color: darken($color4, 10%);
++┊   ┊ 65┊        i {
++┊   ┊ 66┊          color: darken($color4, 10%);
++┊   ┊ 67┊          margin-left: 5px;
++┊   ┊ 68┊        }
++┊   ┊ 69┊      }
++┊   ┊ 70┊    }
++┊   ┊ 71┊
++┊   ┊ 72┊    .ma-rsvp-buttons {
++┊   ┊ 73┊      input.btn {
++┊   ┊ 74┊        color: darken($color3, 20%);
++┊   ┊ 75┊        background: transparent !important;
++┊   ┊ 76┊        outline: none;
++┊   ┊ 77┊        padding-left: 0;
++┊   ┊ 78┊        &:active {
++┊   ┊ 79┊          box-shadow: none;
++┊   ┊ 80┊        }
++┊   ┊ 81┊        &:hover {
++┊   ┊ 82┊          color: darken($color3, 30%);
++┊   ┊ 83┊        }
++┊   ┊ 84┊        &.btn-primary {
++┊   ┊ 85┊          color: lighten($color3, 10%);
++┊   ┊ 86┊          border: 0;
++┊   ┊ 87┊          background: transparent !important;
++┊   ┊ 88┊        }
++┊   ┊ 89┊      }
++┊   ┊ 90┊    }
++┊   ┊ 91┊
++┊   ┊ 92┊    .ma-rsvp-sum {
++┊   ┊ 93┊      width: 160px;
++┊   ┊ 94┊      @media (min-width: 400px) {
++┊   ┊ 95┊        float: right;
++┊   ┊ 96┊      }
++┊   ┊ 97┊      @media (max-width: 400px) {
++┊   ┊ 98┊        margin: 0 auto;
++┊   ┊ 99┊      }
++┊   ┊100┊    }
++┊   ┊101┊    .ma-rsvp-amount {
++┊   ┊102┊      display: inline-block;
++┊   ┊103┊      text-align: center;
++┊   ┊104┊      width: 50px;
++┊   ┊105┊      .ma-amount {
++┊   ┊106┊        font-weight: bold;
++┊   ┊107┊        font-size: 20px;
++┊   ┊108┊      }
++┊   ┊109┊      .ma-rsvp-title {
++┊   ┊110┊        font-size: 11px;
++┊   ┊111┊        color: #aaa;
++┊   ┊112┊        text-transform: uppercase;
++┊   ┊113┊      }
++┊   ┊114┊    }
++┊   ┊115┊  }
++┊   ┊116┊}
++┊   ┊117┊
++┊   ┊118┊.ma-angular-map-col {
++┊   ┊119┊  .angular-google-map-container, .angular-google-map {
++┊   ┊120┊    height: 100%;
++┊   ┊121┊    width: 100%;
++┊   ┊122┊  }
++┊   ┊123┊}
++┊   ┊124┊
++┊   ┊125┊.search-form {
++┊   ┊126┊  margin-bottom: 1em;
++┊   ┊127┊}🚫↵
+```
+[}]: #
+
+> Note that we used the "colors.scss" import - don't worry - we will add it soon!
+
+And now let's add SASS file for the party details:
+
+[{]: <helper> (diff_step 18.10)
+#### Step 18.10: Add styles for the party details page
+
+##### Added client/imports/app/parties/party-details.component.scss
+```diff
+@@ -0,0 +1,32 @@
++┊  ┊ 1┊.ma-party-details-container {
++┊  ┊ 2┊  padding: 20px;
++┊  ┊ 3┊
++┊  ┊ 4┊  .angular-google-map-container {
++┊  ┊ 5┊    width: 100%;
++┊  ┊ 6┊    height: 100%;
++┊  ┊ 7┊  }
++┊  ┊ 8┊
++┊  ┊ 9┊  .angular-google-map {
++┊  ┊10┊    width: 100%;
++┊  ┊11┊    height: 400px;
++┊  ┊12┊  }
++┊  ┊13┊
++┊  ┊14┊  .ma-map-title {
++┊  ┊15┊    font-size: 16px;
++┊  ┊16┊    font-weight: bolder;
++┊  ┊17┊  }
++┊  ┊18┊
++┊  ┊19┊  .ma-invite-list {
++┊  ┊20┊    margin-top: 20px;
++┊  ┊21┊    margin-bottom: 20px;
++┊  ┊22┊
++┊  ┊23┊    h3 {
++┊  ┊24┊      font-size: 16px;
++┊  ┊25┊      font-weight: bolder;
++┊  ┊26┊    }
++┊  ┊27┊
++┊  ┊28┊    ul {
++┊  ┊29┊      padding: 0;
++┊  ┊30┊    }
++┊  ┊31┊  }
++┊  ┊32┊}🚫↵
+```
+[}]: #
+
+Now let's add some styles and colors using SASS to the main file and create the colors definitions file we mentioned earlier:
+
+[{]: <helper> (diff_step 18.11)
+#### Step 18.11: Add components styles in main style entry point
+
+##### Added client/imports/app/colors.scss
+```diff
+@@ -0,0 +1,7 @@
++┊ ┊1┊$color1 : #2F2933;
++┊ ┊2┊$color2 : #01A2A6;
++┊ ┊3┊$color3 : #29D9C2;
++┊ ┊4┊$color4 : #BDF271;
++┊ ┊5┊$color5 : #FFFFA6;
++┊ ┊6┊$color6 : #2F2933;
++┊ ┊7┊$color7 : #FF6F69;🚫↵
+```
+
+##### Changed client/main.scss
+```diff
+@@ -1,6 +1,33 @@
+-┊ 1┊  ┊@import "{}/node_modules/bootstrap/scss/bootstrap.scss";
++┊  ┊ 1┊@import "../node_modules/bootstrap/scss/bootstrap.scss";
++┊  ┊ 2┊@import "./imports/app/colors.scss";
++┊  ┊ 3┊
++┊  ┊ 4┊html, body {
++┊  ┊ 5┊  height: 100%;
++┊  ┊ 6┊}
++┊  ┊ 7┊
++┊  ┊ 8┊body {
++┊  ┊ 9┊  background-color: #f8f8f8;
++┊  ┊10┊  font-family: 'Muli', sans-serif;
++┊  ┊11┊}
+ ┊ 2┊12┊
+ ┊ 3┊13┊.sebm-google-map-container {
+-┊ 4┊  ┊  width: 400px;
+-┊ 5┊  ┊  height: 400px;
++┊  ┊14┊  width: 450px;
++┊  ┊15┊  height: 450px;
++┊  ┊16┊}
++┊  ┊17┊
++┊  ┊18┊.navbar {
++┊  ┊19┊  background-color: #ffffff;
++┊  ┊20┊  border-bottom: #eee 1px solid;
++┊  ┊21┊  color: $color3;
++┊  ┊22┊  font-family: 'Muli', sans-serif;
++┊  ┊23┊  a {
++┊  ┊24┊    color: $color3;
++┊  ┊25┊    text-decoration: none !important;
++┊  ┊26┊  }
++┊  ┊27┊
++┊  ┊28┊  .navbar-right-container {
++┊  ┊29┊    position: absolute;
++┊  ┊30┊    top: 17px;
++┊  ┊31┊    right: 17px;
++┊  ┊32┊  }
+ ┊ 6┊33┊}🚫↵
+```
+[}]: #
+
+> We defined our colors in this file, and we used it all across the our application - so it's easy to change and modify the whole theme!
+
+Now let's use Angular 2 Component styles, which bundles the styles into the Component, without effecting other Component's styles (you can red more about it [here](https://angular.io/docs/ts/latest/guide/component-styles.html))
+
+So let's add it to the parties list:
+
+[{]: <helper> (diff_step 18.12)
+#### Step 18.12: Import parties list style
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -13,6 +13,7 @@
+ ┊13┊13┊import { Party } from '../../../../both/models/party.model';
+ ┊14┊14┊
+ ┊15┊15┊import template from './parties-list.component.html';
++┊  ┊16┊import style from './parties-list.component.scss';
+ ┊16┊17┊
+ ┊17┊18┊interface Pagination {
+ ┊18┊19┊  limit: number;
+```
+```diff
+@@ -25,7 +26,8 @@
+ ┊25┊26┊
+ ┊26┊27┊@Component({
+ ┊27┊28┊  selector: 'parties-list',
+-┊28┊  ┊  template
++┊  ┊29┊  template,
++┊  ┊30┊  styles: [ style ]
+ ┊29┊31┊})
+ ┊30┊32┊@InjectUser('user')
+ ┊31┊33┊export class PartiesListComponent implements OnInit, OnDestroy {
+```
+[}]: #
+
+And to the party details:
+
+[{]: <helper> (diff_step 18.13)
+#### Step 18.13: Import party details style
+
+##### Changed client/imports/app/parties/party-details.component.ts
+```diff
+@@ -15,10 +15,12 @@
+ ┊15┊15┊import { User } from '../../../../both/models/user.model';
+ ┊16┊16┊
+ ┊17┊17┊import template from './party-details.component.html';
++┊  ┊18┊import style from './party-details.component.scss';
+ ┊18┊19┊
+ ┊19┊20┊@Component({
+ ┊20┊21┊  selector: 'party-details',
+-┊21┊  ┊  template
++┊  ┊22┊  template,
++┊  ┊23┊  styles: [ style ]
+ ┊22┊24┊})
+ ┊23┊25┊@InjectUser('user')
+ ┊24┊26┊export class PartyDetailsComponent implements OnInit, OnDestroy {
+```
+[}]: #
+
+And use those new cool styles in the view of the party details:
+
+[{]: <helper> (diff_step 18.14)
+#### Step 18.14: Update the layout of the party details page
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -1,42 +1,61 @@
+-┊ 1┊  ┊<form *ngIf="party" (submit)="saveParty()">
+-┊ 2┊  ┊  <label>Name</label>
+-┊ 3┊  ┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name">
++┊  ┊ 1┊<div class="row ma-party-details-container">
++┊  ┊ 2┊  <div class="col-sm-6 col-sm-offset-3">
++┊  ┊ 3┊    <legend>View and Edit Your Party Details:</legend>
++┊  ┊ 4┊    <form class="form-horizontal" *ngIf="party" (submit)="saveParty()">
++┊  ┊ 5┊      <div class="form-group">
++┊  ┊ 6┊        <label>Party Name</label>
++┊  ┊ 7┊        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name" class="form-control">
++┊  ┊ 8┊      </div>
+ ┊ 4┊ 9┊
+-┊ 5┊  ┊  <label>Description</label>
+-┊ 6┊  ┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description">
++┊  ┊10┊      <div class="form-group">
++┊  ┊11┊        <label>Description</label>
++┊  ┊12┊        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description" class="form-control">
++┊  ┊13┊      </div>
+ ┊ 7┊14┊
+-┊ 8┊  ┊  <label>Location</label>
+-┊ 9┊  ┊  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location">
++┊  ┊15┊      <div class="form-group">
++┊  ┊16┊        <label>Location name</label>
++┊  ┊17┊        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location" class="form-control">
++┊  ┊18┊      </div>
+ ┊10┊19┊
+-┊11┊  ┊  <button [disabled]="!isOwner" type="submit">Save</button>
+-┊12┊  ┊  <a [routerLink]="['/']">Cancel</a>
+-┊13┊  ┊</form>
++┊  ┊20┊      <div class="form-group">
++┊  ┊21┊        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
++┊  ┊22┊        <a [routerLink]="['/']" class="btn">Back</a>
++┊  ┊23┊      </div>
++┊  ┊24┊    </form>
+ ┊14┊25┊
+-┊15┊  ┊<div *ngIf="isOwner || isPublic">
+-┊16┊  ┊  <p>Users to invite:</p>
+-┊17┊  ┊  <ul>
+-┊18┊  ┊    <li *ngFor="let user of users | async">
+-┊19┊  ┊      <div>{{user | displayName}}</div>
+-┊20┊  ┊      <button (click)="invite(user)">Invite</button>
+-┊21┊  ┊    </li>
+-┊22┊  ┊  </ul>
+-┊23┊  ┊</div>
++┊  ┊26┊    <ul class="ma-invite-list" *ngIf="isOwner || isPublic">
++┊  ┊27┊      <h3>
++┊  ┊28┊        Users to invite:
++┊  ┊29┊      </h3>
++┊  ┊30┊      <li *ngFor="let user of users | async">
++┊  ┊31┊        <div>{{ user | displayName }}</div>
++┊  ┊32┊        <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
++┊  ┊33┊      </li>
++┊  ┊34┊    </ul>
+ ┊24┊35┊
+-┊25┊  ┊<div *ngIf="isInvited">
+-┊26┊  ┊  <h2>Reply to the invitation</h2>
+-┊27┊  ┊  <input type="button" value="I'm going!" (click)="reply('yes')">
+-┊28┊  ┊  <input type="button" value="Maybe" (click)="reply('maybe')">
+-┊29┊  ┊  <input type="button" value="No" (click)="reply('no')">
+-┊30┊  ┊</div>
++┊  ┊36┊    <div *ngIf="isInvited">
++┊  ┊37┊      <h2>Reply to the invitation</h2>
++┊  ┊38┊      <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
++┊  ┊39┊      <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
++┊  ┊40┊      <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
++┊  ┊41┊    </div>
+ ┊31┊42┊
+-┊32┊  ┊<sebm-google-map
+-┊33┊  ┊  [latitude]="lat || centerLat"
+-┊34┊  ┊  [longitude]="lng || centerLng"
+-┊35┊  ┊  [zoom]="8"
+-┊36┊  ┊  (mapClick)="mapClicked($event)">
+-┊37┊  ┊  <sebm-google-map-marker
+-┊38┊  ┊    *ngIf="lat && lng"
+-┊39┊  ┊    [latitude]="lat"
+-┊40┊  ┊    [longitude]="lng">
+-┊41┊  ┊  </sebm-google-map-marker>
+-┊42┊  ┊</sebm-google-map>🚫↵
++┊  ┊43┊    <h3 class="ma-map-title">
++┊  ┊44┊      Click the map to set the party location
++┊  ┊45┊    </h3>
++┊  ┊46┊
++┊  ┊47┊    <div class="angular-google-map-container">
++┊  ┊48┊      <sebm-google-map
++┊  ┊49┊        [latitude]="lat || centerLat"
++┊  ┊50┊        [longitude]="lng || centerLng"
++┊  ┊51┊        [zoom]="8"
++┊  ┊52┊        (mapClick)="mapClicked($event)">
++┊  ┊53┊        <sebm-google-map-marker
++┊  ┊54┊          *ngIf="lat && lng"
++┊  ┊55┊          [latitude]="lat"
++┊  ┊56┊          [longitude]="lng">
++┊  ┊57┊        </sebm-google-map-marker>
++┊  ┊58┊      </sebm-google-map>
++┊  ┊59┊    </div>
++┊  ┊60┊  </div>
++┊  ┊61┊</div>🚫↵
+```
+[}]: #
+
+
+# Summary
+
+So in this chapter of the tutorial we added the Bootstrap library and used it's layout and CSS styles.
+
+We also learned how to integrate SASS compiler with Meteor and how to create isolated SASS styles for each component.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step17.md) | [Next Step >](step19.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 9fc7335bc8cf7c169729a1a182826a3a365d2161 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:59:21 +0300
Subject: [PATCH 174/304] Step 19.1: Uninstall bootstrap

---
 package.json | 1 -
 1 file changed, 1 deletion(-)

diff --git a/package.json b/package.json
index 06255a4..abefcee 100644
--- a/package.json
+++ b/package.json
@@ -19,7 +19,6 @@
     "angular2-meteor-accounts-ui": "1.0.0",
     "angular2-meteor-polyfills": "^0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
-    "bootstrap": "^4.0.0-alpha.4",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
     "ng2-pagination": "0.5.1",
-- 
2.10.2


From 42363c69721c2115f7a138793e3b469ced4aec51 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 12:59:34 +0300
Subject: [PATCH 175/304] Step 19.2: Remove bootstrap scss

---
 client/main.scss | 1 -
 1 file changed, 1 deletion(-)

diff --git a/client/main.scss b/client/main.scss
index 5dc2452..6a989da 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,4 +1,3 @@
-@import "../node_modules/bootstrap/scss/bootstrap.scss";
 @import "./imports/app/colors.scss";
 
 html, body {
-- 
2.10.2


From fd68ea01af701f0deb737f71c99a99fe2d0cd82b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:00:35 +0300
Subject: [PATCH 176/304] Step 19.3: Install @angular/material package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index abefcee..c8bc2ac 100644
--- a/package.json
+++ b/package.json
@@ -14,6 +14,7 @@
     "@angular/platform-browser": "2.1.2",
     "@angular/platform-browser-dynamic": "2.1.2",
     "@angular/router": "3.1.2",
+    "@angular/material": "2.0.0-alpha.9-3",
     "angular2-google-maps": "0.15.0",
     "angular2-meteor": "0.7.0",
     "angular2-meteor-accounts-ui": "1.0.0",
-- 
2.10.2


From 9c1998f739bee4f35c00ed1c535b00a600f76592 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:02:15 +0300
Subject: [PATCH 177/304] Step 19.4: Imported the angular2-material modules

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 0240ddf..af364ac 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -10,6 +10,7 @@ import { AppComponent } from './app.component';
 import { routes, ROUTES_PROVIDERS } from './app.routes';
 import { PARTIES_DECLARATIONS } from './parties';
 import { SHARED_DECLARATIONS } from './shared';
+import { MaterialModule } from "@angular/material";
 
 @NgModule({
   imports: [
@@ -21,7 +22,8 @@ import { SHARED_DECLARATIONS } from './shared';
     Ng2PaginationModule,
     AgmCoreModule.forRoot({
       apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
-    })
+    }),
+    MaterialModule.forRoot()
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From e5c568dce3cd68efa17f9e66202a5ee9d61d6b64 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:21:11 +0300
Subject: [PATCH 178/304] Step 19.5: Change the nav bar and the layout

---
 client/imports/app/app.component.html | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index dffc2ea..be09207 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,7 +1,6 @@
-<nav class="navbar navbar-light bg-faded">
-  <a class="navbar-brand" href="#">Socially</a>
-  <login-buttons class="pull-right"></login-buttons>
-</nav>
-<div class="container-fluid">
-  <router-outlet></router-outlet>
-</div>
\ No newline at end of file
+<md-toolbar color="primary">
+  <a routerLink="/" class="toolbar-title">Socially2</a>
+  <span class="fill-remaining-space"></span>
+  <login-buttons></login-buttons>
+</md-toolbar>
+<router-outlet></router-outlet>
\ No newline at end of file
-- 
2.10.2


From 4e845f64dc2a18fe03b0d94a6502a4b53b1c029b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 12:04:47 +0300
Subject: [PATCH 179/304] Step 19.6: Added app component style file

---
 client/imports/app/app.component.scss | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/app/app.component.scss

diff --git a/client/imports/app/app.component.scss b/client/imports/app/app.component.scss
new file mode 100644
index 0000000..9076154
--- /dev/null
+++ b/client/imports/app/app.component.scss
@@ -0,0 +1,8 @@
+.toolbar-title {
+  text-decoration: none;
+  color: white;
+}
+
+md-toolbar {
+  box-shadow: 0 2px 5px 0 rgba(0,0,0,0.26);
+}
\ No newline at end of file
-- 
2.10.2


From 82abce34e682922db374d996e6cb5509e9619e38 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 12:05:00 +0300
Subject: [PATCH 180/304] Step 19.7: Import app component style

---
 client/imports/app/app.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index 91e1a06..ff68df0 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -1,9 +1,11 @@
 import { Component } from '@angular/core';
 
 import template from './app.component.html';
+import style from './app.component.scss';
 
 @Component({
   selector: 'app',
-  template
+  template,
+  styles: [ style ]
 })
 export class AppComponent {}
-- 
2.10.2


From 0b664fc552c5a3853d6ecd1d6eab152aba691dbd Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:21:21 +0300
Subject: [PATCH 181/304] Step 19.8: Added CSS and material theme definition

---
 client/main.scss | 32 ++++++++++++--------------------
 1 file changed, 12 insertions(+), 20 deletions(-)

diff --git a/client/main.scss b/client/main.scss
index 6a989da..c9bbcf0 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,32 +1,24 @@
-@import "./imports/app/colors.scss";
+@import '../node_modules/@angular/material/core/theming/all-theme';
 
-html, body {
-  height: 100%;
+@include md-core();
+$app-primary: md-palette($md-light-blue, 500, 100, 700);
+$app-accent:  md-palette($md-pink, A200, A100, A400);
+$app-warn:    md-palette($md-red);
+$app-theme: md-light-theme($app-primary, $app-accent, $app-warn);
+@include angular-material-theme($app-theme);
+
+.fill-remaining-space {
+  flex: 1 1 auto;
 }
 
 body {
   background-color: #f8f8f8;
   font-family: 'Muli', sans-serif;
+  padding: 0;
+  margin: 0;
 }
 
 .sebm-google-map-container {
   width: 450px;
   height: 450px;
 }
-
-.navbar {
-  background-color: #ffffff;
-  border-bottom: #eee 1px solid;
-  color: $color3;
-  font-family: 'Muli', sans-serif;
-  a {
-    color: $color3;
-    text-decoration: none !important;
-  }
-
-  .navbar-right-container {
-    position: absolute;
-    top: 17px;
-    right: 17px;
-  }
-}
\ No newline at end of file
-- 
2.10.2


From 35ff9b650fcf8d75a379dc13971202bf06e85c33 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:22:18 +0300
Subject: [PATCH 182/304] Step 19.9: Update the view of the parties form

---
 .../app/parties/parties-form.component.html        | 61 +++++++++++++++-------
 1 file changed, 41 insertions(+), 20 deletions(-)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index c791629..932b233 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -1,21 +1,42 @@
-<form [formGroup]="addForm" (ngSubmit)="addParty()" class="form-inline">
-  <fieldset class="form-group">
-    <label for="partyName">Party name</label>
-    <input id="partyName" class="form-control" type="text" formControlName="name" placeholder="Party name" />
-
-    <label for="description">Description</label>
-    <input id="description" class="form-control" type="text" formControlName="description" placeholder="Description">
-
-    <label for="location_name">Location</label>
-    <input id="location_name" class="form-control" type="text" formControlName="location" placeholder="Location name">
-
-    <div class="checkbox">
-      <label>
-        <input type="checkbox" formControlName="public">
-        Public
-      </label>
+<div class="form-container">
+  <div class="container-background">
+    <div class="form-content">
+      <div class="form-center">
+        <h1>Your party is missing?</h1>
+        <h2>Add it now! ></h2>
+      </div>
+      <div class="form-center">
+        <form *ngIf="user" [formGroup]="addForm" (ngSubmit)="addParty()">
+          <div style="display: table-row">
+            <div class="form-inputs">
+              <md-input dividerColor="accent" formControlName="name" placeholder="Party name"></md-input>
+              <br/>
+              <md-input dividerColor="accent" formControlName="description" placeholder="Description"></md-input>
+              <br/>
+              <md-input dividerColor="accent" formControlName="location" placeholder="Location name"></md-input>
+              <br/>
+              <md-checkbox formControlName="public">Public party?</md-checkbox>
+              <br/><br/>
+              <button color="accent" md-raised-button type="submit">Add my party!</button>
+            </div>
+            <div class="form-extras">
+              <sebm-google-map class="new-party-map"
+                               [latitude]="newPartyPosition.lat"
+                               [longitude]="newPartyPosition.lng"
+                               [zoom]="8"
+                               (mapClick)="mapClicked($event)">
+                <sebm-google-map-marker
+                  [latitude]="newPartyPosition.lat"
+                  [longitude]="newPartyPosition.lng">
+                </sebm-google-map-marker>
+              </sebm-google-map>
+            </div>
+          </div>
+        </form>
+        <div *ngIf="!user">
+          Please login in order to create new parties!
+        </div>
+      </div>
     </div>
-
-    <button type="submit" class="btn btn-primary">Add</button>
-  </fieldset>
-</form>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 6ec53dce3f93d44a2c7261d86861483e829c5383 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 13:46:03 +0300
Subject: [PATCH 183/304] Step 19.10: Added styles for parties form

---
 .../app/parties/parties-form.component.scss        | 54 ++++++++++++++++++++++
 1 file changed, 54 insertions(+)
 create mode 100644 client/imports/app/parties/parties-form.component.scss

diff --git a/client/imports/app/parties/parties-form.component.scss b/client/imports/app/parties/parties-form.component.scss
new file mode 100644
index 0000000..a5f1471
--- /dev/null
+++ b/client/imports/app/parties/parties-form.component.scss
@@ -0,0 +1,54 @@
+.form-container {
+  position: relative;
+  display: inline-block;
+  overflow-y: auto;
+  overflow-x: hidden;
+  flex-grow: 1;
+  z-index: 1;
+  width: 100%;
+  color: white;
+
+  .container-background {
+    background: linear-gradient(rgb(0,121,107),rgb(0,150,136));
+    color: #fff;
+
+    .form-content {
+      background: #0277bd;
+      width: 100%;
+      padding: 0 !important;
+      align-items: center;
+      display: flex;
+      flex-flow: row wrap;
+      margin: 0 auto;
+
+      form {
+        width: 100%;
+        display: table;
+      }
+
+      .form-inputs {
+        display: table-cell;
+        width: 60%;
+        vertical-align: top;
+        text-align: center;
+        margin-top: 20px;
+      }
+
+      .form-extras {
+        display: table-cell;
+        width: 40%;
+        vertical-align: top;
+
+        .new-party-map {
+          width: 100% !important;
+          height: 300px !important;
+        }
+      }
+
+      .form-center {
+        width: 50%;
+        text-align: center;
+      }
+    }
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 74af461304185eadb9cd323f90332e8aa889b81b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 13:46:35 +0300
Subject: [PATCH 184/304] Step 19.11: Inject user and import styles into the
 form

---
 client/imports/app/parties/parties-form.component.ts | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 3a213f0..25a58dd 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -1,17 +1,19 @@
 import { Component, OnInit } from '@angular/core';
 import { FormGroup, FormBuilder, Validators } from '@angular/forms';
-import { Meteor } from 'meteor/meteor';
-
 import { Parties } from '../../../../both/collections/parties.collection';
-
+import { InjectUser } from "angular2-meteor-accounts-ui";
 import template from './parties-form.component.html';
+import style from './parties-form.component.scss';
 
 @Component({
   selector: 'parties-form',
-  template
+  template,
+  styles: [ style ]
 })
+@InjectUser("user")
 export class PartiesFormComponent implements OnInit {
   addForm: FormGroup;
+  newPartyPosition: {lat:number, lng: number} = {lat: 37.4292, lng: -122.1381};
 
   constructor(
     private formBuilder: FormBuilder
@@ -26,6 +28,10 @@ export class PartiesFormComponent implements OnInit {
     });
   }
 
+  mapClicked($event) {
+    this.newPartyPosition = $event.coords;
+  }
+
   addParty(): void {
     if (!Meteor.userId()) {
       alert('Please log in to add a party');
@@ -37,7 +43,9 @@ export class PartiesFormComponent implements OnInit {
         name: this.addForm.value.name,
         description: this.addForm.value.description,
         location: {
-          name: this.addForm.value.location
+          name: this.addForm.value.location,
+          lat: this.newPartyPosition.lat,
+          lng: this.newPartyPosition.lng
         },
         public: this.addForm.value.public,
         owner: Meteor.userId()
-- 
2.10.2


From 696c79ea00b0e53afc314445139dbf8b01e6be5a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 14:34:17 +0300
Subject: [PATCH 185/304] Step 19.12: Updated the layout of the parties list

---
 .../app/parties/parties-list.component.html        | 156 ++++++++-------------
 1 file changed, 61 insertions(+), 95 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 0629b28..6a05816 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -1,100 +1,66 @@
-<div class="row">
-  <div class="col-md-12">
-    <div class="jumbotron">
-      <h3>Create a new party!</h3>
-      <parties-form [hidden]="!user"></parties-form>
-      <div [hidden]="user">You need to login to create new parties!</div>
-    </div>
-  </div>
-</div>
-<div class="row ma-filters">
-  <div class="col-md-6">
-    <h3>All Parties:</h3>
-    <form class="form-inline">
-      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
-      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
-      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
-      <option value="1" selected>Ascending</option>
-      <option value="-1">Descending</option>
-    </select>
-    </form>
-  </div>
-</div>
-<div class="row">
-  <div class="col-md-6">
-    <ul class="list-group">
-      <li class="list-group-item">
-        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
-      </li>
-      <li *ngFor="let party of parties | async"
-          class="list-group-item ma-party-item">
-        <div class="row">
-          <div class="col-sm-8">
-            <h2 class="ma-party-name">
-              <a [routerLink]="['/party', party._id]">{{party.name}}</a>
-            </h2>
-            @ {{party.location.name}}
-            <p class="ma-party-description">
-              {{party.description}}
-            </p>
-          </div>
-          <div class="col-sm-4">
-            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
-              class="fa fa-times"></i></button>
-          </div>
+<parties-form></parties-form>
+
+<div class="parties-list-container">
+  <div class="parties-list">
+    <md-card class="filter-card">
+      <h3>Filter Parties</h3>
+      <form>
+        By Location: <md-input dividerColor="primary" type="text" #searchtext placeholder="Enter Location"></md-input>
+        <button md-button (click)="search(searchtext.value)">Find</button>
+        <br />
+        Sort by name:
+        <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
+          <option value="1" selected>Ascending</option>
+          <option value="-1">Descending</option>
+        </select>
+      </form>
+    </md-card>
+
+    <pagination-controls class="pagination" (pageChange)="onPageChanged($event)"></pagination-controls>
+
+    <md-card *ngFor="let party of parties | async" class="party-card">
+      <h2 class="party-name">
+        <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+      </h2>
+      @ {{party.location.name}}
+      <br />
+      {{party.description}}
+
+      <button class="remove-party" md-icon-button *ngIf="isOwner(party)" (click)="removeParty(party)">
+        <md-icon class="md-24">X</md-icon>
+      </button>
+
+      <div class="rsvp-container">
+        <div class="rsvps-sum">
+          <div class="rsvps-amount">{{party | rsvp:'yes'}}</div>
+          <div class="rsvps-title">Yes</div>
+        </div>
+        <div class="rsvps-sum">
+          <div class="rsvps-amount">{{party | rsvp:'maybe'}}</div>
+          <div class="rsvps-title">Maybe</div>
         </div>
-        <div class="row ma-party-item-bottom">
-          <div class="col-sm-4">
-            <div class="ma-rsvp-sum">
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'yes'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  YES
-                </div>
-              </div>
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'maybe'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  MAYBE
-                </div>
-              </div>
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'no'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  NO
-                </div>
-              </div>
-            </div>
-          </div>
+        <div class="rsvps-sum">
+          <div class="rsvps-amount">{{party | rsvp:'no'}}</div>
+          <div class="rsvps-title">No</div>
         </div>
-      </li>
-      <li class="list-group-item">
-        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
-      </li>
-    </ul>
+      </div>
+    </md-card>
+
+    <pagination-controls class="pagination" (pageChange)="onPageChanged($event)"></pagination-controls>
   </div>
-  <div class="col-md-6">
-    <ul class="list-group">
-      <li class="list-group-item">
-        <sebm-google-map
-          [latitude]="0"
-          [longitude]="0"
-          [zoom]="1">
-          <div *ngFor="let party of parties | async">
-            <sebm-google-map-marker
-              *ngIf="party.location.lat"
-              [latitude]="party.location.lat"
-              [longitude]="party.location.lng">
-            </sebm-google-map-marker>
-          </div>
-        </sebm-google-map>
-      </li>
-    </ul>
+  <div class="parties-map">
+    <sebm-google-map
+      [latitude]="0"
+      [longitude]="0"
+      [zoom]="1"
+      class="google-map">
+      <div *ngFor="let party of parties | async">
+      <sebm-google-map-marker
+      *ngIf="party.location.lat"
+      [latitude]="party.location.lat"
+      [longitude]="party.location.lng">
+      </sebm-google-map-marker>
+      </div>
+    </sebm-google-map>
   </div>
 </div>
\ No newline at end of file
-- 
2.10.2


From 9e80c8010fdb3c757d99faabded3c0baa8cd41d9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 14:34:31 +0300
Subject: [PATCH 186/304] Step 19.13: Updated the styles of the parties list

---
 .../app/parties/parties-list.component.scss        | 166 +++++++--------------
 1 file changed, 55 insertions(+), 111 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.scss b/client/imports/app/parties/parties-list.component.scss
index 3e09211..6a695e7 100644
--- a/client/imports/app/parties/parties-list.component.scss
+++ b/client/imports/app/parties/parties-list.component.scss
@@ -1,127 +1,71 @@
-@import "../colors";
+.parties-list-container {
+  align-items: center;
+  display: flex;
+  flex-flow: row wrap;
+  margin: 0 auto;
+  width: 100%;
+  display: table;
 
-.ma-add-button-container {
-  button.btn {
-    background: $color3;
-    float: right;
-    margin-right: 5px;
-    outline: none;
-    i {
-      color: $color5;
-    }
-  }
-}
-
-.ma-parties-col {
-  padding-top: 20px;
-}
-
-.ma-filters {
-  margin-bottom: 10px;
-}
+  .parties-list {
+    display: table-cell;
+    width: 50%;
+    vertical-align: top;
 
-.ma-party-item {
-  .ma-party-name {
-    margin-bottom: 20px;
-    a {
-      color: $color6;
-      text-decoration: none !important;
-      font-weight: 400;
+    .pagination {
+      display: inline;
+      text-align: center;
     }
-  }
-  .ma-party-description {
-    color: $color6;
-    font-weight: 300;
-    padding-left: 18px;
-    font-size: 14px;
-  }
 
-  .ma-remove {
-    color: lighten($color7, 20%);
-    position: absolute;
-    right: 20px;
-    top: 20px;
-    &:hover {
-      color: $color7;
+    .filter-card {
+      margin: 20px;
     }
-  }
 
-  .ma-party-item-bottom {
-    padding-top: 10px;
-    .ma-posted-by-col {
-      .ma-posted-by {
-        color: darken($color4, 30%);
-        font-size: 12px;
-      }
-      .ma-everyone-invited {
-        @media (max-width: 400px) {
-          display: block;
-          i {
-            margin-left: 0px !important;
-          }
-        }
-        font-size: 12px;
-        color: darken($color4, 10%);
-        i {
-          color: darken($color4, 10%);
-          margin-left: 5px;
-        }
-      }
-    }
+    .party-card {
+      margin: 20px;
+      position: relative;
 
-    .ma-rsvp-buttons {
-      input.btn {
-        color: darken($color3, 20%);
-        background: transparent !important;
-        outline: none;
-        padding-left: 0;
-        &:active {
-          box-shadow: none;
-        }
-        &:hover {
-          color: darken($color3, 30%);
-        }
-        &.btn-primary {
-          color: lighten($color3, 10%);
-          border: 0;
-          background: transparent !important;
-        }
+      .party-name > a {
+        color: black;
+        text-decoration: none;
       }
-    }
 
-    .ma-rsvp-sum {
-      width: 160px;
-      @media (min-width: 400px) {
-        float: right;
-      }
-      @media (max-width: 400px) {
-        margin: 0 auto;
-      }
-    }
-    .ma-rsvp-amount {
-      display: inline-block;
-      text-align: center;
-      width: 50px;
-      .ma-amount {
-        font-weight: bold;
-        font-size: 20px;
+      .remove-party {
+        position: absolute;
+        top: 10px;
+        right: 10px;
       }
-      .ma-rsvp-title {
-        font-size: 11px;
-        color: #aaa;
-        text-transform: uppercase;
+
+      .rsvp-container {
+        position: absolute;
+        bottom: 10px;
+        right: 10px;
+
+        .rsvps-sum {
+          display: inline-block;
+          width: 50px;
+          text-align: center;
+
+          .rsvps-amount {
+            font-size: 24px;
+          }
+
+          .rsvps-title {
+            font-size: 13px;
+            color: #aaa;
+          }
+        }
       }
     }
   }
-}
 
-.ma-angular-map-col {
-  .angular-google-map-container, .angular-google-map {
-    height: 100%;
-    width: 100%;
-  }
-}
+  .parties-map {
+    display: table-cell;
+    width: 50%;
+    vertical-align: top;
 
-.search-form {
-  margin-bottom: 1em;
+    .google-map {
+      width: 100%;
+      min-height: 600px;
+    }
+  }
 }
\ No newline at end of file
-- 
2.10.2


From daed87409903bfd5434d5db58a51a7a7adcddbc0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:34:03 +0300
Subject: [PATCH 187/304] Step 19.14: Update the layout of the party details

---
 .../app/parties/party-details.component.html       | 109 ++++++++++-----------
 1 file changed, 52 insertions(+), 57 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.html b/client/imports/app/parties/party-details.component.html
index c7fc234..7bcaa85 100644
--- a/client/imports/app/parties/party-details.component.html
+++ b/client/imports/app/parties/party-details.component.html
@@ -1,61 +1,56 @@
-<div class="row ma-party-details-container">
-  <div class="col-sm-6 col-sm-offset-3">
-    <legend>View and Edit Your Party Details:</legend>
-    <form class="form-horizontal" *ngIf="party" (submit)="saveParty()">
-      <div class="form-group">
-        <label>Party Name</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name" class="form-control">
-      </div>
+<div class="party-details-container" *ngIf="party">
+  <div class="row">
+    <div class="party-details">
+      <md-card>
+        <h2>{{ party.name }}</h2>
+        <form layout="column" (submit)="saveParty()">
+          <label>Party Name: </label>
+          <md-input [disabled]="!isOwner" [(ngModel)]="party.name" name="name"></md-input>
+          <br />
+          <label>Party Description: </label>
+          <md-input [disabled]="!isOwner" [(ngModel)]="party.description" name="description"></md-input>
+          <br />
+          <label>Location name: </label>
+          <md-input [disabled]="!isOwner" [(ngModel)]="party.location.name" name="location"></md-input>
+          <br />
+          <md-checkbox [disabled]="!isOwner" [(checked)]="party.public" name="public" aria-label="Public">
+            Public party?
+          </md-checkbox>
 
-      <div class="form-group">
-        <label>Description</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description" class="form-control">
-      </div>
-
-      <div class="form-group">
-        <label>Location name</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location" class="form-control">
-      </div>
-
-      <div class="form-group">
-        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
-        <a [routerLink]="['/']" class="btn">Back</a>
-      </div>
-    </form>
-
-    <ul class="ma-invite-list" *ngIf="isOwner || isPublic">
-      <h3>
-        Users to invite:
-      </h3>
-      <li *ngFor="let user of users | async">
-        <div>{{ user | displayName }}</div>
-        <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
-      </li>
-    </ul>
-
-    <div *ngIf="isInvited">
-      <h2>Reply to the invitation</h2>
-      <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
-      <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
-      <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
+          <div layout="row" layout-align="left">
+            <button [disabled]="!isOwner" type="submit" md-raised-button color="accent">Save</button>
+            <a [routerLink]="['/']" md-raised-button class="md-raised">Back</a>
+          </div>
+        </form>
+      </md-card>
     </div>
-
-    <h3 class="ma-map-title">
-      Click the map to set the party location
-    </h3>
-
-    <div class="angular-google-map-container">
-      <sebm-google-map
-        [latitude]="lat || centerLat"
-        [longitude]="lng || centerLng"
-        [zoom]="8"
-        (mapClick)="mapClicked($event)">
-        <sebm-google-map-marker
-          *ngIf="lat && lng"
-          [latitude]="lat"
-          [longitude]="lng">
-        </sebm-google-map-marker>
-      </sebm-google-map>
+    <div class="party-invites">
+      <md-card>
+        <h2>Invitations</h2>
+        <span [hidden]="!party.public">Public party, no need for invitations!</span>
+        <md-list>
+          <md-list-item *ngFor="let user of users | async">
+            <div>{{ user | displayName }}</div>
+            <button (click)="invite(user)" md-raised-button>Invite</button>
+          </md-list-item>
+        </md-list>
+      </md-card>
+    </div>
+    <div class="party-map">
+      <md-card>
+        <h2>Party location</h2>
+        <sebm-google-map
+          [latitude]="lat || centerLat"
+          [longitude]="lng || centerLng"
+          [zoom]="8"
+          (mapClick)="mapClicked($event)">
+          <sebm-google-map-marker
+            *ngIf="lat && lng"
+            [latitude]="lat"
+            [longitude]="lng">
+          </sebm-google-map-marker>
+        </sebm-google-map>
+      </md-card>
     </div>
   </div>
-</div>
\ No newline at end of file
+</div>
-- 
2.10.2


From 1fa5a1736c2a01cf554e518f0ebae145a45da19f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 29 Oct 2016 16:49:13 +0300
Subject: [PATCH 188/304] Step 19.15: Updated the styles of the party details

---
 .../app/parties/party-details.component.scss       | 39 +++++++++-------------
 1 file changed, 16 insertions(+), 23 deletions(-)

diff --git a/client/imports/app/parties/party-details.component.scss b/client/imports/app/parties/party-details.component.scss
index 82dcfc3..d4073f2 100644
--- a/client/imports/app/parties/party-details.component.scss
+++ b/client/imports/app/parties/party-details.component.scss
@@ -1,32 +1,25 @@
-.ma-party-details-container {
-  padding: 20px;
+.party-details-container {
+  display: table;
 
-  .angular-google-map-container {
+  .row {
+    display: table-row;
     width: 100%;
-    height: 100%;
-  }
-
-  .angular-google-map {
-    width: 100%;
-    height: 400px;
-  }
-
-  .ma-map-title {
-    font-size: 16px;
-    font-weight: bolder;
-  }
 
-  .ma-invite-list {
-    margin-top: 20px;
-    margin-bottom: 20px;
+    .party-details, .party-invites, .party-map {
+      display: table-cell;
+      width: 33.3%;
+      vertical-align: top;
 
-    h3 {
-      font-size: 16px;
-      font-weight: bolder;
+      md-card {
+        margin: 20px;
+      }
     }
 
-    ul {
-      padding: 0;
+    .party-map {
+      sebm-google-map {
+        height: 300px;
+        width: 100%;
+      }
     }
   }
 }
\ No newline at end of file
-- 
2.10.2


From 4b8f23cc7a9f5cad2d01d7e1c5ee0505639a8960 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:34:54 +0300
Subject: [PATCH 189/304] Step 19.16: Replace login buttons with custom buttons

---
 client/imports/app/app.component.html | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.html
index be09207..ee2644e 100644
--- a/client/imports/app/app.component.html
+++ b/client/imports/app/app.component.html
@@ -1,6 +1,13 @@
 <md-toolbar color="primary">
   <a routerLink="/" class="toolbar-title">Socially2</a>
   <span class="fill-remaining-space"></span>
-  <login-buttons></login-buttons>
+  <div [hidden]="user">
+    <a md-button [routerLink]="['/login']" >Login</a>
+    <a md-button [routerLink]="['/signup']">Sign up</a>
+  </div>
+  <div [hidden]="!user">
+    <span>{{ user | displayName }}</span>
+    <button md-button (click)="logout()">Logout</button>
+  </div>
 </md-toolbar>
 <router-outlet></router-outlet>
\ No newline at end of file
-- 
2.10.2


From 7c31f4b32e4d59d7152c13d2f28767b5415d819d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 31 Oct 2016 16:34:48 +0200
Subject: [PATCH 190/304] Removed old colors file

---
 client/imports/app/colors.scss | 7 -------
 1 file changed, 7 deletions(-)
 delete mode 100644 client/imports/app/colors.scss

diff --git a/client/imports/app/colors.scss b/client/imports/app/colors.scss
deleted file mode 100644
index 8c50009..0000000
--- a/client/imports/app/colors.scss
+++ /dev/null
@@ -1,7 +0,0 @@
-$color1 : #2F2933;
-$color2 : #01A2A6;
-$color3 : #29D9C2;
-$color4 : #BDF271;
-$color5 : #FFFFA6;
-$color6 : #2F2933;
-$color7 : #FF6F69;
\ No newline at end of file
-- 
2.10.2


From 33e60e554dd54e8fc149cac9c5880f847f47d408 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:35:54 +0300
Subject: [PATCH 191/304] Step 19.17: Add auth logic to the App component

---
 client/imports/app/app.component.ts | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.ts
index ff68df0..09074c8 100644
--- a/client/imports/app/app.component.ts
+++ b/client/imports/app/app.component.ts
@@ -2,10 +2,20 @@ import { Component } from '@angular/core';
 
 import template from './app.component.html';
 import style from './app.component.scss';
+import {InjectUser} from "angular2-meteor-accounts-ui";
 
 @Component({
   selector: 'app',
   template,
   styles: [ style ]
 })
-export class AppComponent {}
+@InjectUser('user')
+export class AppComponent {
+  constructor() {
+
+  }
+
+  logout() {
+    Meteor.logout();
+  }
+}
-- 
2.10.2


From b1f295d56484236f74953ed8915ad469c2ae5c49 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:46:12 +0300
Subject: [PATCH 192/304] Step 19.18: Create LoginComponent

---
 client/imports/app/auth/login.component.ts | 40 ++++++++++++++++++++++++++++++
 1 file changed, 40 insertions(+)
 create mode 100644 client/imports/app/auth/login.component.ts

diff --git a/client/imports/app/auth/login.component.ts b/client/imports/app/auth/login.component.ts
new file mode 100644
index 0000000..ed740de
--- /dev/null
+++ b/client/imports/app/auth/login.component.ts
@@ -0,0 +1,40 @@
+import {Component, OnInit, NgZone} from '@angular/core';
+import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+import { Router } from '@angular/router';
+import { Meteor } from 'meteor/meteor';
+
+import template from './login.component.html';
+
+@Component({
+  selector: 'login',
+  template
+})
+export class LoginComponent implements OnInit {
+  loginForm: FormGroup;
+  error: string;
+
+  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
+
+  ngOnInit() {
+    this.loginForm = this.formBuilder.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  login() {
+    if (this.loginForm.valid) {
+      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
+        if (err) {
+          this.zone.run(() => {
+            this.error = err;
+          });
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 78d5dbe18007a7bb7d629e8d5d43c1346aac406d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:46:21 +0300
Subject: [PATCH 193/304] Step 19.19: Create a template for LoginComponent

---
 client/imports/app/auth/login.component.html | 37 ++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)
 create mode 100644 client/imports/app/auth/login.component.html

diff --git a/client/imports/app/auth/login.component.html b/client/imports/app/auth/login.component.html
new file mode 100644
index 0000000..7501a27
--- /dev/null
+++ b/client/imports/app/auth/login.component.html
@@ -0,0 +1,37 @@
+<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
+  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign in
+    </md-toolbar>
+
+    <div layout="column" layout-margin layout-padding>
+      <div layout="row" layout-margin>
+        <p class="md-body-2"> Sign in with your email</p>
+      </div>
+
+      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
+            layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <a md-button [routerLink]="['/recover']">Forgot password?</a>
+          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/signup']">Need an account?</a>
+      </div>
+    </div>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From d318b85ce7e346cae11db7c394b41fd829d725be Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:46:33 +0300
Subject: [PATCH 194/304] Step 19.20: Add the login route

---
 client/imports/app/app.routes.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index c5812a4..83e37a2 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -3,10 +3,12 @@ import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './parties/parties-list.component';
 import { PartyDetailsComponent } from './parties/party-details.component';
+import {LoginComponent} from "./auth/login.component";
 
 export const routes: Route[] = [
   { path: '', component: PartiesListComponent },
-  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] }
+  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
+  { path: 'login', component: LoginComponent }
 ];
 
 export const ROUTES_PROVIDERS = [{
-- 
2.10.2


From 016f6d49002a6411ac5c6efc2e78de6cdf97ab2d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:46:49 +0300
Subject: [PATCH 195/304] Step 19.21: Create the index file for auth component

---
 client/imports/app/auth/index.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/app/auth/index.ts

diff --git a/client/imports/app/auth/index.ts b/client/imports/app/auth/index.ts
new file mode 100644
index 0000000..c8c17d6
--- /dev/null
+++ b/client/imports/app/auth/index.ts
@@ -0,0 +1,5 @@
+import {LoginComponent} from "./login.component";
+
+export const AUTH_DECLARATIONS = [
+  LoginComponent
+];
-- 
2.10.2


From ccf2cebfa1c82710258daf2d6170e8e73238cdc4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:47:01 +0300
Subject: [PATCH 196/304] Step 19.22: Updated the NgModule imports

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index af364ac..8a061ac 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -11,6 +11,7 @@ import { routes, ROUTES_PROVIDERS } from './app.routes';
 import { PARTIES_DECLARATIONS } from './parties';
 import { SHARED_DECLARATIONS } from './shared';
 import { MaterialModule } from "@angular/material";
+import { AUTH_DECLARATIONS } from "./auth/index";
 
 @NgModule({
   imports: [
@@ -28,7 +29,8 @@ import { MaterialModule } from "@angular/material";
   declarations: [
     AppComponent,
     ...PARTIES_DECLARATIONS,
-    ...SHARED_DECLARATIONS
+    ...SHARED_DECLARATIONS,
+    ...AUTH_DECLARATIONS
   ],
   providers: [
     ...ROUTES_PROVIDERS
-- 
2.10.2


From 830adaff1072f5105a4c8144da3eb4ad5d72f43d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:50:22 +0300
Subject: [PATCH 197/304] Step 19.23: Added the signup component

---
 client/imports/app/auth/signup.component.ts | 43 +++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)
 create mode 100644 client/imports/app/auth/signup.component.ts

diff --git a/client/imports/app/auth/signup.component.ts b/client/imports/app/auth/signup.component.ts
new file mode 100644
index 0000000..eed82b2
--- /dev/null
+++ b/client/imports/app/auth/signup.component.ts
@@ -0,0 +1,43 @@
+import {Component, OnInit, NgZone} from '@angular/core';
+import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+import { Router } from '@angular/router';
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './signup.component.html';
+
+@Component({
+  selector: 'signup',
+  template
+})
+export class SignupComponent implements OnInit {
+  signupForm: FormGroup;
+  error: string;
+
+  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
+
+  ngOnInit() {
+    this.signupForm = this.formBuilder.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  signup() {
+    if (this.signupForm.valid) {
+      Accounts.createUser({
+        email: this.signupForm.value.email,
+        password: this.signupForm.value.password
+      }, (err) => {
+        if (err) {
+          this.zone.run(() => {
+            this.error = err;
+          });
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 179096fd8c51cb8026a9719b3c32e6939c9a8219 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:50:30 +0300
Subject: [PATCH 198/304] Step 19.24: Added the signup view

---
 client/imports/app/auth/signup.component.html | 32 +++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)
 create mode 100644 client/imports/app/auth/signup.component.html

diff --git a/client/imports/app/auth/signup.component.html b/client/imports/app/auth/signup.component.html
new file mode 100644
index 0000000..eccbff8
--- /dev/null
+++ b/client/imports/app/auth/signup.component.html
@@ -0,0 +1,32 @@
+<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
+  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign up
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <form [formGroup]="signupForm" #f="ngForm" (ngSubmit)="signup()"
+            layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign Up</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/login']">Already a user?</a>
+      </div>
+    </div>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 14a8c40319ef0e5174af6e4c449b78d8e9b970bb Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:50:49 +0300
Subject: [PATCH 199/304] Step 19.25: Added signup component to the index file

---
 client/imports/app/auth/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/auth/index.ts b/client/imports/app/auth/index.ts
index c8c17d6..2cf1d9a 100644
--- a/client/imports/app/auth/index.ts
+++ b/client/imports/app/auth/index.ts
@@ -1,5 +1,7 @@
 import {LoginComponent} from "./login.component";
+import {SignupComponent} from "./signup.component";
 
 export const AUTH_DECLARATIONS = [
-  LoginComponent
+  LoginComponent,
+  SignupComponent
 ];
-- 
2.10.2


From c84dbfc38dfbd4a9f1355888e9a5d39269bd9c6f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:51:05 +0300
Subject: [PATCH 200/304] Step 19.26: Added signup route

---
 client/imports/app/app.routes.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index 83e37a2..d2110a7 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -4,11 +4,13 @@ import { Meteor } from 'meteor/meteor';
 import { PartiesListComponent } from './parties/parties-list.component';
 import { PartyDetailsComponent } from './parties/party-details.component';
 import {LoginComponent} from "./auth/login.component";
+import {SignupComponent} from "./auth/signup.component";
 
 export const routes: Route[] = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
-  { path: 'login', component: LoginComponent }
+  { path: 'login', component: LoginComponent },
+  { path: 'signup', component: SignupComponent }
 ];
 
 export const ROUTES_PROVIDERS = [{
-- 
2.10.2


From 958a126ca1510f9f3803ea77cd5c757fe197679e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:53:55 +0300
Subject: [PATCH 201/304] Step 19.27: Create the recover component

---
 client/imports/app/auth/recover.component.ts | 41 ++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)
 create mode 100644 client/imports/app/auth/recover.component.ts

diff --git a/client/imports/app/auth/recover.component.ts b/client/imports/app/auth/recover.component.ts
new file mode 100644
index 0000000..6b520c6
--- /dev/null
+++ b/client/imports/app/auth/recover.component.ts
@@ -0,0 +1,41 @@
+import {Component, OnInit, NgZone} from '@angular/core';
+import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+import { Router } from '@angular/router';
+import { Accounts } from 'meteor/accounts-base';
+
+import template from './recover.component.html';
+
+@Component({
+  selector: 'recover',
+  template
+})
+export class RecoverComponent implements OnInit {
+  recoverForm: FormGroup;
+  error: string;
+
+  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
+
+  ngOnInit() {
+    this.recoverForm = this.formBuilder.group({
+      email: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  recover() {
+    if (this.recoverForm.valid) {
+      Accounts.forgotPassword({
+        email: this.recoverForm.value.email
+      }, (err) => {
+        if (err) {
+          this.zone.run(() => {
+            this.error = err;
+          });
+        } else {
+          this.router.navigate(['/']);
+        }
+      });
+    }
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 62ebc32c239aab47f228b97e13c2b9d284e11eba Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:54:00 +0300
Subject: [PATCH 202/304] Step 19.28: Create the recover component view

---
 client/imports/app/auth/recover.component.html | 31 ++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)
 create mode 100644 client/imports/app/auth/recover.component.html

diff --git a/client/imports/app/auth/recover.component.html b/client/imports/app/auth/recover.component.html
new file mode 100644
index 0000000..f638a13
--- /dev/null
+++ b/client/imports/app/auth/recover.component.html
@@ -0,0 +1,31 @@
+<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
+  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Recover Your Password
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <form [formGroup]="recoverForm" #f="ngForm" (ngSubmit)="recover()"
+            layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="Recover">Recover</button>
+        </div>
+      </form>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+
+      <md-divider></md-divider>
+
+      <div layout="row" layout-align="center">
+        <a md-button [routerLink]="['/login']">Remember your password?</a>
+      </div>
+    </div>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From af8477ee74015e00ddd2476240ac302cd94776e5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:54:09 +0300
Subject: [PATCH 203/304] Step 19.29: Added the recover component to the index
 file

---
 client/imports/app/auth/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/auth/index.ts b/client/imports/app/auth/index.ts
index 2cf1d9a..11c1835 100644
--- a/client/imports/app/auth/index.ts
+++ b/client/imports/app/auth/index.ts
@@ -1,7 +1,9 @@
 import {LoginComponent} from "./login.component";
 import {SignupComponent} from "./signup.component";
+import {RecoverComponent} from "./recover.component";
 
 export const AUTH_DECLARATIONS = [
   LoginComponent,
-  SignupComponent
+  SignupComponent,
+  RecoverComponent
 ];
-- 
2.10.2


From 5eea50dee83921b9faf31c5962d6b62a6f6d5880 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:54:19 +0300
Subject: [PATCH 204/304] Step 19.30: Added the recover route

---
 client/imports/app/app.routes.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index d2110a7..ed9f829 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -5,12 +5,14 @@ import { PartiesListComponent } from './parties/parties-list.component';
 import { PartyDetailsComponent } from './parties/party-details.component';
 import {LoginComponent} from "./auth/login.component";
 import {SignupComponent} from "./auth/signup.component";
+import {RecoverComponent} from "./auth/recover.component";
 
 export const routes: Route[] = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
   { path: 'login', component: LoginComponent },
-  { path: 'signup', component: SignupComponent }
+  { path: 'signup', component: SignupComponent },
+  { path: 'recover', component: RecoverComponent }
 ];
 
 export const ROUTES_PROVIDERS = [{
-- 
2.10.2


From 9f9cad7fd2b8cd861030e6b997bbfff19bea9379 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 18 Oct 2016 16:59:07 +0300
Subject: [PATCH 205/304] Step 19.31: Added material responsive CSS file

---
 client/imports/material-layout.scss | 19112 ++++++++++++++++++++++++++++++++++
 1 file changed, 19112 insertions(+)
 create mode 100644 client/imports/material-layout.scss

diff --git a/client/imports/material-layout.scss b/client/imports/material-layout.scss
new file mode 100644
index 0000000..142f4fd
--- /dev/null
+++ b/client/imports/material-layout.scss
@@ -0,0 +1,19112 @@
+/*!
+ * Angular Material Design
+ * https://github.com/angular/material
+ * @license MIT
+ * v1.1.0-master-2b98560
+ */
+/*
+*
+*  Responsive attributes
+*
+*  References:
+*  1) https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties#flex
+*  2) https://css-tricks.com/almanac/properties/f/flex/
+*  3) https://css-tricks.com/snippets/css/a-guide-to-flexbox/
+*  4) https://github.com/philipwalton/flexbugs#3-min-height-on-a-flex-container-wont-apply-to-its-flex-items
+*  5) http://godban.com.ua/projects/flexgrid
+*
+*/
+@-moz-document url-prefix() {
+  [layout-fill] {
+    margin: 0;
+    width: 100%;
+    min-height: 100%;
+    height: 100%; } }
+
+/*
+ *  Apply Mixins to create Layout/Flexbox styles
+ *
+ */
+[flex-order] {
+  -webkit-box-ordinal-group: 1;
+  -webkit-order: 0;
+  order: 0; }
+
+[flex-order="-20"] {
+  -webkit-box-ordinal-group: -19;
+  -webkit-order: -20;
+  order: -20; }
+
+[flex-order="-19"] {
+  -webkit-box-ordinal-group: -18;
+  -webkit-order: -19;
+  order: -19; }
+
+[flex-order="-18"] {
+  -webkit-box-ordinal-group: -17;
+  -webkit-order: -18;
+  order: -18; }
+
+[flex-order="-17"] {
+  -webkit-box-ordinal-group: -16;
+  -webkit-order: -17;
+  order: -17; }
+
+[flex-order="-16"] {
+  -webkit-box-ordinal-group: -15;
+  -webkit-order: -16;
+  order: -16; }
+
+[flex-order="-15"] {
+  -webkit-box-ordinal-group: -14;
+  -webkit-order: -15;
+  order: -15; }
+
+[flex-order="-14"] {
+  -webkit-box-ordinal-group: -13;
+  -webkit-order: -14;
+  order: -14; }
+
+[flex-order="-13"] {
+  -webkit-box-ordinal-group: -12;
+  -webkit-order: -13;
+  order: -13; }
+
+[flex-order="-12"] {
+  -webkit-box-ordinal-group: -11;
+  -webkit-order: -12;
+  order: -12; }
+
+[flex-order="-11"] {
+  -webkit-box-ordinal-group: -10;
+  -webkit-order: -11;
+  order: -11; }
+
+[flex-order="-10"] {
+  -webkit-box-ordinal-group: -9;
+  -webkit-order: -10;
+  order: -10; }
+
+[flex-order="-9"] {
+  -webkit-box-ordinal-group: -8;
+  -webkit-order: -9;
+  order: -9; }
+
+[flex-order="-8"] {
+  -webkit-box-ordinal-group: -7;
+  -webkit-order: -8;
+  order: -8; }
+
+[flex-order="-7"] {
+  -webkit-box-ordinal-group: -6;
+  -webkit-order: -7;
+  order: -7; }
+
+[flex-order="-6"] {
+  -webkit-box-ordinal-group: -5;
+  -webkit-order: -6;
+  order: -6; }
+
+[flex-order="-5"] {
+  -webkit-box-ordinal-group: -4;
+  -webkit-order: -5;
+  order: -5; }
+
+[flex-order="-4"] {
+  -webkit-box-ordinal-group: -3;
+  -webkit-order: -4;
+  order: -4; }
+
+[flex-order="-3"] {
+  -webkit-box-ordinal-group: -2;
+  -webkit-order: -3;
+  order: -3; }
+
+[flex-order="-2"] {
+  -webkit-box-ordinal-group: -1;
+  -webkit-order: -2;
+  order: -2; }
+
+[flex-order="-1"] {
+  -webkit-box-ordinal-group: 0;
+  -webkit-order: -1;
+  order: -1; }
+
+[flex-order="0"] {
+  -webkit-box-ordinal-group: 1;
+  -webkit-order: 0;
+  order: 0; }
+
+[flex-order="1"] {
+  -webkit-box-ordinal-group: 2;
+  -webkit-order: 1;
+  order: 1; }
+
+[flex-order="2"] {
+  -webkit-box-ordinal-group: 3;
+  -webkit-order: 2;
+  order: 2; }
+
+[flex-order="3"] {
+  -webkit-box-ordinal-group: 4;
+  -webkit-order: 3;
+  order: 3; }
+
+[flex-order="4"] {
+  -webkit-box-ordinal-group: 5;
+  -webkit-order: 4;
+  order: 4; }
+
+[flex-order="5"] {
+  -webkit-box-ordinal-group: 6;
+  -webkit-order: 5;
+  order: 5; }
+
+[flex-order="6"] {
+  -webkit-box-ordinal-group: 7;
+  -webkit-order: 6;
+  order: 6; }
+
+[flex-order="7"] {
+  -webkit-box-ordinal-group: 8;
+  -webkit-order: 7;
+  order: 7; }
+
+[flex-order="8"] {
+  -webkit-box-ordinal-group: 9;
+  -webkit-order: 8;
+  order: 8; }
+
+[flex-order="9"] {
+  -webkit-box-ordinal-group: 10;
+  -webkit-order: 9;
+  order: 9; }
+
+[flex-order="10"] {
+  -webkit-box-ordinal-group: 11;
+  -webkit-order: 10;
+  order: 10; }
+
+[flex-order="11"] {
+  -webkit-box-ordinal-group: 12;
+  -webkit-order: 11;
+  order: 11; }
+
+[flex-order="12"] {
+  -webkit-box-ordinal-group: 13;
+  -webkit-order: 12;
+  order: 12; }
+
+[flex-order="13"] {
+  -webkit-box-ordinal-group: 14;
+  -webkit-order: 13;
+  order: 13; }
+
+[flex-order="14"] {
+  -webkit-box-ordinal-group: 15;
+  -webkit-order: 14;
+  order: 14; }
+
+[flex-order="15"] {
+  -webkit-box-ordinal-group: 16;
+  -webkit-order: 15;
+  order: 15; }
+
+[flex-order="16"] {
+  -webkit-box-ordinal-group: 17;
+  -webkit-order: 16;
+  order: 16; }
+
+[flex-order="17"] {
+  -webkit-box-ordinal-group: 18;
+  -webkit-order: 17;
+  order: 17; }
+
+[flex-order="18"] {
+  -webkit-box-ordinal-group: 19;
+  -webkit-order: 18;
+  order: 18; }
+
+[flex-order="19"] {
+  -webkit-box-ordinal-group: 20;
+  -webkit-order: 19;
+  order: 19; }
+
+[flex-order="20"] {
+  -webkit-box-ordinal-group: 21;
+  -webkit-order: 20;
+  order: 20; }
+
+[flex-offset="0"] {
+  margin-left: 0%; }
+
+[flex-offset="5"] {
+  margin-left: 5%; }
+
+[flex-offset="10"] {
+  margin-left: 10%; }
+
+[flex-offset="15"] {
+  margin-left: 15%; }
+
+[flex-offset="20"] {
+  margin-left: 20%; }
+
+[flex-offset="25"] {
+  margin-left: 25%; }
+
+[flex-offset="30"] {
+  margin-left: 30%; }
+
+[flex-offset="35"] {
+  margin-left: 35%; }
+
+[flex-offset="40"] {
+  margin-left: 40%; }
+
+[flex-offset="45"] {
+  margin-left: 45%; }
+
+[flex-offset="50"] {
+  margin-left: 50%; }
+
+[flex-offset="55"] {
+  margin-left: 55%; }
+
+[flex-offset="60"] {
+  margin-left: 60%; }
+
+[flex-offset="65"] {
+  margin-left: 65%; }
+
+[flex-offset="70"] {
+  margin-left: 70%; }
+
+[flex-offset="75"] {
+  margin-left: 75%; }
+
+[flex-offset="80"] {
+  margin-left: 80%; }
+
+[flex-offset="85"] {
+  margin-left: 85%; }
+
+[flex-offset="90"] {
+  margin-left: 90%; }
+
+[flex-offset="95"] {
+  margin-left: 95%; }
+
+[flex-offset="33"] {
+  margin-left: calc(100% / 3); }
+
+[flex-offset="66"] {
+  margin-left: calc(200% / 3); }
+
+[layout-align],
+[layout-align="start stretch"] {
+  -webkit-box-pack: start;
+  -webkit-justify-content: flex-start;
+  justify-content: flex-start;
+  -webkit-align-content: stretch;
+  align-content: stretch;
+  -webkit-box-align: stretch;
+  -webkit-align-items: stretch;
+  -ms-grid-row-align: stretch;
+  align-items: stretch; }
+
+[layout-align="start"],
+[layout-align="start start"],
+[layout-align="start center"],
+[layout-align="start end"],
+[layout-align="start stretch"] {
+  -webkit-box-pack: start;
+  -webkit-justify-content: flex-start;
+  justify-content: flex-start; }
+
+[layout-align="center"],
+[layout-align="center start"],
+[layout-align="center center"],
+[layout-align="center end"],
+[layout-align="center stretch"] {
+  -webkit-box-pack: center;
+  -webkit-justify-content: center;
+  justify-content: center; }
+
+[layout-align="end"],
+[layout-align="end center"],
+[layout-align="end start"],
+[layout-align="end end"],
+[layout-align="end stretch"] {
+  -webkit-box-pack: end;
+  -webkit-justify-content: flex-end;
+  justify-content: flex-end; }
+
+[layout-align="space-around"],
+[layout-align="space-around center"],
+[layout-align="space-around start"],
+[layout-align="space-around end"],
+[layout-align="space-around stretch"] {
+  -webkit-justify-content: space-around;
+  justify-content: space-around; }
+
+[layout-align="space-between"],
+[layout-align="space-between center"],
+[layout-align="space-between start"],
+[layout-align="space-between end"],
+[layout-align="space-between stretch"] {
+  -webkit-box-pack: justify;
+  -webkit-justify-content: space-between;
+  justify-content: space-between; }
+
+[layout-align="start start"],
+[layout-align="center start"],
+[layout-align="end start"],
+[layout-align="space-between start"],
+[layout-align="space-around start"] {
+  -webkit-box-align: start;
+  -webkit-align-items: flex-start;
+  -ms-grid-row-align: flex-start;
+  align-items: flex-start;
+  -webkit-align-content: flex-start;
+  align-content: flex-start; }
+
+[layout-align="start center"],
+[layout-align="center center"],
+[layout-align="end center"],
+[layout-align="space-between center"],
+[layout-align="space-around center"] {
+  -webkit-box-align: center;
+  -webkit-align-items: center;
+  -ms-grid-row-align: center;
+  align-items: center;
+  -webkit-align-content: center;
+  align-content: center;
+  max-width: 100%; }
+
+[layout-align="start center"] > *,
+[layout-align="center center"] > *,
+[layout-align="end center"] > *,
+[layout-align="space-between center"] > *,
+[layout-align="space-around center"] > * {
+  max-width: 100%;
+  box-sizing: border-box; }
+
+[layout-align="start end"],
+[layout-align="center end"],
+[layout-align="end end"],
+[layout-align="space-between end"],
+[layout-align="space-around end"] {
+  -webkit-box-align: end;
+  -webkit-align-items: flex-end;
+  -ms-grid-row-align: flex-end;
+  align-items: flex-end;
+  -webkit-align-content: flex-end;
+  align-content: flex-end; }
+
+[layout-align="start stretch"],
+[layout-align="center stretch"],
+[layout-align="end stretch"],
+[layout-align="space-between stretch"],
+[layout-align="space-around stretch"] {
+  -webkit-box-align: stretch;
+  -webkit-align-items: stretch;
+  -ms-grid-row-align: stretch;
+  align-items: stretch;
+  -webkit-align-content: stretch;
+  align-content: stretch; }
+
+[flex] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1;
+  flex: 1;
+  box-sizing: border-box; }
+
+[flex-grow] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 100%;
+  flex: 1 1 100%;
+  box-sizing: border-box; }
+
+[flex-initial] {
+  -webkit-box-flex: 0;
+  -webkit-flex: 0 1 auto;
+  flex: 0 1 auto;
+  box-sizing: border-box; }
+
+[flex-auto] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 auto;
+  flex: 1 1 auto;
+  box-sizing: border-box; }
+
+[flex-none] {
+  -webkit-box-flex: 0;
+  -webkit-flex: 0 0 auto;
+  flex: 0 0 auto;
+  box-sizing: border-box; }
+
+[flex="0"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 0%;
+  flex: 1 1 0%;
+  max-width: 0%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="0"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 0%;
+  flex: 1 1 0%;
+  max-width: 0%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="0"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 0%;
+  flex: 1 1 0%;
+  max-width: 100%;
+  max-height: 0%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="0"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 0%;
+  flex: 1 1 0%;
+  max-width: 0%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="0"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 0%;
+  flex: 1 1 0%;
+  max-width: 100%;
+  max-height: 0%;
+  box-sizing: border-box; }
+
+[flex="5"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 5%;
+  flex: 1 1 5%;
+  max-width: 5%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="5"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 5%;
+  flex: 1 1 5%;
+  max-width: 5%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="5"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 5%;
+  flex: 1 1 5%;
+  max-width: 100%;
+  max-height: 5%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="5"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 5%;
+  flex: 1 1 5%;
+  max-width: 5%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="5"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 5%;
+  flex: 1 1 5%;
+  max-width: 100%;
+  max-height: 5%;
+  box-sizing: border-box; }
+
+[flex="10"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 10%;
+  flex: 1 1 10%;
+  max-width: 10%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="10"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 10%;
+  flex: 1 1 10%;
+  max-width: 10%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="10"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 10%;
+  flex: 1 1 10%;
+  max-width: 100%;
+  max-height: 10%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="10"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 10%;
+  flex: 1 1 10%;
+  max-width: 10%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="10"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 10%;
+  flex: 1 1 10%;
+  max-width: 100%;
+  max-height: 10%;
+  box-sizing: border-box; }
+
+[flex="15"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 15%;
+  flex: 1 1 15%;
+  max-width: 15%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="15"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 15%;
+  flex: 1 1 15%;
+  max-width: 15%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="15"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 15%;
+  flex: 1 1 15%;
+  max-width: 100%;
+  max-height: 15%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="15"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 15%;
+  flex: 1 1 15%;
+  max-width: 15%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="15"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 15%;
+  flex: 1 1 15%;
+  max-width: 100%;
+  max-height: 15%;
+  box-sizing: border-box; }
+
+[flex="20"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 20%;
+  flex: 1 1 20%;
+  max-width: 20%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="20"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 20%;
+  flex: 1 1 20%;
+  max-width: 20%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="20"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 20%;
+  flex: 1 1 20%;
+  max-width: 100%;
+  max-height: 20%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="20"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 20%;
+  flex: 1 1 20%;
+  max-width: 20%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="20"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 20%;
+  flex: 1 1 20%;
+  max-width: 100%;
+  max-height: 20%;
+  box-sizing: border-box; }
+
+[flex="25"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 25%;
+  flex: 1 1 25%;
+  max-width: 25%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="25"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 25%;
+  flex: 1 1 25%;
+  max-width: 25%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="25"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 25%;
+  flex: 1 1 25%;
+  max-width: 100%;
+  max-height: 25%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="25"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 25%;
+  flex: 1 1 25%;
+  max-width: 25%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="25"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 25%;
+  flex: 1 1 25%;
+  max-width: 100%;
+  max-height: 25%;
+  box-sizing: border-box; }
+
+[flex="30"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 30%;
+  flex: 1 1 30%;
+  max-width: 30%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="30"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 30%;
+  flex: 1 1 30%;
+  max-width: 30%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="30"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 30%;
+  flex: 1 1 30%;
+  max-width: 100%;
+  max-height: 30%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="30"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 30%;
+  flex: 1 1 30%;
+  max-width: 30%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="30"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 30%;
+  flex: 1 1 30%;
+  max-width: 100%;
+  max-height: 30%;
+  box-sizing: border-box; }
+
+[flex="35"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 35%;
+  flex: 1 1 35%;
+  max-width: 35%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="35"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 35%;
+  flex: 1 1 35%;
+  max-width: 35%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="35"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 35%;
+  flex: 1 1 35%;
+  max-width: 100%;
+  max-height: 35%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="35"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 35%;
+  flex: 1 1 35%;
+  max-width: 35%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="35"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 35%;
+  flex: 1 1 35%;
+  max-width: 100%;
+  max-height: 35%;
+  box-sizing: border-box; }
+
+[flex="40"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 40%;
+  flex: 1 1 40%;
+  max-width: 40%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="40"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 40%;
+  flex: 1 1 40%;
+  max-width: 40%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="40"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 40%;
+  flex: 1 1 40%;
+  max-width: 100%;
+  max-height: 40%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="40"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 40%;
+  flex: 1 1 40%;
+  max-width: 40%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="40"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 40%;
+  flex: 1 1 40%;
+  max-width: 100%;
+  max-height: 40%;
+  box-sizing: border-box; }
+
+[flex="45"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 45%;
+  flex: 1 1 45%;
+  max-width: 45%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="45"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 45%;
+  flex: 1 1 45%;
+  max-width: 45%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="45"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 45%;
+  flex: 1 1 45%;
+  max-width: 100%;
+  max-height: 45%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="45"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 45%;
+  flex: 1 1 45%;
+  max-width: 45%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="45"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 45%;
+  flex: 1 1 45%;
+  max-width: 100%;
+  max-height: 45%;
+  box-sizing: border-box; }
+
+[flex="50"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 50%;
+  flex: 1 1 50%;
+  max-width: 50%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="50"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 50%;
+  flex: 1 1 50%;
+  max-width: 50%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="50"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 50%;
+  flex: 1 1 50%;
+  max-width: 100%;
+  max-height: 50%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="50"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 50%;
+  flex: 1 1 50%;
+  max-width: 50%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="50"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 50%;
+  flex: 1 1 50%;
+  max-width: 100%;
+  max-height: 50%;
+  box-sizing: border-box; }
+
+[flex="55"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 55%;
+  flex: 1 1 55%;
+  max-width: 55%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="55"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 55%;
+  flex: 1 1 55%;
+  max-width: 55%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="55"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 55%;
+  flex: 1 1 55%;
+  max-width: 100%;
+  max-height: 55%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="55"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 55%;
+  flex: 1 1 55%;
+  max-width: 55%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="55"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 55%;
+  flex: 1 1 55%;
+  max-width: 100%;
+  max-height: 55%;
+  box-sizing: border-box; }
+
+[flex="60"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 60%;
+  flex: 1 1 60%;
+  max-width: 60%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="60"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 60%;
+  flex: 1 1 60%;
+  max-width: 60%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="60"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 60%;
+  flex: 1 1 60%;
+  max-width: 100%;
+  max-height: 60%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="60"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 60%;
+  flex: 1 1 60%;
+  max-width: 60%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="60"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 60%;
+  flex: 1 1 60%;
+  max-width: 100%;
+  max-height: 60%;
+  box-sizing: border-box; }
+
+[flex="65"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 65%;
+  flex: 1 1 65%;
+  max-width: 65%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="65"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 65%;
+  flex: 1 1 65%;
+  max-width: 65%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="65"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 65%;
+  flex: 1 1 65%;
+  max-width: 100%;
+  max-height: 65%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="65"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 65%;
+  flex: 1 1 65%;
+  max-width: 65%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="65"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 65%;
+  flex: 1 1 65%;
+  max-width: 100%;
+  max-height: 65%;
+  box-sizing: border-box; }
+
+[flex="70"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 70%;
+  flex: 1 1 70%;
+  max-width: 70%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="70"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 70%;
+  flex: 1 1 70%;
+  max-width: 70%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="70"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 70%;
+  flex: 1 1 70%;
+  max-width: 100%;
+  max-height: 70%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="70"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 70%;
+  flex: 1 1 70%;
+  max-width: 70%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="70"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 70%;
+  flex: 1 1 70%;
+  max-width: 100%;
+  max-height: 70%;
+  box-sizing: border-box; }
+
+[flex="75"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 75%;
+  flex: 1 1 75%;
+  max-width: 75%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="75"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 75%;
+  flex: 1 1 75%;
+  max-width: 75%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="75"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 75%;
+  flex: 1 1 75%;
+  max-width: 100%;
+  max-height: 75%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="75"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 75%;
+  flex: 1 1 75%;
+  max-width: 75%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="75"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 75%;
+  flex: 1 1 75%;
+  max-width: 100%;
+  max-height: 75%;
+  box-sizing: border-box; }
+
+[flex="80"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 80%;
+  flex: 1 1 80%;
+  max-width: 80%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="80"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 80%;
+  flex: 1 1 80%;
+  max-width: 80%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="80"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 80%;
+  flex: 1 1 80%;
+  max-width: 100%;
+  max-height: 80%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="80"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 80%;
+  flex: 1 1 80%;
+  max-width: 80%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="80"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 80%;
+  flex: 1 1 80%;
+  max-width: 100%;
+  max-height: 80%;
+  box-sizing: border-box; }
+
+[flex="85"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 85%;
+  flex: 1 1 85%;
+  max-width: 85%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="85"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 85%;
+  flex: 1 1 85%;
+  max-width: 85%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="85"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 85%;
+  flex: 1 1 85%;
+  max-width: 100%;
+  max-height: 85%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="85"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 85%;
+  flex: 1 1 85%;
+  max-width: 85%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="85"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 85%;
+  flex: 1 1 85%;
+  max-width: 100%;
+  max-height: 85%;
+  box-sizing: border-box; }
+
+[flex="90"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 90%;
+  flex: 1 1 90%;
+  max-width: 90%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="90"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 90%;
+  flex: 1 1 90%;
+  max-width: 90%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="90"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 90%;
+  flex: 1 1 90%;
+  max-width: 100%;
+  max-height: 90%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="90"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 90%;
+  flex: 1 1 90%;
+  max-width: 90%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="90"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 90%;
+  flex: 1 1 90%;
+  max-width: 100%;
+  max-height: 90%;
+  box-sizing: border-box; }
+
+[flex="95"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 95%;
+  flex: 1 1 95%;
+  max-width: 95%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="95"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 95%;
+  flex: 1 1 95%;
+  max-width: 95%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="95"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 95%;
+  flex: 1 1 95%;
+  max-width: 100%;
+  max-height: 95%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="95"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 95%;
+  flex: 1 1 95%;
+  max-width: 95%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="95"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 95%;
+  flex: 1 1 95%;
+  max-width: 100%;
+  max-height: 95%;
+  box-sizing: border-box; }
+
+[flex="100"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 100%;
+  flex: 1 1 100%;
+  max-width: 100%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="100"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 100%;
+  flex: 1 1 100%;
+  max-width: 100%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="100"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 100%;
+  flex: 1 1 100%;
+  max-width: 100%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="100"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 100%;
+  flex: 1 1 100%;
+  max-width: 100%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="100"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 100%;
+  flex: 1 1 100%;
+  max-width: 100%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="33"], [layout="row"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 33.33%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="row"] > [flex="66"], [layout="row"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 66.66%;
+  max-height: 100%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="33"], [layout="column"] > [flex="33"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 33.33%;
+  flex: 1 1 33.33%;
+  max-width: 100%;
+  max-height: 33.33%;
+  box-sizing: border-box; }
+
+[layout="column"] > [flex="66"], [layout="column"] > [flex="66"] {
+  -webkit-box-flex: 1;
+  -webkit-flex: 1 1 66.66%;
+  flex: 1 1 66.66%;
+  max-width: 100%;
+  max-height: 66.66%;
+  box-sizing: border-box; }
+
+[layout], [layout="column"], [layout="row"] {
+  box-sizing: border-box;
+  display: -webkit-box;
+  display: -webkit-flex;
+  display: flex; }
+
+[layout="column"] {
+  -webkit-box-orient: vertical;
+  -webkit-box-direction: normal;
+  -webkit-flex-direction: column;
+  flex-direction: column; }
+
+[layout="row"] {
+  -webkit-box-orient: horizontal;
+  -webkit-box-direction: normal;
+  -webkit-flex-direction: row;
+  flex-direction: row; }
+
+[layout-padding] > [flex-sm], [layout-padding] > [flex-lt-md] {
+  padding: 4px; }
+
+[layout-padding],
+[layout-padding] > [flex],
+[layout-padding] > [flex-gt-sm],
+[layout-padding] > [flex-md],
+[layout-padding] > [flex-lt-lg] {
+  padding: 8px; }
+
+[layout-padding] > [flex-gt-md],
+[layout-padding] > [flex-lg] {
+  padding: 16px; }
+
+[layout-margin] > [flex-sm],
+[layout-margin] > [flex-lt-md] {
+  margin: 4px; }
+
+[layout-margin],
+[layout-margin] > [flex],
+[layout-margin] > [flex-gt-sm],
+[layout-margin] > [flex-md],
+[layout-margin] > [flex-lt-lg] {
+  margin: 8px; }
+
+[layout-margin] > [flex-gt-md],
+[layout-margin] > [flex-lg] {
+  margin: 16px; }
+
+[layout-wrap] {
+  -webkit-flex-wrap: wrap;
+  flex-wrap: wrap; }
+
+[layout-nowrap] {
+  -webkit-flex-wrap: nowrap;
+  flex-wrap: nowrap; }
+
+[layout-fill] {
+  margin: 0;
+  width: 100%;
+  min-height: 100%;
+  height: 100%; }
+
+/**
+ * `hide-gt-sm show-gt-lg` should hide from 600px to 1200px
+ * `show-md hide-gt-sm` should show from 0px to 960px and hide at >960px
+ * `hide-gt-md show-gt-sm` should show everywhere (show overrides hide)`
+ *
+ *  hide means hide everywhere
+ *  Sizes:
+ *         $layout-breakpoint-xs:     600px !default;
+ *         $layout-breakpoint-sm:     960px !default;
+ *         $layout-breakpoint-md:     1280px !default;
+ *         $layout-breakpoint-lg:     1920px !default;
+ */
+@media (max-width: 599px) {
+  [hide-xs]:not([show-xs]):not([show]), [hide]:not([show-xs]):not([show]) {
+    display: none; }
+  [flex-order-xs="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-xs="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-xs="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-xs="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-xs="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-xs="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-xs="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-xs="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-xs="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-xs="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-xs="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-xs="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-xs="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-xs="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-xs="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-xs="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-xs="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-xs="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-xs="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-xs="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-xs="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-xs="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-xs="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-xs="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-xs="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-xs="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-xs="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-xs="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-xs="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-xs="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-xs="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-xs="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-xs="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-xs="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-xs="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-xs="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-xs="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-xs="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-xs="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-xs="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-xs="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-xs="0"] {
+    margin-left: 0%; }
+  [flex-offset-xs="5"] {
+    margin-left: 5%; }
+  [flex-offset-xs="10"] {
+    margin-left: 10%; }
+  [flex-offset-xs="15"] {
+    margin-left: 15%; }
+  [flex-offset-xs="20"] {
+    margin-left: 20%; }
+  [flex-offset-xs="25"] {
+    margin-left: 25%; }
+  [flex-offset-xs="30"] {
+    margin-left: 30%; }
+  [flex-offset-xs="35"] {
+    margin-left: 35%; }
+  [flex-offset-xs="40"] {
+    margin-left: 40%; }
+  [flex-offset-xs="45"] {
+    margin-left: 45%; }
+  [flex-offset-xs="50"] {
+    margin-left: 50%; }
+  [flex-offset-xs="55"] {
+    margin-left: 55%; }
+  [flex-offset-xs="60"] {
+    margin-left: 60%; }
+  [flex-offset-xs="65"] {
+    margin-left: 65%; }
+  [flex-offset-xs="70"] {
+    margin-left: 70%; }
+  [flex-offset-xs="75"] {
+    margin-left: 75%; }
+  [flex-offset-xs="80"] {
+    margin-left: 80%; }
+  [flex-offset-xs="85"] {
+    margin-left: 85%; }
+  [flex-offset-xs="90"] {
+    margin-left: 90%; }
+  [flex-offset-xs="95"] {
+    margin-left: 95%; }
+  [flex-offset-xs="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-xs="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-xs],
+  [layout-align-xs="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-xs="start"],
+  [layout-align-xs="start start"],
+  [layout-align-xs="start center"],
+  [layout-align-xs="start end"],
+  [layout-align-xs="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-xs="center"],
+  [layout-align-xs="center start"],
+  [layout-align-xs="center center"],
+  [layout-align-xs="center end"],
+  [layout-align-xs="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-xs="end"],
+  [layout-align-xs="end center"],
+  [layout-align-xs="end start"],
+  [layout-align-xs="end end"],
+  [layout-align-xs="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-xs="space-around"],
+  [layout-align-xs="space-around center"],
+  [layout-align-xs="space-around start"],
+  [layout-align-xs="space-around end"],
+  [layout-align-xs="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-xs="space-between"],
+  [layout-align-xs="space-between center"],
+  [layout-align-xs="space-between start"],
+  [layout-align-xs="space-between end"],
+  [layout-align-xs="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-xs="start start"],
+  [layout-align-xs="center start"],
+  [layout-align-xs="end start"],
+  [layout-align-xs="space-between start"],
+  [layout-align-xs="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-xs="start center"],
+  [layout-align-xs="center center"],
+  [layout-align-xs="end center"],
+  [layout-align-xs="space-between center"],
+  [layout-align-xs="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-xs="start center"] > *,
+  [layout-align-xs="center center"] > *,
+  [layout-align-xs="end center"] > *,
+  [layout-align-xs="space-between center"] > *,
+  [layout-align-xs="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-xs="start end"],
+  [layout-align-xs="center end"],
+  [layout-align-xs="end end"],
+  [layout-align-xs="space-between end"],
+  [layout-align-xs="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-xs="start stretch"],
+  [layout-align-xs="center stretch"],
+  [layout-align-xs="end stretch"],
+  [layout-align-xs="space-between stretch"],
+  [layout-align-xs="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-xs] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-xs-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-xs-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-xs-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-xs-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="33"], [layout="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xs="66"], [layout="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="33"], [layout="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xs="66"], [layout="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="33"], [layout-xs="row"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="row"] > [flex-xs="66"], [layout-xs="row"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="33"], [layout-xs="column"] > [flex-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-xs="column"] > [flex-xs="66"], [layout-xs="column"] > [flex-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xs], [layout-xs="column"], [layout-xs="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-xs="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-xs="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 600px) {
+  [flex-order-gt-xs="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-gt-xs="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-gt-xs="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-gt-xs="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-gt-xs="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-gt-xs="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-gt-xs="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-gt-xs="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-gt-xs="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-gt-xs="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-gt-xs="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-gt-xs="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-gt-xs="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-gt-xs="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-gt-xs="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-gt-xs="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-gt-xs="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-gt-xs="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-gt-xs="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-gt-xs="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-gt-xs="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-gt-xs="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-gt-xs="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-gt-xs="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-gt-xs="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-gt-xs="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-gt-xs="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-gt-xs="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-gt-xs="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-gt-xs="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-gt-xs="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-gt-xs="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-gt-xs="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-gt-xs="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-gt-xs="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-gt-xs="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-gt-xs="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-gt-xs="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-gt-xs="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-gt-xs="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-gt-xs="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-gt-xs="0"] {
+    margin-left: 0%; }
+  [flex-offset-gt-xs="5"] {
+    margin-left: 5%; }
+  [flex-offset-gt-xs="10"] {
+    margin-left: 10%; }
+  [flex-offset-gt-xs="15"] {
+    margin-left: 15%; }
+  [flex-offset-gt-xs="20"] {
+    margin-left: 20%; }
+  [flex-offset-gt-xs="25"] {
+    margin-left: 25%; }
+  [flex-offset-gt-xs="30"] {
+    margin-left: 30%; }
+  [flex-offset-gt-xs="35"] {
+    margin-left: 35%; }
+  [flex-offset-gt-xs="40"] {
+    margin-left: 40%; }
+  [flex-offset-gt-xs="45"] {
+    margin-left: 45%; }
+  [flex-offset-gt-xs="50"] {
+    margin-left: 50%; }
+  [flex-offset-gt-xs="55"] {
+    margin-left: 55%; }
+  [flex-offset-gt-xs="60"] {
+    margin-left: 60%; }
+  [flex-offset-gt-xs="65"] {
+    margin-left: 65%; }
+  [flex-offset-gt-xs="70"] {
+    margin-left: 70%; }
+  [flex-offset-gt-xs="75"] {
+    margin-left: 75%; }
+  [flex-offset-gt-xs="80"] {
+    margin-left: 80%; }
+  [flex-offset-gt-xs="85"] {
+    margin-left: 85%; }
+  [flex-offset-gt-xs="90"] {
+    margin-left: 90%; }
+  [flex-offset-gt-xs="95"] {
+    margin-left: 95%; }
+  [flex-offset-gt-xs="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-gt-xs="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-gt-xs],
+  [layout-align-gt-xs="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-gt-xs="start"],
+  [layout-align-gt-xs="start start"],
+  [layout-align-gt-xs="start center"],
+  [layout-align-gt-xs="start end"],
+  [layout-align-gt-xs="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-gt-xs="center"],
+  [layout-align-gt-xs="center start"],
+  [layout-align-gt-xs="center center"],
+  [layout-align-gt-xs="center end"],
+  [layout-align-gt-xs="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-gt-xs="end"],
+  [layout-align-gt-xs="end center"],
+  [layout-align-gt-xs="end start"],
+  [layout-align-gt-xs="end end"],
+  [layout-align-gt-xs="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-gt-xs="space-around"],
+  [layout-align-gt-xs="space-around center"],
+  [layout-align-gt-xs="space-around start"],
+  [layout-align-gt-xs="space-around end"],
+  [layout-align-gt-xs="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-gt-xs="space-between"],
+  [layout-align-gt-xs="space-between center"],
+  [layout-align-gt-xs="space-between start"],
+  [layout-align-gt-xs="space-between end"],
+  [layout-align-gt-xs="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-gt-xs="start start"],
+  [layout-align-gt-xs="center start"],
+  [layout-align-gt-xs="end start"],
+  [layout-align-gt-xs="space-between start"],
+  [layout-align-gt-xs="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-gt-xs="start center"],
+  [layout-align-gt-xs="center center"],
+  [layout-align-gt-xs="end center"],
+  [layout-align-gt-xs="space-between center"],
+  [layout-align-gt-xs="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-gt-xs="start center"] > *,
+  [layout-align-gt-xs="center center"] > *,
+  [layout-align-gt-xs="end center"] > *,
+  [layout-align-gt-xs="space-between center"] > *,
+  [layout-align-gt-xs="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-gt-xs="start end"],
+  [layout-align-gt-xs="center end"],
+  [layout-align-gt-xs="end end"],
+  [layout-align-gt-xs="space-between end"],
+  [layout-align-gt-xs="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-gt-xs="start stretch"],
+  [layout-align-gt-xs="center stretch"],
+  [layout-align-gt-xs="end stretch"],
+  [layout-align-gt-xs="space-between stretch"],
+  [layout-align-gt-xs="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-gt-xs] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-gt-xs-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-gt-xs-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-xs-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-xs-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-gt-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-gt-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-gt-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-gt-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-gt-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-gt-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-gt-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-gt-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-gt-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-gt-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-gt-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-gt-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-gt-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-gt-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-gt-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-gt-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-gt-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-gt-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-gt-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-gt-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-gt-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="33"], [layout="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-xs="66"], [layout="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="33"], [layout="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-xs="66"], [layout="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="33"], [layout-gt-xs="row"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="row"] > [flex-gt-xs="66"], [layout-gt-xs="row"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="33"], [layout-gt-xs="column"] > [flex-gt-xs="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-gt-xs="column"] > [flex-gt-xs="66"], [layout-gt-xs="column"] > [flex-gt-xs="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-xs], [layout-gt-xs="column"], [layout-gt-xs="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-gt-xs="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-gt-xs="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 600px) and (max-width: 959px) {
+  [hide]:not([show-gt-xs]):not([show-sm]):not([show]), [hide-gt-xs]:not([show-gt-xs]):not([show-sm]):not([show]) {
+    display: none; }
+  [hide-sm]:not([show-gt-xs]):not([show-sm]):not([show]) {
+    display: none; }
+  [flex-order-sm="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-sm="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-sm="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-sm="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-sm="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-sm="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-sm="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-sm="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-sm="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-sm="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-sm="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-sm="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-sm="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-sm="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-sm="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-sm="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-sm="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-sm="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-sm="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-sm="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-sm="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-sm="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-sm="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-sm="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-sm="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-sm="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-sm="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-sm="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-sm="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-sm="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-sm="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-sm="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-sm="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-sm="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-sm="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-sm="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-sm="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-sm="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-sm="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-sm="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-sm="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-sm="0"] {
+    margin-left: 0%; }
+  [flex-offset-sm="5"] {
+    margin-left: 5%; }
+  [flex-offset-sm="10"] {
+    margin-left: 10%; }
+  [flex-offset-sm="15"] {
+    margin-left: 15%; }
+  [flex-offset-sm="20"] {
+    margin-left: 20%; }
+  [flex-offset-sm="25"] {
+    margin-left: 25%; }
+  [flex-offset-sm="30"] {
+    margin-left: 30%; }
+  [flex-offset-sm="35"] {
+    margin-left: 35%; }
+  [flex-offset-sm="40"] {
+    margin-left: 40%; }
+  [flex-offset-sm="45"] {
+    margin-left: 45%; }
+  [flex-offset-sm="50"] {
+    margin-left: 50%; }
+  [flex-offset-sm="55"] {
+    margin-left: 55%; }
+  [flex-offset-sm="60"] {
+    margin-left: 60%; }
+  [flex-offset-sm="65"] {
+    margin-left: 65%; }
+  [flex-offset-sm="70"] {
+    margin-left: 70%; }
+  [flex-offset-sm="75"] {
+    margin-left: 75%; }
+  [flex-offset-sm="80"] {
+    margin-left: 80%; }
+  [flex-offset-sm="85"] {
+    margin-left: 85%; }
+  [flex-offset-sm="90"] {
+    margin-left: 90%; }
+  [flex-offset-sm="95"] {
+    margin-left: 95%; }
+  [flex-offset-sm="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-sm="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-sm],
+  [layout-align-sm="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-sm="start"],
+  [layout-align-sm="start start"],
+  [layout-align-sm="start center"],
+  [layout-align-sm="start end"],
+  [layout-align-sm="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-sm="center"],
+  [layout-align-sm="center start"],
+  [layout-align-sm="center center"],
+  [layout-align-sm="center end"],
+  [layout-align-sm="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-sm="end"],
+  [layout-align-sm="end center"],
+  [layout-align-sm="end start"],
+  [layout-align-sm="end end"],
+  [layout-align-sm="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-sm="space-around"],
+  [layout-align-sm="space-around center"],
+  [layout-align-sm="space-around start"],
+  [layout-align-sm="space-around end"],
+  [layout-align-sm="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-sm="space-between"],
+  [layout-align-sm="space-between center"],
+  [layout-align-sm="space-between start"],
+  [layout-align-sm="space-between end"],
+  [layout-align-sm="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-sm="start start"],
+  [layout-align-sm="center start"],
+  [layout-align-sm="end start"],
+  [layout-align-sm="space-between start"],
+  [layout-align-sm="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-sm="start center"],
+  [layout-align-sm="center center"],
+  [layout-align-sm="end center"],
+  [layout-align-sm="space-between center"],
+  [layout-align-sm="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-sm="start center"] > *,
+  [layout-align-sm="center center"] > *,
+  [layout-align-sm="end center"] > *,
+  [layout-align-sm="space-between center"] > *,
+  [layout-align-sm="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-sm="start end"],
+  [layout-align-sm="center end"],
+  [layout-align-sm="end end"],
+  [layout-align-sm="space-between end"],
+  [layout-align-sm="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-sm="start stretch"],
+  [layout-align-sm="center stretch"],
+  [layout-align-sm="end stretch"],
+  [layout-align-sm="space-between stretch"],
+  [layout-align-sm="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-sm] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-sm-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-sm-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-sm-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-sm-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="33"], [layout="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-sm="66"], [layout="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="33"], [layout="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-sm="66"], [layout="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="33"], [layout-sm="row"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="row"] > [flex-sm="66"], [layout-sm="row"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="33"], [layout-sm="column"] > [flex-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-sm="column"] > [flex-sm="66"], [layout-sm="column"] > [flex-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-sm], [layout-sm="column"], [layout-sm="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-sm="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-sm="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 960px) {
+  [flex-order-gt-sm="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-gt-sm="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-gt-sm="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-gt-sm="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-gt-sm="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-gt-sm="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-gt-sm="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-gt-sm="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-gt-sm="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-gt-sm="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-gt-sm="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-gt-sm="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-gt-sm="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-gt-sm="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-gt-sm="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-gt-sm="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-gt-sm="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-gt-sm="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-gt-sm="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-gt-sm="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-gt-sm="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-gt-sm="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-gt-sm="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-gt-sm="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-gt-sm="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-gt-sm="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-gt-sm="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-gt-sm="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-gt-sm="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-gt-sm="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-gt-sm="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-gt-sm="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-gt-sm="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-gt-sm="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-gt-sm="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-gt-sm="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-gt-sm="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-gt-sm="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-gt-sm="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-gt-sm="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-gt-sm="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-gt-sm="0"] {
+    margin-left: 0%; }
+  [flex-offset-gt-sm="5"] {
+    margin-left: 5%; }
+  [flex-offset-gt-sm="10"] {
+    margin-left: 10%; }
+  [flex-offset-gt-sm="15"] {
+    margin-left: 15%; }
+  [flex-offset-gt-sm="20"] {
+    margin-left: 20%; }
+  [flex-offset-gt-sm="25"] {
+    margin-left: 25%; }
+  [flex-offset-gt-sm="30"] {
+    margin-left: 30%; }
+  [flex-offset-gt-sm="35"] {
+    margin-left: 35%; }
+  [flex-offset-gt-sm="40"] {
+    margin-left: 40%; }
+  [flex-offset-gt-sm="45"] {
+    margin-left: 45%; }
+  [flex-offset-gt-sm="50"] {
+    margin-left: 50%; }
+  [flex-offset-gt-sm="55"] {
+    margin-left: 55%; }
+  [flex-offset-gt-sm="60"] {
+    margin-left: 60%; }
+  [flex-offset-gt-sm="65"] {
+    margin-left: 65%; }
+  [flex-offset-gt-sm="70"] {
+    margin-left: 70%; }
+  [flex-offset-gt-sm="75"] {
+    margin-left: 75%; }
+  [flex-offset-gt-sm="80"] {
+    margin-left: 80%; }
+  [flex-offset-gt-sm="85"] {
+    margin-left: 85%; }
+  [flex-offset-gt-sm="90"] {
+    margin-left: 90%; }
+  [flex-offset-gt-sm="95"] {
+    margin-left: 95%; }
+  [flex-offset-gt-sm="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-gt-sm="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-gt-sm],
+  [layout-align-gt-sm="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-gt-sm="start"],
+  [layout-align-gt-sm="start start"],
+  [layout-align-gt-sm="start center"],
+  [layout-align-gt-sm="start end"],
+  [layout-align-gt-sm="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-gt-sm="center"],
+  [layout-align-gt-sm="center start"],
+  [layout-align-gt-sm="center center"],
+  [layout-align-gt-sm="center end"],
+  [layout-align-gt-sm="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-gt-sm="end"],
+  [layout-align-gt-sm="end center"],
+  [layout-align-gt-sm="end start"],
+  [layout-align-gt-sm="end end"],
+  [layout-align-gt-sm="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-gt-sm="space-around"],
+  [layout-align-gt-sm="space-around center"],
+  [layout-align-gt-sm="space-around start"],
+  [layout-align-gt-sm="space-around end"],
+  [layout-align-gt-sm="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-gt-sm="space-between"],
+  [layout-align-gt-sm="space-between center"],
+  [layout-align-gt-sm="space-between start"],
+  [layout-align-gt-sm="space-between end"],
+  [layout-align-gt-sm="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-gt-sm="start start"],
+  [layout-align-gt-sm="center start"],
+  [layout-align-gt-sm="end start"],
+  [layout-align-gt-sm="space-between start"],
+  [layout-align-gt-sm="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-gt-sm="start center"],
+  [layout-align-gt-sm="center center"],
+  [layout-align-gt-sm="end center"],
+  [layout-align-gt-sm="space-between center"],
+  [layout-align-gt-sm="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-gt-sm="start center"] > *,
+  [layout-align-gt-sm="center center"] > *,
+  [layout-align-gt-sm="end center"] > *,
+  [layout-align-gt-sm="space-between center"] > *,
+  [layout-align-gt-sm="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-gt-sm="start end"],
+  [layout-align-gt-sm="center end"],
+  [layout-align-gt-sm="end end"],
+  [layout-align-gt-sm="space-between end"],
+  [layout-align-gt-sm="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-gt-sm="start stretch"],
+  [layout-align-gt-sm="center stretch"],
+  [layout-align-gt-sm="end stretch"],
+  [layout-align-gt-sm="space-between stretch"],
+  [layout-align-gt-sm="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-gt-sm] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-gt-sm-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-gt-sm-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-sm-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-sm-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-gt-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-gt-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-gt-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-gt-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-gt-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-gt-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-gt-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-gt-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-gt-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-gt-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-gt-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-gt-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-gt-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-gt-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-gt-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-gt-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-gt-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-gt-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-gt-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-gt-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-gt-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="33"], [layout="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-sm="66"], [layout="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="33"], [layout="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-sm="66"], [layout="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="33"], [layout-gt-sm="row"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="row"] > [flex-gt-sm="66"], [layout-gt-sm="row"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="33"], [layout-gt-sm="column"] > [flex-gt-sm="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-gt-sm="column"] > [flex-gt-sm="66"], [layout-gt-sm="column"] > [flex-gt-sm="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-sm], [layout-gt-sm="column"], [layout-gt-sm="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-gt-sm="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-gt-sm="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 960px) and (max-width: 1279px) {
+  [hide]:not([show-gt-xs]):not([show-gt-sm]):not([show-md]):not([show]), [hide-gt-xs]:not([show-gt-xs]):not([show-gt-sm]):not([show-md]):not([show]), [hide-gt-sm]:not([show-gt-xs]):not([show-gt-sm]):not([show-md]):not([show]) {
+    display: none; }
+  [hide-md]:not([show-md]):not([show]) {
+    display: none; }
+  [flex-order-md="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-md="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-md="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-md="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-md="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-md="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-md="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-md="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-md="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-md="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-md="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-md="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-md="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-md="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-md="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-md="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-md="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-md="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-md="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-md="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-md="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-md="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-md="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-md="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-md="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-md="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-md="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-md="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-md="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-md="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-md="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-md="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-md="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-md="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-md="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-md="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-md="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-md="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-md="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-md="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-md="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-md="0"] {
+    margin-left: 0%; }
+  [flex-offset-md="5"] {
+    margin-left: 5%; }
+  [flex-offset-md="10"] {
+    margin-left: 10%; }
+  [flex-offset-md="15"] {
+    margin-left: 15%; }
+  [flex-offset-md="20"] {
+    margin-left: 20%; }
+  [flex-offset-md="25"] {
+    margin-left: 25%; }
+  [flex-offset-md="30"] {
+    margin-left: 30%; }
+  [flex-offset-md="35"] {
+    margin-left: 35%; }
+  [flex-offset-md="40"] {
+    margin-left: 40%; }
+  [flex-offset-md="45"] {
+    margin-left: 45%; }
+  [flex-offset-md="50"] {
+    margin-left: 50%; }
+  [flex-offset-md="55"] {
+    margin-left: 55%; }
+  [flex-offset-md="60"] {
+    margin-left: 60%; }
+  [flex-offset-md="65"] {
+    margin-left: 65%; }
+  [flex-offset-md="70"] {
+    margin-left: 70%; }
+  [flex-offset-md="75"] {
+    margin-left: 75%; }
+  [flex-offset-md="80"] {
+    margin-left: 80%; }
+  [flex-offset-md="85"] {
+    margin-left: 85%; }
+  [flex-offset-md="90"] {
+    margin-left: 90%; }
+  [flex-offset-md="95"] {
+    margin-left: 95%; }
+  [flex-offset-md="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-md="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-md],
+  [layout-align-md="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-md="start"],
+  [layout-align-md="start start"],
+  [layout-align-md="start center"],
+  [layout-align-md="start end"],
+  [layout-align-md="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-md="center"],
+  [layout-align-md="center start"],
+  [layout-align-md="center center"],
+  [layout-align-md="center end"],
+  [layout-align-md="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-md="end"],
+  [layout-align-md="end center"],
+  [layout-align-md="end start"],
+  [layout-align-md="end end"],
+  [layout-align-md="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-md="space-around"],
+  [layout-align-md="space-around center"],
+  [layout-align-md="space-around start"],
+  [layout-align-md="space-around end"],
+  [layout-align-md="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-md="space-between"],
+  [layout-align-md="space-between center"],
+  [layout-align-md="space-between start"],
+  [layout-align-md="space-between end"],
+  [layout-align-md="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-md="start start"],
+  [layout-align-md="center start"],
+  [layout-align-md="end start"],
+  [layout-align-md="space-between start"],
+  [layout-align-md="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-md="start center"],
+  [layout-align-md="center center"],
+  [layout-align-md="end center"],
+  [layout-align-md="space-between center"],
+  [layout-align-md="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-md="start center"] > *,
+  [layout-align-md="center center"] > *,
+  [layout-align-md="end center"] > *,
+  [layout-align-md="space-between center"] > *,
+  [layout-align-md="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-md="start end"],
+  [layout-align-md="center end"],
+  [layout-align-md="end end"],
+  [layout-align-md="space-between end"],
+  [layout-align-md="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-md="start stretch"],
+  [layout-align-md="center stretch"],
+  [layout-align-md="end stretch"],
+  [layout-align-md="space-between stretch"],
+  [layout-align-md="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-md] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-md-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-md-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-md-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-md-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="33"], [layout="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-md="66"], [layout="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="33"], [layout="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-md="66"], [layout="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="33"], [layout-md="row"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="row"] > [flex-md="66"], [layout-md="row"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="33"], [layout-md="column"] > [flex-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-md="column"] > [flex-md="66"], [layout-md="column"] > [flex-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-md], [layout-md="column"], [layout-md="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-md="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-md="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 1280px) {
+  [flex-order-gt-md="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-gt-md="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-gt-md="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-gt-md="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-gt-md="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-gt-md="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-gt-md="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-gt-md="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-gt-md="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-gt-md="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-gt-md="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-gt-md="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-gt-md="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-gt-md="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-gt-md="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-gt-md="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-gt-md="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-gt-md="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-gt-md="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-gt-md="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-gt-md="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-gt-md="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-gt-md="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-gt-md="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-gt-md="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-gt-md="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-gt-md="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-gt-md="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-gt-md="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-gt-md="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-gt-md="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-gt-md="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-gt-md="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-gt-md="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-gt-md="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-gt-md="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-gt-md="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-gt-md="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-gt-md="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-gt-md="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-gt-md="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-gt-md="0"] {
+    margin-left: 0%; }
+  [flex-offset-gt-md="5"] {
+    margin-left: 5%; }
+  [flex-offset-gt-md="10"] {
+    margin-left: 10%; }
+  [flex-offset-gt-md="15"] {
+    margin-left: 15%; }
+  [flex-offset-gt-md="20"] {
+    margin-left: 20%; }
+  [flex-offset-gt-md="25"] {
+    margin-left: 25%; }
+  [flex-offset-gt-md="30"] {
+    margin-left: 30%; }
+  [flex-offset-gt-md="35"] {
+    margin-left: 35%; }
+  [flex-offset-gt-md="40"] {
+    margin-left: 40%; }
+  [flex-offset-gt-md="45"] {
+    margin-left: 45%; }
+  [flex-offset-gt-md="50"] {
+    margin-left: 50%; }
+  [flex-offset-gt-md="55"] {
+    margin-left: 55%; }
+  [flex-offset-gt-md="60"] {
+    margin-left: 60%; }
+  [flex-offset-gt-md="65"] {
+    margin-left: 65%; }
+  [flex-offset-gt-md="70"] {
+    margin-left: 70%; }
+  [flex-offset-gt-md="75"] {
+    margin-left: 75%; }
+  [flex-offset-gt-md="80"] {
+    margin-left: 80%; }
+  [flex-offset-gt-md="85"] {
+    margin-left: 85%; }
+  [flex-offset-gt-md="90"] {
+    margin-left: 90%; }
+  [flex-offset-gt-md="95"] {
+    margin-left: 95%; }
+  [flex-offset-gt-md="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-gt-md="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-gt-md],
+  [layout-align-gt-md="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-gt-md="start"],
+  [layout-align-gt-md="start start"],
+  [layout-align-gt-md="start center"],
+  [layout-align-gt-md="start end"],
+  [layout-align-gt-md="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-gt-md="center"],
+  [layout-align-gt-md="center start"],
+  [layout-align-gt-md="center center"],
+  [layout-align-gt-md="center end"],
+  [layout-align-gt-md="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-gt-md="end"],
+  [layout-align-gt-md="end center"],
+  [layout-align-gt-md="end start"],
+  [layout-align-gt-md="end end"],
+  [layout-align-gt-md="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-gt-md="space-around"],
+  [layout-align-gt-md="space-around center"],
+  [layout-align-gt-md="space-around start"],
+  [layout-align-gt-md="space-around end"],
+  [layout-align-gt-md="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-gt-md="space-between"],
+  [layout-align-gt-md="space-between center"],
+  [layout-align-gt-md="space-between start"],
+  [layout-align-gt-md="space-between end"],
+  [layout-align-gt-md="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-gt-md="start start"],
+  [layout-align-gt-md="center start"],
+  [layout-align-gt-md="end start"],
+  [layout-align-gt-md="space-between start"],
+  [layout-align-gt-md="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-gt-md="start center"],
+  [layout-align-gt-md="center center"],
+  [layout-align-gt-md="end center"],
+  [layout-align-gt-md="space-between center"],
+  [layout-align-gt-md="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-gt-md="start center"] > *,
+  [layout-align-gt-md="center center"] > *,
+  [layout-align-gt-md="end center"] > *,
+  [layout-align-gt-md="space-between center"] > *,
+  [layout-align-gt-md="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-gt-md="start end"],
+  [layout-align-gt-md="center end"],
+  [layout-align-gt-md="end end"],
+  [layout-align-gt-md="space-between end"],
+  [layout-align-gt-md="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-gt-md="start stretch"],
+  [layout-align-gt-md="center stretch"],
+  [layout-align-gt-md="end stretch"],
+  [layout-align-gt-md="space-between stretch"],
+  [layout-align-gt-md="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-gt-md] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-gt-md-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-gt-md-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-md-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-md-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-gt-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-gt-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-gt-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-gt-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-gt-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-gt-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-gt-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-gt-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-gt-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-gt-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-gt-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-gt-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-gt-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-gt-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-gt-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-gt-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-gt-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-gt-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-gt-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-gt-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-gt-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="33"], [layout="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-md="66"], [layout="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="33"], [layout="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-md="66"], [layout="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="33"], [layout-gt-md="row"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="row"] > [flex-gt-md="66"], [layout-gt-md="row"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="33"], [layout-gt-md="column"] > [flex-gt-md="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-gt-md="column"] > [flex-gt-md="66"], [layout-gt-md="column"] > [flex-gt-md="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-md], [layout-gt-md="column"], [layout-gt-md="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-gt-md="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-gt-md="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 1280px) and (max-width: 1919px) {
+  [hide]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-lg]):not([show]), [hide-gt-xs]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-lg]):not([show]), [hide-gt-sm]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-lg]):not([show]), [hide-gt-md]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-lg]):not([show]) {
+    display: none; }
+  [hide-lg]:not([show-lg]):not([show]) {
+    display: none; }
+  [flex-order-lg="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-lg="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-lg="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-lg="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-lg="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-lg="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-lg="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-lg="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-lg="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-lg="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-lg="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-lg="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-lg="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-lg="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-lg="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-lg="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-lg="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-lg="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-lg="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-lg="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-lg="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-lg="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-lg="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-lg="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-lg="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-lg="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-lg="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-lg="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-lg="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-lg="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-lg="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-lg="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-lg="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-lg="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-lg="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-lg="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-lg="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-lg="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-lg="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-lg="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-lg="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-lg="0"] {
+    margin-left: 0%; }
+  [flex-offset-lg="5"] {
+    margin-left: 5%; }
+  [flex-offset-lg="10"] {
+    margin-left: 10%; }
+  [flex-offset-lg="15"] {
+    margin-left: 15%; }
+  [flex-offset-lg="20"] {
+    margin-left: 20%; }
+  [flex-offset-lg="25"] {
+    margin-left: 25%; }
+  [flex-offset-lg="30"] {
+    margin-left: 30%; }
+  [flex-offset-lg="35"] {
+    margin-left: 35%; }
+  [flex-offset-lg="40"] {
+    margin-left: 40%; }
+  [flex-offset-lg="45"] {
+    margin-left: 45%; }
+  [flex-offset-lg="50"] {
+    margin-left: 50%; }
+  [flex-offset-lg="55"] {
+    margin-left: 55%; }
+  [flex-offset-lg="60"] {
+    margin-left: 60%; }
+  [flex-offset-lg="65"] {
+    margin-left: 65%; }
+  [flex-offset-lg="70"] {
+    margin-left: 70%; }
+  [flex-offset-lg="75"] {
+    margin-left: 75%; }
+  [flex-offset-lg="80"] {
+    margin-left: 80%; }
+  [flex-offset-lg="85"] {
+    margin-left: 85%; }
+  [flex-offset-lg="90"] {
+    margin-left: 90%; }
+  [flex-offset-lg="95"] {
+    margin-left: 95%; }
+  [flex-offset-lg="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-lg="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-lg],
+  [layout-align-lg="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-lg="start"],
+  [layout-align-lg="start start"],
+  [layout-align-lg="start center"],
+  [layout-align-lg="start end"],
+  [layout-align-lg="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-lg="center"],
+  [layout-align-lg="center start"],
+  [layout-align-lg="center center"],
+  [layout-align-lg="center end"],
+  [layout-align-lg="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-lg="end"],
+  [layout-align-lg="end center"],
+  [layout-align-lg="end start"],
+  [layout-align-lg="end end"],
+  [layout-align-lg="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-lg="space-around"],
+  [layout-align-lg="space-around center"],
+  [layout-align-lg="space-around start"],
+  [layout-align-lg="space-around end"],
+  [layout-align-lg="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-lg="space-between"],
+  [layout-align-lg="space-between center"],
+  [layout-align-lg="space-between start"],
+  [layout-align-lg="space-between end"],
+  [layout-align-lg="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-lg="start start"],
+  [layout-align-lg="center start"],
+  [layout-align-lg="end start"],
+  [layout-align-lg="space-between start"],
+  [layout-align-lg="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-lg="start center"],
+  [layout-align-lg="center center"],
+  [layout-align-lg="end center"],
+  [layout-align-lg="space-between center"],
+  [layout-align-lg="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-lg="start center"] > *,
+  [layout-align-lg="center center"] > *,
+  [layout-align-lg="end center"] > *,
+  [layout-align-lg="space-between center"] > *,
+  [layout-align-lg="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-lg="start end"],
+  [layout-align-lg="center end"],
+  [layout-align-lg="end end"],
+  [layout-align-lg="space-between end"],
+  [layout-align-lg="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-lg="start stretch"],
+  [layout-align-lg="center stretch"],
+  [layout-align-lg="end stretch"],
+  [layout-align-lg="space-between stretch"],
+  [layout-align-lg="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-lg] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-lg-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-lg-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-lg-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-lg-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="33"], [layout="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-lg="66"], [layout="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="33"], [layout="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-lg="66"], [layout="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="33"], [layout-lg="row"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="row"] > [flex-lg="66"], [layout-lg="row"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="33"], [layout-lg="column"] > [flex-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-lg="column"] > [flex-lg="66"], [layout-lg="column"] > [flex-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-lg], [layout-lg="column"], [layout-lg="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-lg="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-lg="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; } }
+
+@media (min-width: 1920px) {
+  [flex-order-gt-lg="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-gt-lg="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-gt-lg="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-gt-lg="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-gt-lg="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-gt-lg="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-gt-lg="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-gt-lg="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-gt-lg="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-gt-lg="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-gt-lg="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-gt-lg="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-gt-lg="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-gt-lg="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-gt-lg="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-gt-lg="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-gt-lg="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-gt-lg="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-gt-lg="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-gt-lg="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-gt-lg="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-gt-lg="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-gt-lg="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-gt-lg="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-gt-lg="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-gt-lg="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-gt-lg="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-gt-lg="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-gt-lg="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-gt-lg="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-gt-lg="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-gt-lg="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-gt-lg="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-gt-lg="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-gt-lg="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-gt-lg="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-gt-lg="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-gt-lg="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-gt-lg="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-gt-lg="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-gt-lg="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-gt-lg="0"] {
+    margin-left: 0%; }
+  [flex-offset-gt-lg="5"] {
+    margin-left: 5%; }
+  [flex-offset-gt-lg="10"] {
+    margin-left: 10%; }
+  [flex-offset-gt-lg="15"] {
+    margin-left: 15%; }
+  [flex-offset-gt-lg="20"] {
+    margin-left: 20%; }
+  [flex-offset-gt-lg="25"] {
+    margin-left: 25%; }
+  [flex-offset-gt-lg="30"] {
+    margin-left: 30%; }
+  [flex-offset-gt-lg="35"] {
+    margin-left: 35%; }
+  [flex-offset-gt-lg="40"] {
+    margin-left: 40%; }
+  [flex-offset-gt-lg="45"] {
+    margin-left: 45%; }
+  [flex-offset-gt-lg="50"] {
+    margin-left: 50%; }
+  [flex-offset-gt-lg="55"] {
+    margin-left: 55%; }
+  [flex-offset-gt-lg="60"] {
+    margin-left: 60%; }
+  [flex-offset-gt-lg="65"] {
+    margin-left: 65%; }
+  [flex-offset-gt-lg="70"] {
+    margin-left: 70%; }
+  [flex-offset-gt-lg="75"] {
+    margin-left: 75%; }
+  [flex-offset-gt-lg="80"] {
+    margin-left: 80%; }
+  [flex-offset-gt-lg="85"] {
+    margin-left: 85%; }
+  [flex-offset-gt-lg="90"] {
+    margin-left: 90%; }
+  [flex-offset-gt-lg="95"] {
+    margin-left: 95%; }
+  [flex-offset-gt-lg="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-gt-lg="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-gt-lg],
+  [layout-align-gt-lg="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-gt-lg="start"],
+  [layout-align-gt-lg="start start"],
+  [layout-align-gt-lg="start center"],
+  [layout-align-gt-lg="start end"],
+  [layout-align-gt-lg="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-gt-lg="center"],
+  [layout-align-gt-lg="center start"],
+  [layout-align-gt-lg="center center"],
+  [layout-align-gt-lg="center end"],
+  [layout-align-gt-lg="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-gt-lg="end"],
+  [layout-align-gt-lg="end center"],
+  [layout-align-gt-lg="end start"],
+  [layout-align-gt-lg="end end"],
+  [layout-align-gt-lg="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-gt-lg="space-around"],
+  [layout-align-gt-lg="space-around center"],
+  [layout-align-gt-lg="space-around start"],
+  [layout-align-gt-lg="space-around end"],
+  [layout-align-gt-lg="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-gt-lg="space-between"],
+  [layout-align-gt-lg="space-between center"],
+  [layout-align-gt-lg="space-between start"],
+  [layout-align-gt-lg="space-between end"],
+  [layout-align-gt-lg="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-gt-lg="start start"],
+  [layout-align-gt-lg="center start"],
+  [layout-align-gt-lg="end start"],
+  [layout-align-gt-lg="space-between start"],
+  [layout-align-gt-lg="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-gt-lg="start center"],
+  [layout-align-gt-lg="center center"],
+  [layout-align-gt-lg="end center"],
+  [layout-align-gt-lg="space-between center"],
+  [layout-align-gt-lg="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-gt-lg="start center"] > *,
+  [layout-align-gt-lg="center center"] > *,
+  [layout-align-gt-lg="end center"] > *,
+  [layout-align-gt-lg="space-between center"] > *,
+  [layout-align-gt-lg="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-gt-lg="start end"],
+  [layout-align-gt-lg="center end"],
+  [layout-align-gt-lg="end end"],
+  [layout-align-gt-lg="space-between end"],
+  [layout-align-gt-lg="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-gt-lg="start stretch"],
+  [layout-align-gt-lg="center stretch"],
+  [layout-align-gt-lg="end stretch"],
+  [layout-align-gt-lg="space-between stretch"],
+  [layout-align-gt-lg="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-gt-lg] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-gt-lg-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-gt-lg-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-lg-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-gt-lg-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-gt-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-gt-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-gt-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-gt-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-gt-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-gt-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-gt-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-gt-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-gt-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-gt-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-gt-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-gt-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-gt-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-gt-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-gt-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-gt-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-gt-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-gt-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-gt-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-gt-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-gt-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="33"], [layout="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-gt-lg="66"], [layout="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="33"], [layout="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-gt-lg="66"], [layout="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="33"], [layout-gt-lg="row"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="row"] > [flex-gt-lg="66"], [layout-gt-lg="row"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="33"], [layout-gt-lg="column"] > [flex-gt-lg="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-gt-lg="column"] > [flex-gt-lg="66"], [layout-gt-lg="column"] > [flex-gt-lg="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-gt-lg], [layout-gt-lg="column"], [layout-gt-lg="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-gt-lg="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-gt-lg="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; }
+  [flex-order-xl="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-xl="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-xl="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-xl="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-xl="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-xl="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-xl="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-xl="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-xl="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-xl="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-xl="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-xl="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-xl="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-xl="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-xl="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-xl="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-xl="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-xl="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-xl="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-xl="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-xl="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-xl="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-xl="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-xl="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-xl="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-xl="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-xl="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-xl="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-xl="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-xl="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-xl="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-xl="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-xl="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-xl="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-xl="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-xl="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-xl="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-xl="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-xl="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-xl="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-xl="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-xl="0"] {
+    margin-left: 0%; }
+  [flex-offset-xl="5"] {
+    margin-left: 5%; }
+  [flex-offset-xl="10"] {
+    margin-left: 10%; }
+  [flex-offset-xl="15"] {
+    margin-left: 15%; }
+  [flex-offset-xl="20"] {
+    margin-left: 20%; }
+  [flex-offset-xl="25"] {
+    margin-left: 25%; }
+  [flex-offset-xl="30"] {
+    margin-left: 30%; }
+  [flex-offset-xl="35"] {
+    margin-left: 35%; }
+  [flex-offset-xl="40"] {
+    margin-left: 40%; }
+  [flex-offset-xl="45"] {
+    margin-left: 45%; }
+  [flex-offset-xl="50"] {
+    margin-left: 50%; }
+  [flex-offset-xl="55"] {
+    margin-left: 55%; }
+  [flex-offset-xl="60"] {
+    margin-left: 60%; }
+  [flex-offset-xl="65"] {
+    margin-left: 65%; }
+  [flex-offset-xl="70"] {
+    margin-left: 70%; }
+  [flex-offset-xl="75"] {
+    margin-left: 75%; }
+  [flex-offset-xl="80"] {
+    margin-left: 80%; }
+  [flex-offset-xl="85"] {
+    margin-left: 85%; }
+  [flex-offset-xl="90"] {
+    margin-left: 90%; }
+  [flex-offset-xl="95"] {
+    margin-left: 95%; }
+  [flex-offset-xl="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-xl="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-xl],
+  [layout-align-xl="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-xl="start"],
+  [layout-align-xl="start start"],
+  [layout-align-xl="start center"],
+  [layout-align-xl="start end"],
+  [layout-align-xl="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-xl="center"],
+  [layout-align-xl="center start"],
+  [layout-align-xl="center center"],
+  [layout-align-xl="center end"],
+  [layout-align-xl="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-xl="end"],
+  [layout-align-xl="end center"],
+  [layout-align-xl="end start"],
+  [layout-align-xl="end end"],
+  [layout-align-xl="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-xl="space-around"],
+  [layout-align-xl="space-around center"],
+  [layout-align-xl="space-around start"],
+  [layout-align-xl="space-around end"],
+  [layout-align-xl="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-xl="space-between"],
+  [layout-align-xl="space-between center"],
+  [layout-align-xl="space-between start"],
+  [layout-align-xl="space-between end"],
+  [layout-align-xl="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-xl="start start"],
+  [layout-align-xl="center start"],
+  [layout-align-xl="end start"],
+  [layout-align-xl="space-between start"],
+  [layout-align-xl="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-xl="start center"],
+  [layout-align-xl="center center"],
+  [layout-align-xl="end center"],
+  [layout-align-xl="space-between center"],
+  [layout-align-xl="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-xl="start center"] > *,
+  [layout-align-xl="center center"] > *,
+  [layout-align-xl="end center"] > *,
+  [layout-align-xl="space-between center"] > *,
+  [layout-align-xl="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-xl="start end"],
+  [layout-align-xl="center end"],
+  [layout-align-xl="end end"],
+  [layout-align-xl="space-between end"],
+  [layout-align-xl="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-xl="start stretch"],
+  [layout-align-xl="center stretch"],
+  [layout-align-xl="end stretch"],
+  [layout-align-xl="space-between stretch"],
+  [layout-align-xl="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-xl] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-xl-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-xl-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-xl-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-xl-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-xl="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-xl="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-xl="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-xl="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-xl="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-xl="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-xl="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-xl="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-xl="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-xl="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-xl="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-xl="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-xl="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-xl="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-xl="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-xl="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-xl="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-xl="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-xl="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-xl="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-xl="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="33"], [layout="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-xl="66"], [layout="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="33"], [layout="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-xl="66"], [layout="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="33"], [layout-xl="row"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="row"] > [flex-xl="66"], [layout-xl="row"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="33"], [layout-xl="column"] > [flex-xl="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-xl="column"] > [flex-xl="66"], [layout-xl="column"] > [flex-xl="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-xl], [layout-xl="column"], [layout-xl="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-xl="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-xl="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; }
+  [hide]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show-xl]):not([show]), [hide-gt-xs]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show-xl]):not([show]), [hide-gt-sm]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show-xl]):not([show]), [hide-gt-md]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show-xl]):not([show]), [hide-gt-lg]:not([show-gt-xs]):not([show-gt-sm]):not([show-gt-md]):not([show-gt-lg]):not([show-xl]):not([show]) {
+    display: none; }
+  [hide-xl]:not([show-xl]):not([show-gt-lg]):not([show]) {
+    display: none; } }
+
+@media print {
+  [flex-order-print="-20"] {
+    -webkit-box-ordinal-group: -19;
+    -webkit-order: -20;
+    order: -20; }
+  [flex-order-print="-19"] {
+    -webkit-box-ordinal-group: -18;
+    -webkit-order: -19;
+    order: -19; }
+  [flex-order-print="-18"] {
+    -webkit-box-ordinal-group: -17;
+    -webkit-order: -18;
+    order: -18; }
+  [flex-order-print="-17"] {
+    -webkit-box-ordinal-group: -16;
+    -webkit-order: -17;
+    order: -17; }
+  [flex-order-print="-16"] {
+    -webkit-box-ordinal-group: -15;
+    -webkit-order: -16;
+    order: -16; }
+  [flex-order-print="-15"] {
+    -webkit-box-ordinal-group: -14;
+    -webkit-order: -15;
+    order: -15; }
+  [flex-order-print="-14"] {
+    -webkit-box-ordinal-group: -13;
+    -webkit-order: -14;
+    order: -14; }
+  [flex-order-print="-13"] {
+    -webkit-box-ordinal-group: -12;
+    -webkit-order: -13;
+    order: -13; }
+  [flex-order-print="-12"] {
+    -webkit-box-ordinal-group: -11;
+    -webkit-order: -12;
+    order: -12; }
+  [flex-order-print="-11"] {
+    -webkit-box-ordinal-group: -10;
+    -webkit-order: -11;
+    order: -11; }
+  [flex-order-print="-10"] {
+    -webkit-box-ordinal-group: -9;
+    -webkit-order: -10;
+    order: -10; }
+  [flex-order-print="-9"] {
+    -webkit-box-ordinal-group: -8;
+    -webkit-order: -9;
+    order: -9; }
+  [flex-order-print="-8"] {
+    -webkit-box-ordinal-group: -7;
+    -webkit-order: -8;
+    order: -8; }
+  [flex-order-print="-7"] {
+    -webkit-box-ordinal-group: -6;
+    -webkit-order: -7;
+    order: -7; }
+  [flex-order-print="-6"] {
+    -webkit-box-ordinal-group: -5;
+    -webkit-order: -6;
+    order: -6; }
+  [flex-order-print="-5"] {
+    -webkit-box-ordinal-group: -4;
+    -webkit-order: -5;
+    order: -5; }
+  [flex-order-print="-4"] {
+    -webkit-box-ordinal-group: -3;
+    -webkit-order: -4;
+    order: -4; }
+  [flex-order-print="-3"] {
+    -webkit-box-ordinal-group: -2;
+    -webkit-order: -3;
+    order: -3; }
+  [flex-order-print="-2"] {
+    -webkit-box-ordinal-group: -1;
+    -webkit-order: -2;
+    order: -2; }
+  [flex-order-print="-1"] {
+    -webkit-box-ordinal-group: 0;
+    -webkit-order: -1;
+    order: -1; }
+  [flex-order-print="0"] {
+    -webkit-box-ordinal-group: 1;
+    -webkit-order: 0;
+    order: 0; }
+  [flex-order-print="1"] {
+    -webkit-box-ordinal-group: 2;
+    -webkit-order: 1;
+    order: 1; }
+  [flex-order-print="2"] {
+    -webkit-box-ordinal-group: 3;
+    -webkit-order: 2;
+    order: 2; }
+  [flex-order-print="3"] {
+    -webkit-box-ordinal-group: 4;
+    -webkit-order: 3;
+    order: 3; }
+  [flex-order-print="4"] {
+    -webkit-box-ordinal-group: 5;
+    -webkit-order: 4;
+    order: 4; }
+  [flex-order-print="5"] {
+    -webkit-box-ordinal-group: 6;
+    -webkit-order: 5;
+    order: 5; }
+  [flex-order-print="6"] {
+    -webkit-box-ordinal-group: 7;
+    -webkit-order: 6;
+    order: 6; }
+  [flex-order-print="7"] {
+    -webkit-box-ordinal-group: 8;
+    -webkit-order: 7;
+    order: 7; }
+  [flex-order-print="8"] {
+    -webkit-box-ordinal-group: 9;
+    -webkit-order: 8;
+    order: 8; }
+  [flex-order-print="9"] {
+    -webkit-box-ordinal-group: 10;
+    -webkit-order: 9;
+    order: 9; }
+  [flex-order-print="10"] {
+    -webkit-box-ordinal-group: 11;
+    -webkit-order: 10;
+    order: 10; }
+  [flex-order-print="11"] {
+    -webkit-box-ordinal-group: 12;
+    -webkit-order: 11;
+    order: 11; }
+  [flex-order-print="12"] {
+    -webkit-box-ordinal-group: 13;
+    -webkit-order: 12;
+    order: 12; }
+  [flex-order-print="13"] {
+    -webkit-box-ordinal-group: 14;
+    -webkit-order: 13;
+    order: 13; }
+  [flex-order-print="14"] {
+    -webkit-box-ordinal-group: 15;
+    -webkit-order: 14;
+    order: 14; }
+  [flex-order-print="15"] {
+    -webkit-box-ordinal-group: 16;
+    -webkit-order: 15;
+    order: 15; }
+  [flex-order-print="16"] {
+    -webkit-box-ordinal-group: 17;
+    -webkit-order: 16;
+    order: 16; }
+  [flex-order-print="17"] {
+    -webkit-box-ordinal-group: 18;
+    -webkit-order: 17;
+    order: 17; }
+  [flex-order-print="18"] {
+    -webkit-box-ordinal-group: 19;
+    -webkit-order: 18;
+    order: 18; }
+  [flex-order-print="19"] {
+    -webkit-box-ordinal-group: 20;
+    -webkit-order: 19;
+    order: 19; }
+  [flex-order-print="20"] {
+    -webkit-box-ordinal-group: 21;
+    -webkit-order: 20;
+    order: 20; }
+  [flex-offset-print="0"] {
+    margin-left: 0%; }
+  [flex-offset-print="5"] {
+    margin-left: 5%; }
+  [flex-offset-print="10"] {
+    margin-left: 10%; }
+  [flex-offset-print="15"] {
+    margin-left: 15%; }
+  [flex-offset-print="20"] {
+    margin-left: 20%; }
+  [flex-offset-print="25"] {
+    margin-left: 25%; }
+  [flex-offset-print="30"] {
+    margin-left: 30%; }
+  [flex-offset-print="35"] {
+    margin-left: 35%; }
+  [flex-offset-print="40"] {
+    margin-left: 40%; }
+  [flex-offset-print="45"] {
+    margin-left: 45%; }
+  [flex-offset-print="50"] {
+    margin-left: 50%; }
+  [flex-offset-print="55"] {
+    margin-left: 55%; }
+  [flex-offset-print="60"] {
+    margin-left: 60%; }
+  [flex-offset-print="65"] {
+    margin-left: 65%; }
+  [flex-offset-print="70"] {
+    margin-left: 70%; }
+  [flex-offset-print="75"] {
+    margin-left: 75%; }
+  [flex-offset-print="80"] {
+    margin-left: 80%; }
+  [flex-offset-print="85"] {
+    margin-left: 85%; }
+  [flex-offset-print="90"] {
+    margin-left: 90%; }
+  [flex-offset-print="95"] {
+    margin-left: 95%; }
+  [flex-offset-print="33"] {
+    margin-left: calc(100% / 3); }
+  [flex-offset-print="66"] {
+    margin-left: calc(200% / 3); }
+  [layout-align-print],
+  [layout-align-print="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start;
+    -webkit-align-content: stretch;
+    align-content: stretch;
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch; }
+  [layout-align-print="start"],
+  [layout-align-print="start start"],
+  [layout-align-print="start center"],
+  [layout-align-print="start end"],
+  [layout-align-print="start stretch"] {
+    -webkit-box-pack: start;
+    -webkit-justify-content: flex-start;
+    justify-content: flex-start; }
+  [layout-align-print="center"],
+  [layout-align-print="center start"],
+  [layout-align-print="center center"],
+  [layout-align-print="center end"],
+  [layout-align-print="center stretch"] {
+    -webkit-box-pack: center;
+    -webkit-justify-content: center;
+    justify-content: center; }
+  [layout-align-print="end"],
+  [layout-align-print="end center"],
+  [layout-align-print="end start"],
+  [layout-align-print="end end"],
+  [layout-align-print="end stretch"] {
+    -webkit-box-pack: end;
+    -webkit-justify-content: flex-end;
+    justify-content: flex-end; }
+  [layout-align-print="space-around"],
+  [layout-align-print="space-around center"],
+  [layout-align-print="space-around start"],
+  [layout-align-print="space-around end"],
+  [layout-align-print="space-around stretch"] {
+    -webkit-justify-content: space-around;
+    justify-content: space-around; }
+  [layout-align-print="space-between"],
+  [layout-align-print="space-between center"],
+  [layout-align-print="space-between start"],
+  [layout-align-print="space-between end"],
+  [layout-align-print="space-between stretch"] {
+    -webkit-box-pack: justify;
+    -webkit-justify-content: space-between;
+    justify-content: space-between; }
+  [layout-align-print="start start"],
+  [layout-align-print="center start"],
+  [layout-align-print="end start"],
+  [layout-align-print="space-between start"],
+  [layout-align-print="space-around start"] {
+    -webkit-box-align: start;
+    -webkit-align-items: flex-start;
+    -ms-grid-row-align: flex-start;
+    align-items: flex-start;
+    -webkit-align-content: flex-start;
+    align-content: flex-start; }
+  [layout-align-print="start center"],
+  [layout-align-print="center center"],
+  [layout-align-print="end center"],
+  [layout-align-print="space-between center"],
+  [layout-align-print="space-around center"] {
+    -webkit-box-align: center;
+    -webkit-align-items: center;
+    -ms-grid-row-align: center;
+    align-items: center;
+    -webkit-align-content: center;
+    align-content: center;
+    max-width: 100%; }
+  [layout-align-print="start center"] > *,
+  [layout-align-print="center center"] > *,
+  [layout-align-print="end center"] > *,
+  [layout-align-print="space-between center"] > *,
+  [layout-align-print="space-around center"] > * {
+    max-width: 100%;
+    box-sizing: border-box; }
+  [layout-align-print="start end"],
+  [layout-align-print="center end"],
+  [layout-align-print="end end"],
+  [layout-align-print="space-between end"],
+  [layout-align-print="space-around end"] {
+    -webkit-box-align: end;
+    -webkit-align-items: flex-end;
+    -ms-grid-row-align: flex-end;
+    align-items: flex-end;
+    -webkit-align-content: flex-end;
+    align-content: flex-end; }
+  [layout-align-print="start stretch"],
+  [layout-align-print="center stretch"],
+  [layout-align-print="end stretch"],
+  [layout-align-print="space-between stretch"],
+  [layout-align-print="space-around stretch"] {
+    -webkit-box-align: stretch;
+    -webkit-align-items: stretch;
+    -ms-grid-row-align: stretch;
+    align-items: stretch;
+    -webkit-align-content: stretch;
+    align-content: stretch; }
+  [flex-print] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1;
+    flex: 1;
+    box-sizing: border-box; }
+  [flex-print-grow] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    box-sizing: border-box; }
+  [flex-print-initial] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 1 auto;
+    flex: 0 1 auto;
+    box-sizing: border-box; }
+  [flex-print-auto] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 auto;
+    flex: 1 1 auto;
+    box-sizing: border-box; }
+  [flex-print-none] {
+    -webkit-box-flex: 0;
+    -webkit-flex: 0 0 auto;
+    flex: 0 0 auto;
+    box-sizing: border-box; }
+  [flex-print="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 0%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="0"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 0%;
+    flex: 1 1 0%;
+    max-width: 100%;
+    max-height: 0%;
+    box-sizing: border-box; }
+  [flex-print="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 5%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="5"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 5%;
+    flex: 1 1 5%;
+    max-width: 100%;
+    max-height: 5%;
+    box-sizing: border-box; }
+  [flex-print="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 10%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="10"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 10%;
+    flex: 1 1 10%;
+    max-width: 100%;
+    max-height: 10%;
+    box-sizing: border-box; }
+  [flex-print="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 15%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="15"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 15%;
+    flex: 1 1 15%;
+    max-width: 100%;
+    max-height: 15%;
+    box-sizing: border-box; }
+  [flex-print="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 20%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="20"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 20%;
+    flex: 1 1 20%;
+    max-width: 100%;
+    max-height: 20%;
+    box-sizing: border-box; }
+  [flex-print="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 25%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="25"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 25%;
+    flex: 1 1 25%;
+    max-width: 100%;
+    max-height: 25%;
+    box-sizing: border-box; }
+  [flex-print="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 30%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="30"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 30%;
+    flex: 1 1 30%;
+    max-width: 100%;
+    max-height: 30%;
+    box-sizing: border-box; }
+  [flex-print="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 35%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="35"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 35%;
+    flex: 1 1 35%;
+    max-width: 100%;
+    max-height: 35%;
+    box-sizing: border-box; }
+  [flex-print="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 40%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="40"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 40%;
+    flex: 1 1 40%;
+    max-width: 100%;
+    max-height: 40%;
+    box-sizing: border-box; }
+  [flex-print="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 45%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="45"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 45%;
+    flex: 1 1 45%;
+    max-width: 100%;
+    max-height: 45%;
+    box-sizing: border-box; }
+  [flex-print="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 50%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="50"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 50%;
+    flex: 1 1 50%;
+    max-width: 100%;
+    max-height: 50%;
+    box-sizing: border-box; }
+  [flex-print="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 55%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="55"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 55%;
+    flex: 1 1 55%;
+    max-width: 100%;
+    max-height: 55%;
+    box-sizing: border-box; }
+  [flex-print="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 60%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="60"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 60%;
+    flex: 1 1 60%;
+    max-width: 100%;
+    max-height: 60%;
+    box-sizing: border-box; }
+  [flex-print="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 65%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="65"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 65%;
+    flex: 1 1 65%;
+    max-width: 100%;
+    max-height: 65%;
+    box-sizing: border-box; }
+  [flex-print="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 70%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="70"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 70%;
+    flex: 1 1 70%;
+    max-width: 100%;
+    max-height: 70%;
+    box-sizing: border-box; }
+  [flex-print="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 75%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="75"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 75%;
+    flex: 1 1 75%;
+    max-width: 100%;
+    max-height: 75%;
+    box-sizing: border-box; }
+  [flex-print="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 80%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="80"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 80%;
+    flex: 1 1 80%;
+    max-width: 100%;
+    max-height: 80%;
+    box-sizing: border-box; }
+  [flex-print="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 85%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="85"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 85%;
+    flex: 1 1 85%;
+    max-width: 100%;
+    max-height: 85%;
+    box-sizing: border-box; }
+  [flex-print="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 90%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="90"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 90%;
+    flex: 1 1 90%;
+    max-width: 100%;
+    max-height: 90%;
+    box-sizing: border-box; }
+  [flex-print="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 95%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="95"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 95%;
+    flex: 1 1 95%;
+    max-width: 100%;
+    max-height: 95%;
+    box-sizing: border-box; }
+  [flex-print="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="33"], [layout="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="row"] > [flex-print="66"], [layout="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="33"], [layout="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout="column"] > [flex-print="66"], [layout="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="100"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 100%;
+    flex: 1 1 100%;
+    max-width: 100%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="33"], [layout-print="row"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 33.33%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="row"] > [flex-print="66"], [layout-print="row"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 66.66%;
+    max-height: 100%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="33"], [layout-print="column"] > [flex-print="33"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 33.33%;
+    flex: 1 1 33.33%;
+    max-width: 100%;
+    max-height: 33.33%;
+    box-sizing: border-box; }
+  [layout-print="column"] > [flex-print="66"], [layout-print="column"] > [flex-print="66"] {
+    -webkit-box-flex: 1;
+    -webkit-flex: 1 1 66.66%;
+    flex: 1 1 66.66%;
+    max-width: 100%;
+    max-height: 66.66%;
+    box-sizing: border-box; }
+  [layout-print], [layout-print="column"], [layout-print="row"] {
+    box-sizing: border-box;
+    display: -webkit-box;
+    display: -webkit-flex;
+    display: flex; }
+  [layout-print="column"] {
+    -webkit-box-orient: vertical;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: column;
+    flex-direction: column; }
+  [layout-print="row"] {
+    -webkit-box-orient: horizontal;
+    -webkit-box-direction: normal;
+    -webkit-flex-direction: row;
+    flex-direction: row; }
+  [hide-print]:not([show-print]):not([show]) {
+    display: none; } }
-- 
2.10.2


From ec52dc1743acd2e91bb3f39de80aca2884e7bf74 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 18 Oct 2016 16:59:32 +0300
Subject: [PATCH 206/304] Step 19.32: Added import in the main scss file

---
 client/main.scss | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/main.scss b/client/main.scss
index c9bbcf0..182630b 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -22,3 +22,5 @@ body {
   width: 450px;
   height: 450px;
 }
+
+@import "./imports/material-layout";
\ No newline at end of file
-- 
2.10.2


From 53e325b7c15fd0438c48d7e6fce1f504476db327 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 18 Oct 2016 17:11:14 +0300
Subject: [PATCH 207/304] Step 19.33: Added missing CSS

---
 client/main.scss | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/main.scss b/client/main.scss
index 182630b..0fd8fdd 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -23,4 +23,8 @@ body {
   height: 450px;
 }
 
+.md-whiteframe-z2 {
+  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
+}
+
 @import "./imports/material-layout";
\ No newline at end of file
-- 
2.10.2


From d02eb880d5b379cf669c8fd2aae3842022d0ac81 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:53 -0200
Subject: [PATCH 208/304] Step 19: angular-material and custom Angular auth
 forms

---
 manuals/templates/step19.md |  203 ++++++
 manuals/views/step19.md     | 1550 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1753 insertions(+)
 create mode 100644 manuals/templates/step19.md
 create mode 100644 manuals/views/step19.md

diff --git a/manuals/templates/step19.md b/manuals/templates/step19.md
new file mode 100644
index 0000000..7fc5095
--- /dev/null
+++ b/manuals/templates/step19.md
@@ -0,0 +1,203 @@
+In this chapter we will add angular2-material to our project, and update some style and layout in the project.
+
+Angular2-material documentation of each component can be found [here](https://github.com/angular/material2/tree/master/src/components).
+
+# Removing Bootstrap 4
+
+First, let's remove our previous framework (Bootstrap) by running:
+
+    $ meteor npm uninstall --save bootstrap
+
+And let's remove the import from the `main.sass` file:
+
+{{{diff_step 19.2}}}
+
+# Adding angular2-material
+
+Now we need to add angular2-material to our project - so let's do that.
+
+Run the following command in your Terminal:
+
+    $ meteor npm install @angular/material@2.0.0-alpha.9
+
+Now let's load the module into our `NgModule`:
+
+{{{diff_step 19.4}}}
+
+Like we did in the previous chapter - let's take care of the navigation bar first.
+
+We will use directives and components from Angular2-Material - such as `md-toolbar`.
+
+Let's use it in the app component's template:
+
+{{{diff_step 19.5}}}
+
+And let's create a stylesheet file for the `AppComponent`:
+
+{{{diff_step 19.6}}}
+
+And import it into our Component:
+
+{{{diff_step 19.7}}}
+
+And let's add `.fill-remaining-space` CSS class we used, and let's create a Angular 2 Material theme with the colors we like (full documentation about themes is [here](https://github.com/angular/material2/blob/master/docs/theming.md))
+
+{{{diff_step 19.8}}}
+
+# PartiesForm component
+
+Let's replace the `label` and the `input` with simply the `md-input` and `md-checkbox` and make the `button` look material:
+
+{{{diff_step 19.9}}}
+
+We use the `mdInput` component which is a wrapper for regular HTML input with style and cool layout.
+
+Now let's add CSS styles:
+
+{{{diff_step 19.10}}}
+
+Now we need to make some changes in our Component's code - we will inject the user (using `InjectUser`), import the new stylesheet and add the ability to set the new party location using a Google map Component:
+
+{{{diff_step 19.11}}}
+
+# PartiesList component
+
+PartiesForm component is done, so we can move one level higher in the component's tree. Time for the list of parties:
+
+{{{diff_step 19.12}}}
+
+To make it all look so much better, let's add couple of rules to css:
+
+{{{diff_step 19.13}}}
+
+# PartyDetails component
+
+We also need to update the PartyDetails component:
+
+{{{diff_step 19.14}}}
+
+And let's update the styles:
+
+{{{diff_step 19.15}}}
+
+> In this point, you can also remove the `colors.scss` - it's no longer in use!
+
+# Custom Authentication Components
+
+Our next step will replace the `login-buttons` which is a simple and non-styled login/signup component - we will add our custom authentication component with custom style.
+
+First, let's remove the login-buttons from the navigation bar, and replace it with custom buttons for Login / Signup / Logout.
+
+We will also add `routerLink` to each button, and add logic to hide/show buttons according to the user's login state:
+
+{{{diff_step 19.16}}}
+
+Let's use `InjectUser` decorator, just like we did in one of the previous chapters.
+
+{{{diff_step 19.17}}}
+
+As you can see, we used `DisplayNamePipe` in the view so we have to import it.
+
+We also implemented `logout()` method with `Meteor.logout()`. It is, like you probably guessed, to log out the current user.
+
+Now we can move on to create three new components.
+
+### Login component
+
+First component, is to log in user to the app.
+
+We will need a form and the login method, so let's implement them:
+
+{{{diff_step 19.18}}}
+
+> Notice that we used `NgZone` in our constructor in order to get it from the Dependency Injection, and we used it before we update the result of the login action - we need to do this because the Meteor world does not update Angular's world, and we need to tell Angular when to update the view since the async result of the login action comes from Meteor's context.
+
+You previously created a form by yourself so there's no need to explain the whole process once again.
+
+About the login method.
+
+Meteor's accounts system has a method called `loginWithPassword`, you can read more about it [here](http://docs.meteor.com/api/accounts.html#Meteor-loginWithPassword).
+
+We need to provide two values, a email and a password. We could get them from the form.
+
+In the callback of Meteor.loginWithPassword's method, we have the redirection to the homepage on success and we're saving the error message if login process failed.
+
+Let's add the view:
+
+{{{diff_step 19.19}}}
+
+We also need to define the `/login` route:
+
+{{{diff_step 19.20}}}
+
+And now let's create an index file for the auth files:
+
+{{{diff_step 19.21}}}
+
+And import the exposed Array into the `NgModule`:
+
+{{{diff_step 19.22}}}
+
+### Signup component
+
+The Signup component looks pretty much the same as the Login component. We just use different method, `Accounts.createUser()`. Here's [the link](http://docs.meteor.com/api/passwords.html#Accounts-createUser) to the documentation.
+
+{{{diff_step 19.23}}}
+
+And the view:
+
+{{{diff_step 19.24}}}
+
+And add it to the index file:
+
+{{{diff_step 19.25}}}
+
+And the `/signup` route:
+
+{{{diff_step 19.26}}}
+
+### Recover component
+
+This component is helfup when a user forgets his password. We'll use `Accounts.forgotPassword` method:
+
+{{{diff_step 19.27}}}
+
+Create the view:
+
+{{{diff_step 19.28}}}
+
+And add it to the index file:
+
+{{{diff_step 19.29}}}
+
+And add the `/reset` route:
+
+{{{diff_step 19.30}}}
+
+That's it! we just implemented our own authentication components using Meteor's Accounts API and Angular2-Material!
+
+> Note that the recovery email won't be sent to the actual email address, since you need to configure `email` package to work with your email provider. you can read more about it [here](https://docs.meteor.com/api/email.html).
+
+# Layout and Flex
+
+In order to use flex and layout that defined in Material, we need to add a bug CSS file into our project, that defined CSS classes for `flex` and `layout`.
+
+You can find the CSS file content [here](https://github.com/Urigo/meteor-angular2.0-socially/blob/246f008895980e63ab19f19c6b184f4eb632723c/client/imports/material-layout.scss).
+
+So let's copy it's content and add it to `meteor-angular2.0-socially/client/imports/material-layout.scss`.
+
+Now let's add it to the main SCSS file imports:
+
+{{{diff_step 19.32}}}
+
+And let's add another CSS class missing:
+
+{{{diff_step 19.33}}}
+
+> The import of this CSS file is temporary, and we will need to use it only because `angular2-material` is still in beta and not implemented all the features.
+
+# Summary
+
+In this chapter we replaced Boostrap4 with Angular2-Material, and updated all the view and layout to match the component we got from it.
+
+We also learnt how to use Meteor's Accounts API and how to implement authentication view and components, and how to connect them to our app.
diff --git a/manuals/views/step19.md b/manuals/views/step19.md
new file mode 100644
index 0000000..3ede799
--- /dev/null
+++ b/manuals/views/step19.md
@@ -0,0 +1,1550 @@
+[{]: <region> (header)
+# Step 19: angular-material and custom Angular auth forms
+[}]: #
+[{]: <region> (body)
+In this chapter we will add angular2-material to our project, and update some style and layout in the project.
+
+Angular2-material documentation of each component can be found [here](https://github.com/angular/material2/tree/master/src/components).
+
+# Removing Bootstrap 4
+
+First, let's remove our previous framework (Bootstrap) by running:
+
+    $ meteor npm uninstall --save bootstrap
+
+And let's remove the import from the `main.sass` file:
+
+[{]: <helper> (diff_step 19.2)
+#### Step 19.2: Remove bootstrap scss
+
+##### Changed client/main.scss
+```diff
+@@ -1,4 +1,3 @@
+-┊1┊ ┊@import "../node_modules/bootstrap/scss/bootstrap.scss";
+ ┊2┊1┊@import "./imports/app/colors.scss";
+ ┊3┊2┊
+ ┊4┊3┊html, body {
+```
+[}]: #
+
+# Adding angular2-material
+
+Now we need to add angular2-material to our project - so let's do that.
+
+Run the following command in your Terminal:
+
+    $ meteor npm install @angular/material@2.0.0-alpha.9
+
+Now let's load the module into our `NgModule`:
+
+[{]: <helper> (diff_step 19.4)
+#### Step 19.4: Imported the angular2-material modules
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -10,6 +10,7 @@
+ ┊10┊10┊import { routes, ROUTES_PROVIDERS } from './app.routes';
+ ┊11┊11┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊12┊12┊import { SHARED_DECLARATIONS } from './shared';
++┊  ┊13┊import { MaterialModule } from "@angular/material";
+ ┊13┊14┊
+ ┊14┊15┊@NgModule({
+ ┊15┊16┊  imports: [
+```
+```diff
+@@ -21,7 +22,8 @@
+ ┊21┊22┊    Ng2PaginationModule,
+ ┊22┊23┊    AgmCoreModule.forRoot({
+ ┊23┊24┊      apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
+-┊24┊  ┊    })
++┊  ┊25┊    }),
++┊  ┊26┊    MaterialModule.forRoot()
+ ┊25┊27┊  ],
+ ┊26┊28┊  declarations: [
+ ┊27┊29┊    AppComponent,
+```
+[}]: #
+
+Like we did in the previous chapter - let's take care of the navigation bar first.
+
+We will use directives and components from Angular2-Material - such as `md-toolbar`.
+
+Let's use it in the app component's template:
+
+[{]: <helper> (diff_step 19.5)
+#### Step 19.5: Change the nav bar and the layout
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,7 +1,6 @@
+-┊1┊ ┊<nav class="navbar navbar-light bg-faded">
+-┊2┊ ┊  <a class="navbar-brand" href="#">Socially</a>
+-┊3┊ ┊  <login-buttons class="pull-right"></login-buttons>
+-┊4┊ ┊</nav>
+-┊5┊ ┊<div class="container-fluid">
+-┊6┊ ┊  <router-outlet></router-outlet>
+-┊7┊ ┊</div>🚫↵
++┊ ┊1┊<md-toolbar color="primary">
++┊ ┊2┊  <a routerLink="/" class="toolbar-title">Socially2</a>
++┊ ┊3┊  <span class="fill-remaining-space"></span>
++┊ ┊4┊  <login-buttons></login-buttons>
++┊ ┊5┊</md-toolbar>
++┊ ┊6┊<router-outlet></router-outlet>🚫↵
+```
+[}]: #
+
+And let's create a stylesheet file for the `AppComponent`:
+
+[{]: <helper> (diff_step 19.6)
+#### Step 19.6: Added app component style file
+
+##### Added client/imports/app/app.component.scss
+```diff
+@@ -0,0 +1,8 @@
++┊ ┊1┊.toolbar-title {
++┊ ┊2┊  text-decoration: none;
++┊ ┊3┊  color: white;
++┊ ┊4┊}
++┊ ┊5┊
++┊ ┊6┊md-toolbar {
++┊ ┊7┊  box-shadow: 0 2px 5px 0 rgba(0,0,0,0.26);
++┊ ┊8┊}🚫↵
+```
+[}]: #
+
+And import it into our Component:
+
+[{]: <helper> (diff_step 19.7)
+#### Step 19.7: Import app component style
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -1,9 +1,11 @@
+ ┊ 1┊ 1┊import { Component } from '@angular/core';
+ ┊ 2┊ 2┊
+ ┊ 3┊ 3┊import template from './app.component.html';
++┊  ┊ 4┊import style from './app.component.scss';
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊@Component({
+ ┊ 6┊ 7┊  selector: 'app',
+-┊ 7┊  ┊  template
++┊  ┊ 8┊  template,
++┊  ┊ 9┊  styles: [ style ]
+ ┊ 8┊10┊})
+ ┊ 9┊11┊export class AppComponent {}
+```
+[}]: #
+
+And let's add `.fill-remaining-space` CSS class we used, and let's create a Angular 2 Material theme with the colors we like (full documentation about themes is [here](https://github.com/angular/material2/blob/master/docs/theming.md))
+
+[{]: <helper> (diff_step 19.8)
+#### Step 19.8: Added CSS and material theme definition
+
+##### Changed client/main.scss
+```diff
+@@ -1,32 +1,24 @@
+-┊ 1┊  ┊@import "./imports/app/colors.scss";
++┊  ┊ 1┊@import '../node_modules/@angular/material/core/theming/all-theme';
+ ┊ 2┊ 2┊
+-┊ 3┊  ┊html, body {
+-┊ 4┊  ┊  height: 100%;
++┊  ┊ 3┊@include md-core();
++┊  ┊ 4┊$app-primary: md-palette($md-light-blue, 500, 100, 700);
++┊  ┊ 5┊$app-accent:  md-palette($md-pink, A200, A100, A400);
++┊  ┊ 6┊$app-warn:    md-palette($md-red);
++┊  ┊ 7┊$app-theme: md-light-theme($app-primary, $app-accent, $app-warn);
++┊  ┊ 8┊@include angular-material-theme($app-theme);
++┊  ┊ 9┊
++┊  ┊10┊.fill-remaining-space {
++┊  ┊11┊  flex: 1 1 auto;
+ ┊ 5┊12┊}
+ ┊ 6┊13┊
+ ┊ 7┊14┊body {
+ ┊ 8┊15┊  background-color: #f8f8f8;
+ ┊ 9┊16┊  font-family: 'Muli', sans-serif;
++┊  ┊17┊  padding: 0;
++┊  ┊18┊  margin: 0;
+ ┊10┊19┊}
+ ┊11┊20┊
+ ┊12┊21┊.sebm-google-map-container {
+ ┊13┊22┊  width: 450px;
+ ┊14┊23┊  height: 450px;
+ ┊15┊24┊}
+-┊16┊  ┊
+-┊17┊  ┊.navbar {
+-┊18┊  ┊  background-color: #ffffff;
+-┊19┊  ┊  border-bottom: #eee 1px solid;
+-┊20┊  ┊  color: $color3;
+-┊21┊  ┊  font-family: 'Muli', sans-serif;
+-┊22┊  ┊  a {
+-┊23┊  ┊    color: $color3;
+-┊24┊  ┊    text-decoration: none !important;
+-┊25┊  ┊  }
+-┊26┊  ┊
+-┊27┊  ┊  .navbar-right-container {
+-┊28┊  ┊    position: absolute;
+-┊29┊  ┊    top: 17px;
+-┊30┊  ┊    right: 17px;
+-┊31┊  ┊  }
+-┊32┊  ┊}🚫↵
+```
+[}]: #
+
+# PartiesForm component
+
+Let's replace the `label` and the `input` with simply the `md-input` and `md-checkbox` and make the `button` look material:
+
+[{]: <helper> (diff_step 19.9)
+#### Step 19.9: Update the view of the parties form
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -1,21 +1,42 @@
+-┊ 1┊  ┊<form [formGroup]="addForm" (ngSubmit)="addParty()" class="form-inline">
+-┊ 2┊  ┊  <fieldset class="form-group">
+-┊ 3┊  ┊    <label for="partyName">Party name</label>
+-┊ 4┊  ┊    <input id="partyName" class="form-control" type="text" formControlName="name" placeholder="Party name" />
+-┊ 5┊  ┊
+-┊ 6┊  ┊    <label for="description">Description</label>
+-┊ 7┊  ┊    <input id="description" class="form-control" type="text" formControlName="description" placeholder="Description">
+-┊ 8┊  ┊
+-┊ 9┊  ┊    <label for="location_name">Location</label>
+-┊10┊  ┊    <input id="location_name" class="form-control" type="text" formControlName="location" placeholder="Location name">
+-┊11┊  ┊
+-┊12┊  ┊    <div class="checkbox">
+-┊13┊  ┊      <label>
+-┊14┊  ┊        <input type="checkbox" formControlName="public">
+-┊15┊  ┊        Public
+-┊16┊  ┊      </label>
++┊  ┊ 1┊<div class="form-container">
++┊  ┊ 2┊  <div class="container-background">
++┊  ┊ 3┊    <div class="form-content">
++┊  ┊ 4┊      <div class="form-center">
++┊  ┊ 5┊        <h1>Your party is missing?</h1>
++┊  ┊ 6┊        <h2>Add it now! ></h2>
++┊  ┊ 7┊      </div>
++┊  ┊ 8┊      <div class="form-center">
++┊  ┊ 9┊        <form *ngIf="user" [formGroup]="addForm" (ngSubmit)="addParty()">
++┊  ┊10┊          <div style="display: table-row">
++┊  ┊11┊            <div class="form-inputs">
++┊  ┊12┊              <md-input dividerColor="accent" formControlName="name" placeholder="Party name"></md-input>
++┊  ┊13┊              <br/>
++┊  ┊14┊              <md-input dividerColor="accent" formControlName="description" placeholder="Description"></md-input>
++┊  ┊15┊              <br/>
++┊  ┊16┊              <md-input dividerColor="accent" formControlName="location" placeholder="Location name"></md-input>
++┊  ┊17┊              <br/>
++┊  ┊18┊              <md-checkbox formControlName="public">Public party?</md-checkbox>
++┊  ┊19┊              <br/><br/>
++┊  ┊20┊              <button color="accent" md-raised-button type="submit">Add my party!</button>
++┊  ┊21┊            </div>
++┊  ┊22┊            <div class="form-extras">
++┊  ┊23┊              <sebm-google-map class="new-party-map"
++┊  ┊24┊                               [latitude]="newPartyPosition.lat"
++┊  ┊25┊                               [longitude]="newPartyPosition.lng"
++┊  ┊26┊                               [zoom]="8"
++┊  ┊27┊                               (mapClick)="mapClicked($event)">
++┊  ┊28┊                <sebm-google-map-marker
++┊  ┊29┊                  [latitude]="newPartyPosition.lat"
++┊  ┊30┊                  [longitude]="newPartyPosition.lng">
++┊  ┊31┊                </sebm-google-map-marker>
++┊  ┊32┊              </sebm-google-map>
++┊  ┊33┊            </div>
++┊  ┊34┊          </div>
++┊  ┊35┊        </form>
++┊  ┊36┊        <div *ngIf="!user">
++┊  ┊37┊          Please login in order to create new parties!
++┊  ┊38┊        </div>
++┊  ┊39┊      </div>
+ ┊17┊40┊    </div>
+-┊18┊  ┊
+-┊19┊  ┊    <button type="submit" class="btn btn-primary">Add</button>
+-┊20┊  ┊  </fieldset>
+-┊21┊  ┊</form>
++┊  ┊41┊  </div>
++┊  ┊42┊</div>🚫↵
+```
+[}]: #
+
+We use the `mdInput` component which is a wrapper for regular HTML input with style and cool layout.
+
+Now let's add CSS styles:
+
+[{]: <helper> (diff_step 19.10)
+#### Step 19.10: Added styles for parties form
+
+##### Added client/imports/app/parties/parties-form.component.scss
+```diff
+@@ -0,0 +1,54 @@
++┊  ┊ 1┊.form-container {
++┊  ┊ 2┊  position: relative;
++┊  ┊ 3┊  display: inline-block;
++┊  ┊ 4┊  overflow-y: auto;
++┊  ┊ 5┊  overflow-x: hidden;
++┊  ┊ 6┊  flex-grow: 1;
++┊  ┊ 7┊  z-index: 1;
++┊  ┊ 8┊  width: 100%;
++┊  ┊ 9┊  color: white;
++┊  ┊10┊
++┊  ┊11┊  .container-background {
++┊  ┊12┊    background: linear-gradient(rgb(0,121,107),rgb(0,150,136));
++┊  ┊13┊    color: #fff;
++┊  ┊14┊
++┊  ┊15┊    .form-content {
++┊  ┊16┊      background: #0277bd;
++┊  ┊17┊      width: 100%;
++┊  ┊18┊      padding: 0 !important;
++┊  ┊19┊      align-items: center;
++┊  ┊20┊      display: flex;
++┊  ┊21┊      flex-flow: row wrap;
++┊  ┊22┊      margin: 0 auto;
++┊  ┊23┊
++┊  ┊24┊      form {
++┊  ┊25┊        width: 100%;
++┊  ┊26┊        display: table;
++┊  ┊27┊      }
++┊  ┊28┊
++┊  ┊29┊      .form-inputs {
++┊  ┊30┊        display: table-cell;
++┊  ┊31┊        width: 60%;
++┊  ┊32┊        vertical-align: top;
++┊  ┊33┊        text-align: center;
++┊  ┊34┊        margin-top: 20px;
++┊  ┊35┊      }
++┊  ┊36┊
++┊  ┊37┊      .form-extras {
++┊  ┊38┊        display: table-cell;
++┊  ┊39┊        width: 40%;
++┊  ┊40┊        vertical-align: top;
++┊  ┊41┊
++┊  ┊42┊        .new-party-map {
++┊  ┊43┊          width: 100% !important;
++┊  ┊44┊          height: 300px !important;
++┊  ┊45┊        }
++┊  ┊46┊      }
++┊  ┊47┊
++┊  ┊48┊      .form-center {
++┊  ┊49┊        width: 50%;
++┊  ┊50┊        text-align: center;
++┊  ┊51┊      }
++┊  ┊52┊    }
++┊  ┊53┊  }
++┊  ┊54┊}🚫↵
+```
+[}]: #
+
+Now we need to make some changes in our Component's code - we will inject the user (using `InjectUser`), import the new stylesheet and add the ability to set the new party location using a Google map Component:
+
+[{]: <helper> (diff_step 19.11)
+#### Step 19.11: Inject user and import styles into the form
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -1,17 +1,19 @@
+ ┊ 1┊ 1┊import { Component, OnInit } from '@angular/core';
+ ┊ 2┊ 2┊import { FormGroup, FormBuilder, Validators } from '@angular/forms';
+-┊ 3┊  ┊import { Meteor } from 'meteor/meteor';
+-┊ 4┊  ┊
+ ┊ 5┊ 3┊import { Parties } from '../../../../both/collections/parties.collection';
+-┊ 6┊  ┊
++┊  ┊ 4┊import { InjectUser } from "angular2-meteor-accounts-ui";
+ ┊ 7┊ 5┊import template from './parties-form.component.html';
++┊  ┊ 6┊import style from './parties-form.component.scss';
+ ┊ 8┊ 7┊
+ ┊ 9┊ 8┊@Component({
+ ┊10┊ 9┊  selector: 'parties-form',
+-┊11┊  ┊  template
++┊  ┊10┊  template,
++┊  ┊11┊  styles: [ style ]
+ ┊12┊12┊})
++┊  ┊13┊@InjectUser("user")
+ ┊13┊14┊export class PartiesFormComponent implements OnInit {
+ ┊14┊15┊  addForm: FormGroup;
++┊  ┊16┊  newPartyPosition: {lat:number, lng: number} = {lat: 37.4292, lng: -122.1381};
+ ┊15┊17┊
+ ┊16┊18┊  constructor(
+ ┊17┊19┊    private formBuilder: FormBuilder
+```
+```diff
+@@ -26,6 +28,10 @@
+ ┊26┊28┊    });
+ ┊27┊29┊  }
+ ┊28┊30┊
++┊  ┊31┊  mapClicked($event) {
++┊  ┊32┊    this.newPartyPosition = $event.coords;
++┊  ┊33┊  }
++┊  ┊34┊
+ ┊29┊35┊  addParty(): void {
+ ┊30┊36┊    if (!Meteor.userId()) {
+ ┊31┊37┊      alert('Please log in to add a party');
+```
+```diff
+@@ -37,7 +43,9 @@
+ ┊37┊43┊        name: this.addForm.value.name,
+ ┊38┊44┊        description: this.addForm.value.description,
+ ┊39┊45┊        location: {
+-┊40┊  ┊          name: this.addForm.value.location
++┊  ┊46┊          name: this.addForm.value.location,
++┊  ┊47┊          lat: this.newPartyPosition.lat,
++┊  ┊48┊          lng: this.newPartyPosition.lng
+ ┊41┊49┊        },
+ ┊42┊50┊        public: this.addForm.value.public,
+ ┊43┊51┊        owner: Meteor.userId()
+```
+[}]: #
+
+# PartiesList component
+
+PartiesForm component is done, so we can move one level higher in the component's tree. Time for the list of parties:
+
+[{]: <helper> (diff_step 19.12)
+#### Step 19.12: Updated the layout of the parties list
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -1,100 +1,66 @@
+-┊  1┊   ┊<div class="row">
+-┊  2┊   ┊  <div class="col-md-12">
+-┊  3┊   ┊    <div class="jumbotron">
+-┊  4┊   ┊      <h3>Create a new party!</h3>
+-┊  5┊   ┊      <parties-form [hidden]="!user"></parties-form>
+-┊  6┊   ┊      <div [hidden]="user">You need to login to create new parties!</div>
+-┊  7┊   ┊    </div>
+-┊  8┊   ┊  </div>
+-┊  9┊   ┊</div>
+-┊ 10┊   ┊<div class="row ma-filters">
+-┊ 11┊   ┊  <div class="col-md-6">
+-┊ 12┊   ┊    <h3>All Parties:</h3>
+-┊ 13┊   ┊    <form class="form-inline">
+-┊ 14┊   ┊      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
+-┊ 15┊   ┊      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
+-┊ 16┊   ┊      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
+-┊ 17┊   ┊      <option value="1" selected>Ascending</option>
+-┊ 18┊   ┊      <option value="-1">Descending</option>
+-┊ 19┊   ┊    </select>
+-┊ 20┊   ┊    </form>
+-┊ 21┊   ┊  </div>
+-┊ 22┊   ┊</div>
+-┊ 23┊   ┊<div class="row">
+-┊ 24┊   ┊  <div class="col-md-6">
+-┊ 25┊   ┊    <ul class="list-group">
+-┊ 26┊   ┊      <li class="list-group-item">
+-┊ 27┊   ┊        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+-┊ 28┊   ┊      </li>
+-┊ 29┊   ┊      <li *ngFor="let party of parties | async"
+-┊ 30┊   ┊          class="list-group-item ma-party-item">
+-┊ 31┊   ┊        <div class="row">
+-┊ 32┊   ┊          <div class="col-sm-8">
+-┊ 33┊   ┊            <h2 class="ma-party-name">
+-┊ 34┊   ┊              <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+-┊ 35┊   ┊            </h2>
+-┊ 36┊   ┊            @ {{party.location.name}}
+-┊ 37┊   ┊            <p class="ma-party-description">
+-┊ 38┊   ┊              {{party.description}}
+-┊ 39┊   ┊            </p>
+-┊ 40┊   ┊          </div>
+-┊ 41┊   ┊          <div class="col-sm-4">
+-┊ 42┊   ┊            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
+-┊ 43┊   ┊              class="fa fa-times"></i></button>
+-┊ 44┊   ┊          </div>
++┊   ┊  1┊<parties-form></parties-form>
++┊   ┊  2┊
++┊   ┊  3┊<div class="parties-list-container">
++┊   ┊  4┊  <div class="parties-list">
++┊   ┊  5┊    <md-card class="filter-card">
++┊   ┊  6┊      <h3>Filter Parties</h3>
++┊   ┊  7┊      <form>
++┊   ┊  8┊        By Location: <md-input dividerColor="primary" type="text" #searchtext placeholder="Enter Location"></md-input>
++┊   ┊  9┊        <button md-button (click)="search(searchtext.value)">Find</button>
++┊   ┊ 10┊        <br />
++┊   ┊ 11┊        Sort by name:
++┊   ┊ 12┊        <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
++┊   ┊ 13┊          <option value="1" selected>Ascending</option>
++┊   ┊ 14┊          <option value="-1">Descending</option>
++┊   ┊ 15┊        </select>
++┊   ┊ 16┊      </form>
++┊   ┊ 17┊    </md-card>
++┊   ┊ 18┊
++┊   ┊ 19┊    <pagination-controls class="pagination" (pageChange)="onPageChanged($event)"></pagination-controls>
++┊   ┊ 20┊
++┊   ┊ 21┊    <md-card *ngFor="let party of parties | async" class="party-card">
++┊   ┊ 22┊      <h2 class="party-name">
++┊   ┊ 23┊        <a [routerLink]="['/party', party._id]">{{party.name}}</a>
++┊   ┊ 24┊      </h2>
++┊   ┊ 25┊      @ {{party.location.name}}
++┊   ┊ 26┊      <br />
++┊   ┊ 27┊      {{party.description}}
++┊   ┊ 28┊
++┊   ┊ 29┊      <button class="remove-party" md-icon-button *ngIf="isOwner(party)" (click)="removeParty(party)">
++┊   ┊ 30┊        <md-icon class="md-24">X</md-icon>
++┊   ┊ 31┊      </button>
++┊   ┊ 32┊
++┊   ┊ 33┊      <div class="rsvp-container">
++┊   ┊ 34┊        <div class="rsvps-sum">
++┊   ┊ 35┊          <div class="rsvps-amount">{{party | rsvp:'yes'}}</div>
++┊   ┊ 36┊          <div class="rsvps-title">Yes</div>
++┊   ┊ 37┊        </div>
++┊   ┊ 38┊        <div class="rsvps-sum">
++┊   ┊ 39┊          <div class="rsvps-amount">{{party | rsvp:'maybe'}}</div>
++┊   ┊ 40┊          <div class="rsvps-title">Maybe</div>
+ ┊ 45┊ 41┊        </div>
+-┊ 46┊   ┊        <div class="row ma-party-item-bottom">
+-┊ 47┊   ┊          <div class="col-sm-4">
+-┊ 48┊   ┊            <div class="ma-rsvp-sum">
+-┊ 49┊   ┊              <div class="ma-rsvp-amount">
+-┊ 50┊   ┊                <div class="ma-amount">
+-┊ 51┊   ┊                  {{party | rsvp:'yes'}}
+-┊ 52┊   ┊                </div>
+-┊ 53┊   ┊                <div class="ma-rsvp-title">
+-┊ 54┊   ┊                  YES
+-┊ 55┊   ┊                </div>
+-┊ 56┊   ┊              </div>
+-┊ 57┊   ┊              <div class="ma-rsvp-amount">
+-┊ 58┊   ┊                <div class="ma-amount">
+-┊ 59┊   ┊                  {{party | rsvp:'maybe'}}
+-┊ 60┊   ┊                </div>
+-┊ 61┊   ┊                <div class="ma-rsvp-title">
+-┊ 62┊   ┊                  MAYBE
+-┊ 63┊   ┊                </div>
+-┊ 64┊   ┊              </div>
+-┊ 65┊   ┊              <div class="ma-rsvp-amount">
+-┊ 66┊   ┊                <div class="ma-amount">
+-┊ 67┊   ┊                  {{party | rsvp:'no'}}
+-┊ 68┊   ┊                </div>
+-┊ 69┊   ┊                <div class="ma-rsvp-title">
+-┊ 70┊   ┊                  NO
+-┊ 71┊   ┊                </div>
+-┊ 72┊   ┊              </div>
+-┊ 73┊   ┊            </div>
+-┊ 74┊   ┊          </div>
++┊   ┊ 42┊        <div class="rsvps-sum">
++┊   ┊ 43┊          <div class="rsvps-amount">{{party | rsvp:'no'}}</div>
++┊   ┊ 44┊          <div class="rsvps-title">No</div>
+ ┊ 75┊ 45┊        </div>
+-┊ 76┊   ┊      </li>
+-┊ 77┊   ┊      <li class="list-group-item">
+-┊ 78┊   ┊        <pagination-controls (pageChange)="onPageChanged($event)"></pagination-controls>
+-┊ 79┊   ┊      </li>
+-┊ 80┊   ┊    </ul>
++┊   ┊ 46┊      </div>
++┊   ┊ 47┊    </md-card>
++┊   ┊ 48┊
++┊   ┊ 49┊    <pagination-controls class="pagination" (pageChange)="onPageChanged($event)"></pagination-controls>
+ ┊ 81┊ 50┊  </div>
+-┊ 82┊   ┊  <div class="col-md-6">
+-┊ 83┊   ┊    <ul class="list-group">
+-┊ 84┊   ┊      <li class="list-group-item">
+-┊ 85┊   ┊        <sebm-google-map
+-┊ 86┊   ┊          [latitude]="0"
+-┊ 87┊   ┊          [longitude]="0"
+-┊ 88┊   ┊          [zoom]="1">
+-┊ 89┊   ┊          <div *ngFor="let party of parties | async">
+-┊ 90┊   ┊            <sebm-google-map-marker
+-┊ 91┊   ┊              *ngIf="party.location.lat"
+-┊ 92┊   ┊              [latitude]="party.location.lat"
+-┊ 93┊   ┊              [longitude]="party.location.lng">
+-┊ 94┊   ┊            </sebm-google-map-marker>
+-┊ 95┊   ┊          </div>
+-┊ 96┊   ┊        </sebm-google-map>
+-┊ 97┊   ┊      </li>
+-┊ 98┊   ┊    </ul>
++┊   ┊ 51┊  <div class="parties-map">
++┊   ┊ 52┊    <sebm-google-map
++┊   ┊ 53┊      [latitude]="0"
++┊   ┊ 54┊      [longitude]="0"
++┊   ┊ 55┊      [zoom]="1"
++┊   ┊ 56┊      class="google-map">
++┊   ┊ 57┊      <div *ngFor="let party of parties | async">
++┊   ┊ 58┊      <sebm-google-map-marker
++┊   ┊ 59┊      *ngIf="party.location.lat"
++┊   ┊ 60┊      [latitude]="party.location.lat"
++┊   ┊ 61┊      [longitude]="party.location.lng">
++┊   ┊ 62┊      </sebm-google-map-marker>
++┊   ┊ 63┊      </div>
++┊   ┊ 64┊    </sebm-google-map>
+ ┊ 99┊ 65┊  </div>
+ ┊100┊ 66┊</div>🚫↵
+```
+[}]: #
+
+To make it all look so much better, let's add couple of rules to css:
+
+[{]: <helper> (diff_step 19.13)
+#### Step 19.13: Updated the styles of the parties list
+
+##### Changed client/imports/app/parties/parties-list.component.scss
+```diff
+@@ -1,127 +1,71 @@
+-┊  1┊   ┊@import "../colors";
++┊   ┊  1┊.parties-list-container {
++┊   ┊  2┊  align-items: center;
++┊   ┊  3┊  display: flex;
++┊   ┊  4┊  flex-flow: row wrap;
++┊   ┊  5┊  margin: 0 auto;
++┊   ┊  6┊  width: 100%;
++┊   ┊  7┊  display: table;
+ ┊  2┊  8┊
+-┊  3┊   ┊.ma-add-button-container {
+-┊  4┊   ┊  button.btn {
+-┊  5┊   ┊    background: $color3;
+-┊  6┊   ┊    float: right;
+-┊  7┊   ┊    margin-right: 5px;
+-┊  8┊   ┊    outline: none;
+-┊  9┊   ┊    i {
+-┊ 10┊   ┊      color: $color5;
+-┊ 11┊   ┊    }
+-┊ 12┊   ┊  }
+-┊ 13┊   ┊}
+-┊ 14┊   ┊
+-┊ 15┊   ┊.ma-parties-col {
+-┊ 16┊   ┊  padding-top: 20px;
+-┊ 17┊   ┊}
+-┊ 18┊   ┊
+-┊ 19┊   ┊.ma-filters {
+-┊ 20┊   ┊  margin-bottom: 10px;
+-┊ 21┊   ┊}
++┊   ┊  9┊  .parties-list {
++┊   ┊ 10┊    display: table-cell;
++┊   ┊ 11┊    width: 50%;
++┊   ┊ 12┊    vertical-align: top;
+ ┊ 22┊ 13┊
+-┊ 23┊   ┊.ma-party-item {
+-┊ 24┊   ┊  .ma-party-name {
+-┊ 25┊   ┊    margin-bottom: 20px;
+-┊ 26┊   ┊    a {
+-┊ 27┊   ┊      color: $color6;
+-┊ 28┊   ┊      text-decoration: none !important;
+-┊ 29┊   ┊      font-weight: 400;
++┊   ┊ 14┊    .pagination {
++┊   ┊ 15┊      display: inline;
++┊   ┊ 16┊      text-align: center;
+ ┊ 30┊ 17┊    }
+-┊ 31┊   ┊  }
+-┊ 32┊   ┊  .ma-party-description {
+-┊ 33┊   ┊    color: $color6;
+-┊ 34┊   ┊    font-weight: 300;
+-┊ 35┊   ┊    padding-left: 18px;
+-┊ 36┊   ┊    font-size: 14px;
+-┊ 37┊   ┊  }
+ ┊ 38┊ 18┊
+-┊ 39┊   ┊  .ma-remove {
+-┊ 40┊   ┊    color: lighten($color7, 20%);
+-┊ 41┊   ┊    position: absolute;
+-┊ 42┊   ┊    right: 20px;
+-┊ 43┊   ┊    top: 20px;
+-┊ 44┊   ┊    &:hover {
+-┊ 45┊   ┊      color: $color7;
++┊   ┊ 19┊    .filter-card {
++┊   ┊ 20┊      margin: 20px;
+ ┊ 46┊ 21┊    }
+-┊ 47┊   ┊  }
+ ┊ 48┊ 22┊
+-┊ 49┊   ┊  .ma-party-item-bottom {
+-┊ 50┊   ┊    padding-top: 10px;
+-┊ 51┊   ┊    .ma-posted-by-col {
+-┊ 52┊   ┊      .ma-posted-by {
+-┊ 53┊   ┊        color: darken($color4, 30%);
+-┊ 54┊   ┊        font-size: 12px;
+-┊ 55┊   ┊      }
+-┊ 56┊   ┊      .ma-everyone-invited {
+-┊ 57┊   ┊        @media (max-width: 400px) {
+-┊ 58┊   ┊          display: block;
+-┊ 59┊   ┊          i {
+-┊ 60┊   ┊            margin-left: 0px !important;
+-┊ 61┊   ┊          }
+-┊ 62┊   ┊        }
+-┊ 63┊   ┊        font-size: 12px;
+-┊ 64┊   ┊        color: darken($color4, 10%);
+-┊ 65┊   ┊        i {
+-┊ 66┊   ┊          color: darken($color4, 10%);
+-┊ 67┊   ┊          margin-left: 5px;
+-┊ 68┊   ┊        }
+-┊ 69┊   ┊      }
+-┊ 70┊   ┊    }
++┊   ┊ 23┊    .party-card {
++┊   ┊ 24┊      margin: 20px;
++┊   ┊ 25┊      position: relative;
+ ┊ 71┊ 26┊
+-┊ 72┊   ┊    .ma-rsvp-buttons {
+-┊ 73┊   ┊      input.btn {
+-┊ 74┊   ┊        color: darken($color3, 20%);
+-┊ 75┊   ┊        background: transparent !important;
+-┊ 76┊   ┊        outline: none;
+-┊ 77┊   ┊        padding-left: 0;
+-┊ 78┊   ┊        &:active {
+-┊ 79┊   ┊          box-shadow: none;
+-┊ 80┊   ┊        }
+-┊ 81┊   ┊        &:hover {
+-┊ 82┊   ┊          color: darken($color3, 30%);
+-┊ 83┊   ┊        }
+-┊ 84┊   ┊        &.btn-primary {
+-┊ 85┊   ┊          color: lighten($color3, 10%);
+-┊ 86┊   ┊          border: 0;
+-┊ 87┊   ┊          background: transparent !important;
+-┊ 88┊   ┊        }
++┊   ┊ 27┊      .party-name > a {
++┊   ┊ 28┊        color: black;
++┊   ┊ 29┊        text-decoration: none;
+ ┊ 89┊ 30┊      }
+-┊ 90┊   ┊    }
+ ┊ 91┊ 31┊
+-┊ 92┊   ┊    .ma-rsvp-sum {
+-┊ 93┊   ┊      width: 160px;
+-┊ 94┊   ┊      @media (min-width: 400px) {
+-┊ 95┊   ┊        float: right;
+-┊ 96┊   ┊      }
+-┊ 97┊   ┊      @media (max-width: 400px) {
+-┊ 98┊   ┊        margin: 0 auto;
+-┊ 99┊   ┊      }
+-┊100┊   ┊    }
+-┊101┊   ┊    .ma-rsvp-amount {
+-┊102┊   ┊      display: inline-block;
+-┊103┊   ┊      text-align: center;
+-┊104┊   ┊      width: 50px;
+-┊105┊   ┊      .ma-amount {
+-┊106┊   ┊        font-weight: bold;
+-┊107┊   ┊        font-size: 20px;
++┊   ┊ 32┊      .remove-party {
++┊   ┊ 33┊        position: absolute;
++┊   ┊ 34┊        top: 10px;
++┊   ┊ 35┊        right: 10px;
+ ┊108┊ 36┊      }
+-┊109┊   ┊      .ma-rsvp-title {
+-┊110┊   ┊        font-size: 11px;
+-┊111┊   ┊        color: #aaa;
+-┊112┊   ┊        text-transform: uppercase;
++┊   ┊ 37┊
++┊   ┊ 38┊      .rsvp-container {
++┊   ┊ 39┊        position: absolute;
++┊   ┊ 40┊        bottom: 10px;
++┊   ┊ 41┊        right: 10px;
++┊   ┊ 42┊
++┊   ┊ 43┊        .rsvps-sum {
++┊   ┊ 44┊          display: inline-block;
++┊   ┊ 45┊          width: 50px;
++┊   ┊ 46┊          text-align: center;
++┊   ┊ 47┊
++┊   ┊ 48┊          .rsvps-amount {
++┊   ┊ 49┊            font-size: 24px;
++┊   ┊ 50┊          }
++┊   ┊ 51┊
++┊   ┊ 52┊          .rsvps-title {
++┊   ┊ 53┊            font-size: 13px;
++┊   ┊ 54┊            color: #aaa;
++┊   ┊ 55┊          }
++┊   ┊ 56┊        }
+ ┊113┊ 57┊      }
+ ┊114┊ 58┊    }
+ ┊115┊ 59┊  }
+-┊116┊   ┊}
+ ┊117┊ 60┊
+-┊118┊   ┊.ma-angular-map-col {
+-┊119┊   ┊  .angular-google-map-container, .angular-google-map {
+-┊120┊   ┊    height: 100%;
+-┊121┊   ┊    width: 100%;
+-┊122┊   ┊  }
+-┊123┊   ┊}
++┊   ┊ 61┊  .parties-map {
++┊   ┊ 62┊    display: table-cell;
++┊   ┊ 63┊    width: 50%;
++┊   ┊ 64┊    vertical-align: top;
+ ┊124┊ 65┊
+-┊125┊   ┊.search-form {
+-┊126┊   ┊  margin-bottom: 1em;
++┊   ┊ 66┊    .google-map {
++┊   ┊ 67┊      width: 100%;
++┊   ┊ 68┊      min-height: 600px;
++┊   ┊ 69┊    }
++┊   ┊ 70┊  }
+ ┊127┊ 71┊}🚫↵
+```
+[}]: #
+
+# PartyDetails component
+
+We also need to update the PartyDetails component:
+
+[{]: <helper> (diff_step 19.14)
+#### Step 19.14: Update the layout of the party details
+
+##### Changed client/imports/app/parties/party-details.component.html
+```diff
+@@ -1,61 +1,56 @@
+-┊ 1┊  ┊<div class="row ma-party-details-container">
+-┊ 2┊  ┊  <div class="col-sm-6 col-sm-offset-3">
+-┊ 3┊  ┊    <legend>View and Edit Your Party Details:</legend>
+-┊ 4┊  ┊    <form class="form-horizontal" *ngIf="party" (submit)="saveParty()">
+-┊ 5┊  ┊      <div class="form-group">
+-┊ 6┊  ┊        <label>Party Name</label>
+-┊ 7┊  ┊        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" name="name" class="form-control">
+-┊ 8┊  ┊      </div>
++┊  ┊ 1┊<div class="party-details-container" *ngIf="party">
++┊  ┊ 2┊  <div class="row">
++┊  ┊ 3┊    <div class="party-details">
++┊  ┊ 4┊      <md-card>
++┊  ┊ 5┊        <h2>{{ party.name }}</h2>
++┊  ┊ 6┊        <form layout="column" (submit)="saveParty()">
++┊  ┊ 7┊          <label>Party Name: </label>
++┊  ┊ 8┊          <md-input [disabled]="!isOwner" [(ngModel)]="party.name" name="name"></md-input>
++┊  ┊ 9┊          <br />
++┊  ┊10┊          <label>Party Description: </label>
++┊  ┊11┊          <md-input [disabled]="!isOwner" [(ngModel)]="party.description" name="description"></md-input>
++┊  ┊12┊          <br />
++┊  ┊13┊          <label>Location name: </label>
++┊  ┊14┊          <md-input [disabled]="!isOwner" [(ngModel)]="party.location.name" name="location"></md-input>
++┊  ┊15┊          <br />
++┊  ┊16┊          <md-checkbox [disabled]="!isOwner" [(checked)]="party.public" name="public" aria-label="Public">
++┊  ┊17┊            Public party?
++┊  ┊18┊          </md-checkbox>
+ ┊ 9┊19┊
+-┊10┊  ┊      <div class="form-group">
+-┊11┊  ┊        <label>Description</label>
+-┊12┊  ┊        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" name="description" class="form-control">
+-┊13┊  ┊      </div>
+-┊14┊  ┊
+-┊15┊  ┊      <div class="form-group">
+-┊16┊  ┊        <label>Location name</label>
+-┊17┊  ┊        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" name="location" class="form-control">
+-┊18┊  ┊      </div>
+-┊19┊  ┊
+-┊20┊  ┊      <div class="form-group">
+-┊21┊  ┊        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
+-┊22┊  ┊        <a [routerLink]="['/']" class="btn">Back</a>
+-┊23┊  ┊      </div>
+-┊24┊  ┊    </form>
+-┊25┊  ┊
+-┊26┊  ┊    <ul class="ma-invite-list" *ngIf="isOwner || isPublic">
+-┊27┊  ┊      <h3>
+-┊28┊  ┊        Users to invite:
+-┊29┊  ┊      </h3>
+-┊30┊  ┊      <li *ngFor="let user of users | async">
+-┊31┊  ┊        <div>{{ user | displayName }}</div>
+-┊32┊  ┊        <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
+-┊33┊  ┊      </li>
+-┊34┊  ┊    </ul>
+-┊35┊  ┊
+-┊36┊  ┊    <div *ngIf="isInvited">
+-┊37┊  ┊      <h2>Reply to the invitation</h2>
+-┊38┊  ┊      <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
+-┊39┊  ┊      <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
+-┊40┊  ┊      <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
++┊  ┊20┊          <div layout="row" layout-align="left">
++┊  ┊21┊            <button [disabled]="!isOwner" type="submit" md-raised-button color="accent">Save</button>
++┊  ┊22┊            <a [routerLink]="['/']" md-raised-button class="md-raised">Back</a>
++┊  ┊23┊          </div>
++┊  ┊24┊        </form>
++┊  ┊25┊      </md-card>
+ ┊41┊26┊    </div>
+-┊42┊  ┊
+-┊43┊  ┊    <h3 class="ma-map-title">
+-┊44┊  ┊      Click the map to set the party location
+-┊45┊  ┊    </h3>
+-┊46┊  ┊
+-┊47┊  ┊    <div class="angular-google-map-container">
+-┊48┊  ┊      <sebm-google-map
+-┊49┊  ┊        [latitude]="lat || centerLat"
+-┊50┊  ┊        [longitude]="lng || centerLng"
+-┊51┊  ┊        [zoom]="8"
+-┊52┊  ┊        (mapClick)="mapClicked($event)">
+-┊53┊  ┊        <sebm-google-map-marker
+-┊54┊  ┊          *ngIf="lat && lng"
+-┊55┊  ┊          [latitude]="lat"
+-┊56┊  ┊          [longitude]="lng">
+-┊57┊  ┊        </sebm-google-map-marker>
+-┊58┊  ┊      </sebm-google-map>
++┊  ┊27┊    <div class="party-invites">
++┊  ┊28┊      <md-card>
++┊  ┊29┊        <h2>Invitations</h2>
++┊  ┊30┊        <span [hidden]="!party.public">Public party, no need for invitations!</span>
++┊  ┊31┊        <md-list>
++┊  ┊32┊          <md-list-item *ngFor="let user of users | async">
++┊  ┊33┊            <div>{{ user | displayName }}</div>
++┊  ┊34┊            <button (click)="invite(user)" md-raised-button>Invite</button>
++┊  ┊35┊          </md-list-item>
++┊  ┊36┊        </md-list>
++┊  ┊37┊      </md-card>
++┊  ┊38┊    </div>
++┊  ┊39┊    <div class="party-map">
++┊  ┊40┊      <md-card>
++┊  ┊41┊        <h2>Party location</h2>
++┊  ┊42┊        <sebm-google-map
++┊  ┊43┊          [latitude]="lat || centerLat"
++┊  ┊44┊          [longitude]="lng || centerLng"
++┊  ┊45┊          [zoom]="8"
++┊  ┊46┊          (mapClick)="mapClicked($event)">
++┊  ┊47┊          <sebm-google-map-marker
++┊  ┊48┊            *ngIf="lat && lng"
++┊  ┊49┊            [latitude]="lat"
++┊  ┊50┊            [longitude]="lng">
++┊  ┊51┊          </sebm-google-map-marker>
++┊  ┊52┊        </sebm-google-map>
++┊  ┊53┊      </md-card>
+ ┊59┊54┊    </div>
+ ┊60┊55┊  </div>
+-┊61┊  ┊</div>🚫↵
++┊  ┊56┊</div>
+```
+[}]: #
+
+And let's update the styles:
+
+[{]: <helper> (diff_step 19.15)
+#### Step 19.15: Updated the styles of the party details
+
+##### Changed client/imports/app/parties/party-details.component.scss
+```diff
+@@ -1,32 +1,25 @@
+-┊ 1┊  ┊.ma-party-details-container {
+-┊ 2┊  ┊  padding: 20px;
++┊  ┊ 1┊.party-details-container {
++┊  ┊ 2┊  display: table;
+ ┊ 3┊ 3┊
+-┊ 4┊  ┊  .angular-google-map-container {
++┊  ┊ 4┊  .row {
++┊  ┊ 5┊    display: table-row;
+ ┊ 5┊ 6┊    width: 100%;
+-┊ 6┊  ┊    height: 100%;
+-┊ 7┊  ┊  }
+-┊ 8┊  ┊
+-┊ 9┊  ┊  .angular-google-map {
+-┊10┊  ┊    width: 100%;
+-┊11┊  ┊    height: 400px;
+-┊12┊  ┊  }
+-┊13┊  ┊
+-┊14┊  ┊  .ma-map-title {
+-┊15┊  ┊    font-size: 16px;
+-┊16┊  ┊    font-weight: bolder;
+-┊17┊  ┊  }
+ ┊18┊ 7┊
+-┊19┊  ┊  .ma-invite-list {
+-┊20┊  ┊    margin-top: 20px;
+-┊21┊  ┊    margin-bottom: 20px;
++┊  ┊ 8┊    .party-details, .party-invites, .party-map {
++┊  ┊ 9┊      display: table-cell;
++┊  ┊10┊      width: 33.3%;
++┊  ┊11┊      vertical-align: top;
+ ┊22┊12┊
+-┊23┊  ┊    h3 {
+-┊24┊  ┊      font-size: 16px;
+-┊25┊  ┊      font-weight: bolder;
++┊  ┊13┊      md-card {
++┊  ┊14┊        margin: 20px;
++┊  ┊15┊      }
+ ┊26┊16┊    }
+ ┊27┊17┊
+-┊28┊  ┊    ul {
+-┊29┊  ┊      padding: 0;
++┊  ┊18┊    .party-map {
++┊  ┊19┊      sebm-google-map {
++┊  ┊20┊        height: 300px;
++┊  ┊21┊        width: 100%;
++┊  ┊22┊      }
+ ┊30┊23┊    }
+ ┊31┊24┊  }
+ ┊32┊25┊}🚫↵
+```
+[}]: #
+
+> In this point, you can also remove the `colors.scss` - it's no longer in use!
+
+# Custom Authentication Components
+
+Our next step will replace the `login-buttons` which is a simple and non-styled login/signup component - we will add our custom authentication component with custom style.
+
+First, let's remove the login-buttons from the navigation bar, and replace it with custom buttons for Login / Signup / Logout.
+
+We will also add `routerLink` to each button, and add logic to hide/show buttons according to the user's login state:
+
+[{]: <helper> (diff_step 19.16)
+#### Step 19.16: Replace login buttons with custom buttons
+
+##### Changed client/imports/app/app.component.html
+```diff
+@@ -1,6 +1,13 @@
+ ┊ 1┊ 1┊<md-toolbar color="primary">
+ ┊ 2┊ 2┊  <a routerLink="/" class="toolbar-title">Socially2</a>
+ ┊ 3┊ 3┊  <span class="fill-remaining-space"></span>
+-┊ 4┊  ┊  <login-buttons></login-buttons>
++┊  ┊ 4┊  <div [hidden]="user">
++┊  ┊ 5┊    <a md-button [routerLink]="['/login']" >Login</a>
++┊  ┊ 6┊    <a md-button [routerLink]="['/signup']">Sign up</a>
++┊  ┊ 7┊  </div>
++┊  ┊ 8┊  <div [hidden]="!user">
++┊  ┊ 9┊    <span>{{ user | displayName }}</span>
++┊  ┊10┊    <button md-button (click)="logout()">Logout</button>
++┊  ┊11┊  </div>
+ ┊ 5┊12┊</md-toolbar>
+ ┊ 6┊13┊<router-outlet></router-outlet>🚫↵
+```
+[}]: #
+
+Let's use `InjectUser` decorator, just like we did in one of the previous chapters.
+
+[{]: <helper> (diff_step 19.17)
+#### Step 19.17: Add auth logic to the App component
+
+##### Changed client/imports/app/app.component.ts
+```diff
+@@ -2,10 +2,20 @@
+ ┊ 2┊ 2┊
+ ┊ 3┊ 3┊import template from './app.component.html';
+ ┊ 4┊ 4┊import style from './app.component.scss';
++┊  ┊ 5┊import {InjectUser} from "angular2-meteor-accounts-ui";
+ ┊ 5┊ 6┊
+ ┊ 6┊ 7┊@Component({
+ ┊ 7┊ 8┊  selector: 'app',
+ ┊ 8┊ 9┊  template,
+ ┊ 9┊10┊  styles: [ style ]
+ ┊10┊11┊})
+-┊11┊  ┊export class AppComponent {}
++┊  ┊12┊@InjectUser('user')
++┊  ┊13┊export class AppComponent {
++┊  ┊14┊  constructor() {
++┊  ┊15┊
++┊  ┊16┊  }
++┊  ┊17┊
++┊  ┊18┊  logout() {
++┊  ┊19┊    Meteor.logout();
++┊  ┊20┊  }
++┊  ┊21┊}
+```
+[}]: #
+
+As you can see, we used `DisplayNamePipe` in the view so we have to import it.
+
+We also implemented `logout()` method with `Meteor.logout()`. It is, like you probably guessed, to log out the current user.
+
+Now we can move on to create three new components.
+
+### Login component
+
+First component, is to log in user to the app.
+
+We will need a form and the login method, so let's implement them:
+
+[{]: <helper> (diff_step 19.18)
+#### Step 19.18: Create LoginComponent
+
+##### Added client/imports/app/auth/login.component.ts
+```diff
+@@ -0,0 +1,40 @@
++┊  ┊ 1┊import {Component, OnInit, NgZone} from '@angular/core';
++┊  ┊ 2┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
++┊  ┊ 3┊import { Router } from '@angular/router';
++┊  ┊ 4┊import { Meteor } from 'meteor/meteor';
++┊  ┊ 5┊
++┊  ┊ 6┊import template from './login.component.html';
++┊  ┊ 7┊
++┊  ┊ 8┊@Component({
++┊  ┊ 9┊  selector: 'login',
++┊  ┊10┊  template
++┊  ┊11┊})
++┊  ┊12┊export class LoginComponent implements OnInit {
++┊  ┊13┊  loginForm: FormGroup;
++┊  ┊14┊  error: string;
++┊  ┊15┊
++┊  ┊16┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
++┊  ┊17┊
++┊  ┊18┊  ngOnInit() {
++┊  ┊19┊    this.loginForm = this.formBuilder.group({
++┊  ┊20┊      email: ['', Validators.required],
++┊  ┊21┊      password: ['', Validators.required]
++┊  ┊22┊    });
++┊  ┊23┊
++┊  ┊24┊    this.error = '';
++┊  ┊25┊  }
++┊  ┊26┊
++┊  ┊27┊  login() {
++┊  ┊28┊    if (this.loginForm.valid) {
++┊  ┊29┊      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
++┊  ┊30┊        if (err) {
++┊  ┊31┊          this.zone.run(() => {
++┊  ┊32┊            this.error = err;
++┊  ┊33┊          });
++┊  ┊34┊        } else {
++┊  ┊35┊          this.router.navigate(['/']);
++┊  ┊36┊        }
++┊  ┊37┊      });
++┊  ┊38┊    }
++┊  ┊39┊  }
++┊  ┊40┊}🚫↵
+```
+[}]: #
+
+> Notice that we used `NgZone` in our constructor in order to get it from the Dependency Injection, and we used it before we update the result of the login action - we need to do this because the Meteor world does not update Angular's world, and we need to tell Angular when to update the view since the async result of the login action comes from Meteor's context.
+
+You previously created a form by yourself so there's no need to explain the whole process once again.
+
+About the login method.
+
+Meteor's accounts system has a method called `loginWithPassword`, you can read more about it [here](http://docs.meteor.com/api/accounts.html#Meteor-loginWithPassword).
+
+We need to provide two values, a email and a password. We could get them from the form.
+
+In the callback of Meteor.loginWithPassword's method, we have the redirection to the homepage on success and we're saving the error message if login process failed.
+
+Let's add the view:
+
+[{]: <helper> (diff_step 19.19)
+#### Step 19.19: Create a template for LoginComponent
+
+##### Added client/imports/app/auth/login.component.html
+```diff
+@@ -0,0 +1,37 @@
++┊  ┊ 1┊<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
++┊  ┊ 2┊  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
++┊  ┊ 3┊    <md-toolbar class="md-primary" color="primary">
++┊  ┊ 4┊      Sign in
++┊  ┊ 5┊    </md-toolbar>
++┊  ┊ 6┊
++┊  ┊ 7┊    <div layout="column" layout-margin layout-padding>
++┊  ┊ 8┊      <div layout="row" layout-margin>
++┊  ┊ 9┊        <p class="md-body-2"> Sign in with your email</p>
++┊  ┊10┊      </div>
++┊  ┊11┊
++┊  ┊12┊      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
++┊  ┊13┊            layout="column" layout-fill layout-padding layout-margin>
++┊  ┊14┊
++┊  ┊15┊        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
++┊  ┊16┊        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
++┊  ┊17┊
++┊  ┊18┊        <div layout="row" layout-align="space-between center">
++┊  ┊19┊          <a md-button [routerLink]="['/recover']">Forgot password?</a>
++┊  ┊20┊          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
++┊  ┊21┊        </div>
++┊  ┊22┊      </form>
++┊  ┊23┊
++┊  ┊24┊      <div [hidden]="error == ''">
++┊  ┊25┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
++┊  ┊26┊          <p class="md-body-1">{{ error }}</p>
++┊  ┊27┊        </md-toolbar>
++┊  ┊28┊      </div>
++┊  ┊29┊
++┊  ┊30┊      <md-divider></md-divider>
++┊  ┊31┊
++┊  ┊32┊      <div layout="row" layout-align="center">
++┊  ┊33┊        <a md-button [routerLink]="['/signup']">Need an account?</a>
++┊  ┊34┊      </div>
++┊  ┊35┊    </div>
++┊  ┊36┊  </div>
++┊  ┊37┊</div>🚫↵
+```
+[}]: #
+
+We also need to define the `/login` route:
+
+[{]: <helper> (diff_step 19.20)
+#### Step 19.20: Add the login route
+
+##### Changed client/imports/app/app.routes.ts
+```diff
+@@ -3,10 +3,12 @@
+ ┊ 3┊ 3┊
+ ┊ 4┊ 4┊import { PartiesListComponent } from './parties/parties-list.component';
+ ┊ 5┊ 5┊import { PartyDetailsComponent } from './parties/party-details.component';
++┊  ┊ 6┊import {LoginComponent} from "./auth/login.component";
+ ┊ 6┊ 7┊
+ ┊ 7┊ 8┊export const routes: Route[] = [
+ ┊ 8┊ 9┊  { path: '', component: PartiesListComponent },
+-┊ 9┊  ┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] }
++┊  ┊10┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
++┊  ┊11┊  { path: 'login', component: LoginComponent }
+ ┊10┊12┊];
+ ┊11┊13┊
+ ┊12┊14┊export const ROUTES_PROVIDERS = [{
+```
+[}]: #
+
+And now let's create an index file for the auth files:
+
+[{]: <helper> (diff_step 19.21)
+#### Step 19.21: Create the index file for auth component
+
+##### Added client/imports/app/auth/index.ts
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊import {LoginComponent} from "./login.component";
++┊ ┊2┊
++┊ ┊3┊export const AUTH_DECLARATIONS = [
++┊ ┊4┊  LoginComponent
++┊ ┊5┊];
+```
+[}]: #
+
+And import the exposed Array into the `NgModule`:
+
+[{]: <helper> (diff_step 19.22)
+#### Step 19.22: Updated the NgModule imports
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -11,6 +11,7 @@
+ ┊11┊11┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊12┊12┊import { SHARED_DECLARATIONS } from './shared';
+ ┊13┊13┊import { MaterialModule } from "@angular/material";
++┊  ┊14┊import { AUTH_DECLARATIONS } from "./auth/index";
+ ┊14┊15┊
+ ┊15┊16┊@NgModule({
+ ┊16┊17┊  imports: [
+```
+```diff
+@@ -28,7 +29,8 @@
+ ┊28┊29┊  declarations: [
+ ┊29┊30┊    AppComponent,
+ ┊30┊31┊    ...PARTIES_DECLARATIONS,
+-┊31┊  ┊    ...SHARED_DECLARATIONS
++┊  ┊32┊    ...SHARED_DECLARATIONS,
++┊  ┊33┊    ...AUTH_DECLARATIONS
+ ┊32┊34┊  ],
+ ┊33┊35┊  providers: [
+ ┊34┊36┊    ...ROUTES_PROVIDERS
+```
+[}]: #
+
+### Signup component
+
+The Signup component looks pretty much the same as the Login component. We just use different method, `Accounts.createUser()`. Here's [the link](http://docs.meteor.com/api/passwords.html#Accounts-createUser) to the documentation.
+
+[{]: <helper> (diff_step 19.23)
+#### Step 19.23: Added the signup component
+
+##### Added client/imports/app/auth/signup.component.ts
+```diff
+@@ -0,0 +1,43 @@
++┊  ┊ 1┊import {Component, OnInit, NgZone} from '@angular/core';
++┊  ┊ 2┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
++┊  ┊ 3┊import { Router } from '@angular/router';
++┊  ┊ 4┊import { Accounts } from 'meteor/accounts-base';
++┊  ┊ 5┊
++┊  ┊ 6┊import template from './signup.component.html';
++┊  ┊ 7┊
++┊  ┊ 8┊@Component({
++┊  ┊ 9┊  selector: 'signup',
++┊  ┊10┊  template
++┊  ┊11┊})
++┊  ┊12┊export class SignupComponent implements OnInit {
++┊  ┊13┊  signupForm: FormGroup;
++┊  ┊14┊  error: string;
++┊  ┊15┊
++┊  ┊16┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
++┊  ┊17┊
++┊  ┊18┊  ngOnInit() {
++┊  ┊19┊    this.signupForm = this.formBuilder.group({
++┊  ┊20┊      email: ['', Validators.required],
++┊  ┊21┊      password: ['', Validators.required]
++┊  ┊22┊    });
++┊  ┊23┊
++┊  ┊24┊    this.error = '';
++┊  ┊25┊  }
++┊  ┊26┊
++┊  ┊27┊  signup() {
++┊  ┊28┊    if (this.signupForm.valid) {
++┊  ┊29┊      Accounts.createUser({
++┊  ┊30┊        email: this.signupForm.value.email,
++┊  ┊31┊        password: this.signupForm.value.password
++┊  ┊32┊      }, (err) => {
++┊  ┊33┊        if (err) {
++┊  ┊34┊          this.zone.run(() => {
++┊  ┊35┊            this.error = err;
++┊  ┊36┊          });
++┊  ┊37┊        } else {
++┊  ┊38┊          this.router.navigate(['/']);
++┊  ┊39┊        }
++┊  ┊40┊      });
++┊  ┊41┊    }
++┊  ┊42┊  }
++┊  ┊43┊}🚫↵
+```
+[}]: #
+
+And the view:
+
+[{]: <helper> (diff_step 19.24)
+#### Step 19.24: Added the signup view
+
+##### Added client/imports/app/auth/signup.component.html
+```diff
+@@ -0,0 +1,32 @@
++┊  ┊ 1┊<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
++┊  ┊ 2┊  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
++┊  ┊ 3┊    <md-toolbar class="md-primary" color="primary">
++┊  ┊ 4┊      Sign up
++┊  ┊ 5┊    </md-toolbar>
++┊  ┊ 6┊
++┊  ┊ 7┊    <div layout="column" layout-fill layout-margin layout-padding>
++┊  ┊ 8┊      <form [formGroup]="signupForm" #f="ngForm" (ngSubmit)="signup()"
++┊  ┊ 9┊            layout="column" layout-fill layout-padding layout-margin>
++┊  ┊10┊
++┊  ┊11┊        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
++┊  ┊12┊        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
++┊  ┊13┊
++┊  ┊14┊        <div layout="row" layout-align="space-between center">
++┊  ┊15┊          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign Up</button>
++┊  ┊16┊        </div>
++┊  ┊17┊      </form>
++┊  ┊18┊
++┊  ┊19┊      <div [hidden]="error == ''">
++┊  ┊20┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
++┊  ┊21┊          <p class="md-body-1">{{ error }}</p>
++┊  ┊22┊        </md-toolbar>
++┊  ┊23┊      </div>
++┊  ┊24┊
++┊  ┊25┊      <md-divider></md-divider>
++┊  ┊26┊
++┊  ┊27┊      <div layout="row" layout-align="center">
++┊  ┊28┊        <a md-button [routerLink]="['/login']">Already a user?</a>
++┊  ┊29┊      </div>
++┊  ┊30┊    </div>
++┊  ┊31┊  </div>
++┊  ┊32┊</div>🚫↵
+```
+[}]: #
+
+And add it to the index file:
+
+[{]: <helper> (diff_step 19.25)
+#### Step 19.25: Added signup component to the index file
+
+##### Changed client/imports/app/auth/index.ts
+```diff
+@@ -1,5 +1,7 @@
+ ┊1┊1┊import {LoginComponent} from "./login.component";
++┊ ┊2┊import {SignupComponent} from "./signup.component";
+ ┊2┊3┊
+ ┊3┊4┊export const AUTH_DECLARATIONS = [
+-┊4┊ ┊  LoginComponent
++┊ ┊5┊  LoginComponent,
++┊ ┊6┊  SignupComponent
+ ┊5┊7┊];
+```
+[}]: #
+
+And the `/signup` route:
+
+[{]: <helper> (diff_step 19.26)
+#### Step 19.26: Added signup route
+
+##### Changed client/imports/app/app.routes.ts
+```diff
+@@ -4,11 +4,13 @@
+ ┊ 4┊ 4┊import { PartiesListComponent } from './parties/parties-list.component';
+ ┊ 5┊ 5┊import { PartyDetailsComponent } from './parties/party-details.component';
+ ┊ 6┊ 6┊import {LoginComponent} from "./auth/login.component";
++┊  ┊ 7┊import {SignupComponent} from "./auth/signup.component";
+ ┊ 7┊ 8┊
+ ┊ 8┊ 9┊export const routes: Route[] = [
+ ┊ 9┊10┊  { path: '', component: PartiesListComponent },
+ ┊10┊11┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
+-┊11┊  ┊  { path: 'login', component: LoginComponent }
++┊  ┊12┊  { path: 'login', component: LoginComponent },
++┊  ┊13┊  { path: 'signup', component: SignupComponent }
+ ┊12┊14┊];
+ ┊13┊15┊
+ ┊14┊16┊export const ROUTES_PROVIDERS = [{
+```
+[}]: #
+
+### Recover component
+
+This component is helfup when a user forgets his password. We'll use `Accounts.forgotPassword` method:
+
+[{]: <helper> (diff_step 19.27)
+#### Step 19.27: Create the recover component
+
+##### Added client/imports/app/auth/recover.component.ts
+```diff
+@@ -0,0 +1,41 @@
++┊  ┊ 1┊import {Component, OnInit, NgZone} from '@angular/core';
++┊  ┊ 2┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
++┊  ┊ 3┊import { Router } from '@angular/router';
++┊  ┊ 4┊import { Accounts } from 'meteor/accounts-base';
++┊  ┊ 5┊
++┊  ┊ 6┊import template from './recover.component.html';
++┊  ┊ 7┊
++┊  ┊ 8┊@Component({
++┊  ┊ 9┊  selector: 'recover',
++┊  ┊10┊  template
++┊  ┊11┊})
++┊  ┊12┊export class RecoverComponent implements OnInit {
++┊  ┊13┊  recoverForm: FormGroup;
++┊  ┊14┊  error: string;
++┊  ┊15┊
++┊  ┊16┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
++┊  ┊17┊
++┊  ┊18┊  ngOnInit() {
++┊  ┊19┊    this.recoverForm = this.formBuilder.group({
++┊  ┊20┊      email: ['', Validators.required]
++┊  ┊21┊    });
++┊  ┊22┊
++┊  ┊23┊    this.error = '';
++┊  ┊24┊  }
++┊  ┊25┊
++┊  ┊26┊  recover() {
++┊  ┊27┊    if (this.recoverForm.valid) {
++┊  ┊28┊      Accounts.forgotPassword({
++┊  ┊29┊        email: this.recoverForm.value.email
++┊  ┊30┊      }, (err) => {
++┊  ┊31┊        if (err) {
++┊  ┊32┊          this.zone.run(() => {
++┊  ┊33┊            this.error = err;
++┊  ┊34┊          });
++┊  ┊35┊        } else {
++┊  ┊36┊          this.router.navigate(['/']);
++┊  ┊37┊        }
++┊  ┊38┊      });
++┊  ┊39┊    }
++┊  ┊40┊  }
++┊  ┊41┊}🚫↵
+```
+[}]: #
+
+Create the view:
+
+[{]: <helper> (diff_step 19.28)
+#### Step 19.28: Create the recover component view
+
+##### Added client/imports/app/auth/recover.component.html
+```diff
+@@ -0,0 +1,31 @@
++┊  ┊ 1┊<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
++┊  ┊ 2┊  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
++┊  ┊ 3┊    <md-toolbar class="md-primary" color="primary">
++┊  ┊ 4┊      Recover Your Password
++┊  ┊ 5┊    </md-toolbar>
++┊  ┊ 6┊
++┊  ┊ 7┊    <div layout="column" layout-fill layout-margin layout-padding>
++┊  ┊ 8┊      <form [formGroup]="recoverForm" #f="ngForm" (ngSubmit)="recover()"
++┊  ┊ 9┊            layout="column" layout-fill layout-padding layout-margin>
++┊  ┊10┊
++┊  ┊11┊        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
++┊  ┊12┊
++┊  ┊13┊        <div layout="row" layout-align="space-between center">
++┊  ┊14┊          <button md-raised-button class="md-primary" type="submit" aria-label="Recover">Recover</button>
++┊  ┊15┊        </div>
++┊  ┊16┊      </form>
++┊  ┊17┊
++┊  ┊18┊      <div [hidden]="error == ''">
++┊  ┊19┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
++┊  ┊20┊          <p class="md-body-1">{{ error }}</p>
++┊  ┊21┊        </md-toolbar>
++┊  ┊22┊      </div>
++┊  ┊23┊
++┊  ┊24┊      <md-divider></md-divider>
++┊  ┊25┊
++┊  ┊26┊      <div layout="row" layout-align="center">
++┊  ┊27┊        <a md-button [routerLink]="['/login']">Remember your password?</a>
++┊  ┊28┊      </div>
++┊  ┊29┊    </div>
++┊  ┊30┊  </div>
++┊  ┊31┊</div>🚫↵
+```
+[}]: #
+
+And add it to the index file:
+
+[{]: <helper> (diff_step 19.29)
+#### Step 19.29: Added the recover component to the index file
+
+##### Changed client/imports/app/auth/index.ts
+```diff
+@@ -1,7 +1,9 @@
+ ┊1┊1┊import {LoginComponent} from "./login.component";
+ ┊2┊2┊import {SignupComponent} from "./signup.component";
++┊ ┊3┊import {RecoverComponent} from "./recover.component";
+ ┊3┊4┊
+ ┊4┊5┊export const AUTH_DECLARATIONS = [
+ ┊5┊6┊  LoginComponent,
+-┊6┊ ┊  SignupComponent
++┊ ┊7┊  SignupComponent,
++┊ ┊8┊  RecoverComponent
+ ┊7┊9┊];
+```
+[}]: #
+
+And add the `/reset` route:
+
+[{]: <helper> (diff_step 19.30)
+#### Step 19.30: Added the recover route
+
+##### Changed client/imports/app/app.routes.ts
+```diff
+@@ -5,12 +5,14 @@
+ ┊ 5┊ 5┊import { PartyDetailsComponent } from './parties/party-details.component';
+ ┊ 6┊ 6┊import {LoginComponent} from "./auth/login.component";
+ ┊ 7┊ 7┊import {SignupComponent} from "./auth/signup.component";
++┊  ┊ 8┊import {RecoverComponent} from "./auth/recover.component";
+ ┊ 8┊ 9┊
+ ┊ 9┊10┊export const routes: Route[] = [
+ ┊10┊11┊  { path: '', component: PartiesListComponent },
+ ┊11┊12┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
+ ┊12┊13┊  { path: 'login', component: LoginComponent },
+-┊13┊  ┊  { path: 'signup', component: SignupComponent }
++┊  ┊14┊  { path: 'signup', component: SignupComponent },
++┊  ┊15┊  { path: 'recover', component: RecoverComponent }
+ ┊14┊16┊];
+ ┊15┊17┊
+ ┊16┊18┊export const ROUTES_PROVIDERS = [{
+```
+[}]: #
+
+That's it! we just implemented our own authentication components using Meteor's Accounts API and Angular2-Material!
+
+> Note that the recovery email won't be sent to the actual email address, since you need to configure `email` package to work with your email provider. you can read more about it [here](https://docs.meteor.com/api/email.html).
+
+# Layout and Flex
+
+In order to use flex and layout that defined in Material, we need to add a bug CSS file into our project, that defined CSS classes for `flex` and `layout`.
+
+You can find the CSS file content [here](https://github.com/Urigo/meteor-angular2.0-socially/blob/246f008895980e63ab19f19c6b184f4eb632723c/client/imports/material-layout.scss).
+
+So let's copy it's content and add it to `meteor-angular2.0-socially/client/imports/material-layout.scss`.
+
+Now let's add it to the main SCSS file imports:
+
+[{]: <helper> (diff_step 19.32)
+#### Step 19.32: Added import in the main scss file
+
+##### Changed client/main.scss
+```diff
+@@ -22,3 +22,5 @@
+ ┊22┊22┊  width: 450px;
+ ┊23┊23┊  height: 450px;
+ ┊24┊24┊}
++┊  ┊25┊
++┊  ┊26┊@import "./imports/material-layout";🚫↵
+```
+[}]: #
+
+And let's add another CSS class missing:
+
+[{]: <helper> (diff_step 19.33)
+#### Step 19.33: Added missing CSS
+
+##### Changed client/main.scss
+```diff
+@@ -23,4 +23,8 @@
+ ┊23┊23┊  height: 450px;
+ ┊24┊24┊}
+ ┊25┊25┊
++┊  ┊26┊.md-whiteframe-z2 {
++┊  ┊27┊  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
++┊  ┊28┊}
++┊  ┊29┊
+ ┊26┊30┊@import "./imports/material-layout";🚫↵
+```
+[}]: #
+
+> The import of this CSS file is temporary, and we will need to use it only because `angular2-material` is still in beta and not implemented all the features.
+
+# Summary
+
+In this chapter we replaced Boostrap4 with Angular2-Material, and updated all the view and layout to match the component we got from it.
+
+We also learnt how to use Meteor's Accounts API and how to implement authentication view and components, and how to connect them to our app.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step18.md) | [Next Step >](step20.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From eb1aff3c20639d7b2ec1b082ea5ad6dbfaad9822 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:53 -0200
Subject: [PATCH 209/304] Step 20: 3rdParty Libraries

---
 manuals/templates/step20.md | 85 +++++++++++++++++++++++++++++++++++++++
 manuals/views/step20.md     | 97 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 182 insertions(+)
 create mode 100644 manuals/templates/step20.md
 create mode 100644 manuals/views/step20.md

diff --git a/manuals/templates/step20.md b/manuals/templates/step20.md
new file mode 100644
index 0000000..e7874f9
--- /dev/null
+++ b/manuals/templates/step20.md
@@ -0,0 +1,85 @@
+This part of the tutorial will cover the usage of third-party libraries with angular2-meteor.
+
+Parts of this tutorial are also relevant for users who uses only Meteor, without angular2-meteor, because the solution for third-party libraries comes from Meteor packaging manager - **Atmosphere**.
+
+With release of Meteor 1.3 it is also possible to use **NPM**! It opens a lot of new opportunities. In fact, if it possible you should always use packages from NPM instead of Atmosphere.
+
+In this part of the tutorial we will show multiple solution for the same problem - using third-party libraries with Meteor and angular2-meteor.
+
+
+Every Angular 2 developer knows and uses third-party libraries, but because we do not have the ability to easily include the ".js" file on our "head" tag - we need another solutions.
+
+# NPM
+
+To use third-party libraries in your Meteor project - you can easily use
+
+    meteor npm install PACKAGE_NAME --save
+
+command to add the new package.
+
+For example, in order to use **[ng2-pagination](https://www.npmjs.com/package/ng2-pagination)** in your project, easily run this command:
+
+    meteor npm install ng2-pagination --save
+
+You need to import the external module into your own `NgModule`, like we did in the previous steps.
+
+And then just use the ng2-pagination on your angular2-meteor project:
+
+```js
+import {
+  Component,
+} from '@angular/core';
+
+import {
+  PaginatePipe,
+  PaginationControlsCmp,
+  PaginationService,
+} from 'ng2-pagination';
+
+@Component({
+  selector: 'my-component',
+  template: `
+    <ul>
+      <li *ngFor="let item of collection | paginate: { itemsPerPage: 10, currentPage: p }"> ... </li>
+    </ul>
+
+    <pagination-controls (pageChange)="p = $event"></pagination-controls>
+  `
+})
+export class MyComponent {
+  public collection: any[] = someArrayOfThings;  
+}
+
+```
+
+# Atmosphere
+
+In order to add third-party libraries to your Meteor project - you can use the `meteor add PACKAGE_NAME` command to add the package.
+
+Also, for **most** of the Angular 2 third-party libraries - there's already a Meteor package (which is an equivalent to bower or NPM).
+
+You can search for those packages using the [Atmosphere](https://atmospherejs.com/) website.
+
+But as we said before, the most recommended practice is to use a package from NPM, instead of its equivalent in Atmopshere which in the most cases is just a wrapper package.
+
+For example, in order to use **[ng2-pagination](https://atmospherejs.com/barbatus/ng2-pagination)** in your project, easily run this command:
+
+```
+meteor add barbatus:ng2-pagination
+```
+
+And then just use the ng2-pagination on your angular2-meteor project:
+
+```js
+import {
+  PaginatePipe,
+  PaginationControlsCmp,
+  PaginationService,
+} from 'meteor/barbatus:ng2-pagination';
+```
+
+# More about packages
+
+Atmosphere packages has few advantages over node modules. The most important one is that you cannot specify in node module which files should be on the client-side and which will be used on the server-side. You can always create two packages with -client and -server suffixes.
+
+We recommend you to read more about packages in [Meteor Docs](http://docs.meteor.com/#/full/packagejs).
diff --git a/manuals/views/step20.md b/manuals/views/step20.md
new file mode 100644
index 0000000..a951376
--- /dev/null
+++ b/manuals/views/step20.md
@@ -0,0 +1,97 @@
+[{]: <region> (header)
+# Step 20: 3rdParty Libraries
+[}]: #
+[{]: <region> (body)
+This part of the tutorial will cover the usage of third-party libraries with angular2-meteor.
+
+Parts of this tutorial are also relevant for users who uses only Meteor, without angular2-meteor, because the solution for third-party libraries comes from Meteor packaging manager - **Atmosphere**.
+
+With release of Meteor 1.3 it is also possible to use **NPM**! It opens a lot of new opportunities. In fact, if it possible you should always use packages from NPM instead of Atmosphere.
+
+In this part of the tutorial we will show multiple solution for the same problem - using third-party libraries with Meteor and angular2-meteor.
+
+
+Every Angular 2 developer knows and uses third-party libraries, but because we do not have the ability to easily include the ".js" file on our "head" tag - we need another solutions.
+
+# NPM
+
+To use third-party libraries in your Meteor project - you can easily use
+
+    meteor npm install PACKAGE_NAME --save
+
+command to add the new package.
+
+For example, in order to use **[ng2-pagination](https://www.npmjs.com/package/ng2-pagination)** in your project, easily run this command:
+
+    meteor npm install ng2-pagination --save
+
+You need to import the external module into your own `NgModule`, like we did in the previous steps.
+
+And then just use the ng2-pagination on your angular2-meteor project:
+
+```js
+import {
+  Component,
+} from '@angular/core';
+
+import {
+  PaginatePipe,
+  PaginationControlsCmp,
+  PaginationService,
+} from 'ng2-pagination';
+
+@Component({
+  selector: 'my-component',
+  template: `
+    <ul>
+      <li *ngFor="let item of collection | paginate: { itemsPerPage: 10, currentPage: p }"> ... </li>
+    </ul>
+
+    <pagination-controls (pageChange)="p = $event"></pagination-controls>
+  `
+})
+export class MyComponent {
+  public collection: any[] = someArrayOfThings;  
+}
+
+```
+
+# Atmosphere
+
+In order to add third-party libraries to your Meteor project - you can use the `meteor add PACKAGE_NAME` command to add the package.
+
+Also, for **most** of the Angular 2 third-party libraries - there's already a Meteor package (which is an equivalent to bower or NPM).
+
+You can search for those packages using the [Atmosphere](https://atmospherejs.com/) website.
+
+But as we said before, the most recommended practice is to use a package from NPM, instead of its equivalent in Atmopshere which in the most cases is just a wrapper package.
+
+For example, in order to use **[ng2-pagination](https://atmospherejs.com/barbatus/ng2-pagination)** in your project, easily run this command:
+
+```
+meteor add barbatus:ng2-pagination
+```
+
+And then just use the ng2-pagination on your angular2-meteor project:
+
+```js
+import {
+  PaginatePipe,
+  PaginationControlsCmp,
+  PaginationService,
+} from 'meteor/barbatus:ng2-pagination';
+```
+
+# More about packages
+
+Atmosphere packages has few advantages over node modules. The most important one is that you cannot specify in node module which files should be on the client-side and which will be used on the server-side. You can always create two packages with -client and -server suffixes.
+
+We recommend you to read more about packages in [Meteor Docs](http://docs.meteor.com/#/full/packagejs).
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step19.md) | [Next Step >](step21.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 91c582d809d9ff4e6873a9cd0877a1b972d48111 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:57:57 +0300
Subject: [PATCH 210/304] Step 21.1: Added jalik:ufs and jalik:ufs-gridfs

---
 .meteor/packages | 2 ++
 .meteor/versions | 5 ++++-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/.meteor/packages b/.meteor/packages
index 22ef14f..637554b 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -25,3 +25,5 @@ accounts-password
 tmeasday:publish-counts
 check
 email
+jalik:ufs
+jalik:ufs-gridfs
diff --git a/.meteor/versions b/.meteor/versions
index a60f9df..50fe94e 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -42,11 +42,14 @@ htmljs@1.0.11
 http@1.1.8
 hwillson:stub-collections@1.0.2
 id-map@1.0.9
+jalik:ufs@0.7.1_1
+jalik:ufs-gridfs@0.1.4
 jquery@1.11.10
 launch-screen@1.0.12
 livedata@1.0.18
 localstorage@1.0.12
 logging@1.1.16
+matb33:collection-hooks@0.8.4
 meteor@1.6.0
 meteor-base@1.0.4
 minifier-css@1.2.15
@@ -84,7 +87,7 @@ standard-minifier-css@1.3.2
 standard-minifier-js@1.2.1
 templating@1.1.14
 templating-tools@1.0.5
-tmeasday:publish-counts@0.7.3
+tmeasday:publish-counts@0.8.0
 tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.1
 ui@1.0.12
-- 
2.10.2


From 5690af8e534e26e6330cd7a4c4e756877ca037f0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:59:30 +0300
Subject: [PATCH 211/304] Step 21.2: Create Images and Thumbs collections

---
 both/collections/images.collection.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 both/collections/images.collection.ts

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
new file mode 100644
index 0000000..efda337
--- /dev/null
+++ b/both/collections/images.collection.ts
@@ -0,0 +1,5 @@
+import { MongoObservable } from 'meteor-rxjs';
+import { Meteor } from 'meteor/meteor';
+
+export const Images = new MongoObservable.Collection('images');
+export const Thumbs = new MongoObservable.Collection('thumbs');
-- 
2.10.2


From 5b92c403a22a007d3ba3765f06a59369326c0dda Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 13:59:58 +0300
Subject: [PATCH 212/304] Step 21.3: Define Image interface

---
 both/models/image.model.ts | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 both/models/image.model.ts

diff --git a/both/models/image.model.ts b/both/models/image.model.ts
new file mode 100644
index 0000000..c4918e1
--- /dev/null
+++ b/both/models/image.model.ts
@@ -0,0 +1,15 @@
+export interface Image {
+  _id?: string;
+  complete: boolean;
+  extension: string;
+  name: string;
+  progress: number;
+  size: number;
+  store: string;
+  token: string;
+  type: string;
+  uploadedAt: Date;
+  uploading: boolean;
+  url: string;
+  userId?: string;
+}
\ No newline at end of file
-- 
2.10.2


From 8e254f1c4647e9aca717033e02e61e91939de460 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:00:20 +0300
Subject: [PATCH 213/304] Step 21.4: Define Thumbs interface

---
 both/models/image.model.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/both/models/image.model.ts b/both/models/image.model.ts
index c4918e1..9464d8a 100644
--- a/both/models/image.model.ts
+++ b/both/models/image.model.ts
@@ -12,4 +12,9 @@ export interface Image {
   uploading: boolean;
   url: string;
   userId?: string;
+}
+
+export interface Thumb extends Image  {
+  originalStore?: string;
+  originalId?: string;
 }
\ No newline at end of file
-- 
2.10.2


From 2004a509f2056048b6681dd0ab53645eed79176f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:00:46 +0300
Subject: [PATCH 214/304] Step 21.5: Add interfaces to Mongo Collections

---
 both/collections/images.collection.ts | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
index efda337..2c5ab30 100644
--- a/both/collections/images.collection.ts
+++ b/both/collections/images.collection.ts
@@ -1,5 +1,6 @@
 import { MongoObservable } from 'meteor-rxjs';
 import { Meteor } from 'meteor/meteor';
+import { Thumb, Image } from "../models/image.model";
 
-export const Images = new MongoObservable.Collection('images');
-export const Thumbs = new MongoObservable.Collection('thumbs');
+export const Images = new MongoObservable.Collection<Image>('images');
+export const Thumbs = new MongoObservable.Collection<Thumb>('thumbs');
-- 
2.10.2


From ff9513b210a621fcee7b41d54fbf0c7eaef89883 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:01:42 +0300
Subject: [PATCH 215/304] Step 21.6: Create stores for Images and Thumbs

---
 both/collections/images.collection.ts | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
index 2c5ab30..91374f3 100644
--- a/both/collections/images.collection.ts
+++ b/both/collections/images.collection.ts
@@ -1,6 +1,38 @@
 import { MongoObservable } from 'meteor-rxjs';
 import { Meteor } from 'meteor/meteor';
+import { UploadFS } from 'meteor/jalik:ufs';
 import { Thumb, Image } from "../models/image.model";
 
 export const Images = new MongoObservable.Collection<Image>('images');
 export const Thumbs = new MongoObservable.Collection<Thumb>('thumbs');
+
+function loggedIn(userId) {
+  return !!userId;
+}
+
+export const ThumbsStore = new UploadFS.store.GridFS({
+  collection: Thumbs.collection,
+  name: 'thumbs',
+  permissions: new UploadFS.StorePermissions({
+    insert: loggedIn,
+    update: loggedIn,
+    remove: loggedIn
+  })
+});
+
+export const ImagesStore = new UploadFS.store.GridFS({
+  collection: Images.collection,
+  name: 'images',
+  filter: new UploadFS.Filter({
+    contentTypes: ['image/*']
+  }),
+  copyTo: [
+    ThumbsStore
+  ],
+  permissions: new UploadFS.StorePermissions({
+    insert: loggedIn,
+    update: loggedIn,
+    remove: loggedIn
+  })
+});
+
-- 
2.10.2


From 73589b688d060e177917c366e948a48a9a8f07be Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:02:18 +0300
Subject: [PATCH 216/304] Step 21.7: Resize images

---
 both/collections/images.collection.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/both/collections/images.collection.ts b/both/collections/images.collection.ts
index 91374f3..22db0ca 100644
--- a/both/collections/images.collection.ts
+++ b/both/collections/images.collection.ts
@@ -17,7 +17,19 @@ export const ThumbsStore = new UploadFS.store.GridFS({
     insert: loggedIn,
     update: loggedIn,
     remove: loggedIn
-  })
+  }),
+  transformWrite(from, to, fileId, file) {
+    // Resize to 32x32
+    const gm = require('gm');
+
+    gm(from, file.name)
+      .resize(32, 32)
+      .gravity('Center')
+      .extent(32, 32)
+      .quality(75)
+      .stream()
+      .pipe(to);
+  }
 });
 
 export const ImagesStore = new UploadFS.store.GridFS({
-- 
2.10.2


From 0ac705a013c437ab7014bf23411b3be3e2dc2ec3 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 13:31:03 +0300
Subject: [PATCH 217/304] Step 21.8: Added NodeJS typings

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index c8bc2ac..a7e706b 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "@angular/platform-browser-dynamic": "2.1.2",
     "@angular/router": "3.1.2",
     "@angular/material": "2.0.0-alpha.9-3",
+    "@types/node": "^6.0.45",
     "angular2-google-maps": "0.15.0",
     "angular2-meteor": "0.7.0",
     "angular2-meteor-accounts-ui": "1.0.0",
-- 
2.10.2


From d8a5c11c24f8ac053f0931d24e35599de7515567 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 13:55:55 +0300
Subject: [PATCH 218/304] Step 21.9: Import NodeJS @types

---
 typings.d.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/typings.d.ts b/typings.d.ts
index 88c4daf..2376734 100644
--- a/typings.d.ts
+++ b/typings.d.ts
@@ -1,6 +1,7 @@
 /// <reference types="zone.js" />
 /// <reference types="meteor-typings" />
 /// <reference types="@types/underscore" />
+/// <reference types="@types/node" />
 
 declare module '*.html' {
   const template: string;
-- 
2.10.2


From 80edf52e14affa9cb34bd0c45333185e13ac15c1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:02:54 +0300
Subject: [PATCH 219/304] Step 21.10: Install gm

---
 package.json | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/package.json b/package.json
index a7e706b..0231dc8 100644
--- a/package.json
+++ b/package.json
@@ -11,23 +11,27 @@
     "@angular/compiler": "2.1.2",
     "@angular/core": "2.1.2",
     "@angular/forms": "2.1.2",
+    "@angular/material": "2.0.0-alpha.9-3",
     "@angular/platform-browser": "2.1.2",
     "@angular/platform-browser-dynamic": "2.1.2",
     "@angular/router": "3.1.2",
-    "@angular/material": "2.0.0-alpha.9-3",
     "@types/node": "^6.0.45",
     "angular2-google-maps": "0.15.0",
     "angular2-meteor": "0.7.0",
     "angular2-meteor-accounts-ui": "1.0.0",
     "angular2-meteor-polyfills": "^0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
+    "gm": "1.23.0",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
+    "meteor-typings": "1.3.1",
     "ng2-pagination": "0.5.1",
     "reflect-metadata": "0.1.8",
     "rxjs": "5.0.0-beta.12",
-    "zone.js": "0.6.26",
-    "meteor-typings": "1.3.1"
+    "spawn-sync": "1.0.15",
+    "thread-sleep": "1.0.4",
+    "try-thread-sleep": "1.0.0",
+    "zone.js": "0.6.26"
   },
   "devDependencies": {
     "@types/chai": "^3.4.33",
-- 
2.10.2


From e629ad2f548d59a3743fcd579841bbbb0fd17386 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:24:07 +0300
Subject: [PATCH 220/304] Step 21.11: Install angular2-file-drop

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 0231dc8..5e29903 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "@angular/platform-browser": "2.1.2",
     "@angular/platform-browser-dynamic": "2.1.2",
     "@angular/router": "3.1.2",
+    "angular2-file-drop": "0.0.5",
     "@types/node": "^6.0.45",
     "angular2-google-maps": "0.15.0",
     "angular2-meteor": "0.7.0",
-- 
2.10.2


From be611c2db5a510c0404daa81613c023d98a7996b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:24:19 +0300
Subject: [PATCH 221/304] Step 21.12: Include file drop module

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 8a061ac..5139c77 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -12,6 +12,7 @@ import { PARTIES_DECLARATIONS } from './parties';
 import { SHARED_DECLARATIONS } from './shared';
 import { MaterialModule } from "@angular/material";
 import { AUTH_DECLARATIONS } from "./auth/index";
+import { FileDropModule } from "angular2-file-drop";
 
 @NgModule({
   imports: [
@@ -24,7 +25,8 @@ import { AUTH_DECLARATIONS } from "./auth/index";
     AgmCoreModule.forRoot({
       apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
     }),
-    MaterialModule.forRoot()
+    MaterialModule.forRoot(),
+    FileDropModule
   ],
   declarations: [
     AppComponent,
-- 
2.10.2


From 2671467303fd1781f60281b1421cead7b341d4f4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:25:01 +0300
Subject: [PATCH 222/304] Step 21.13: Create a view for an upload

---
 client/imports/app/parties/parties-upload.component.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/app/parties/parties-upload.component.html

diff --git a/client/imports/app/parties/parties-upload.component.html b/client/imports/app/parties/parties-upload.component.html
new file mode 100644
index 0000000..828dd4c
--- /dev/null
+++ b/client/imports/app/parties/parties-upload.component.html
@@ -0,0 +1,5 @@
+<div class="parties-update-container">
+  <div>
+    <div>Drop an image to here</div>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 041218f1f78d14fef786cef64f075a556c3d241d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:25:46 +0300
Subject: [PATCH 223/304] Step 21.14: Create a PartiesUpload component

---
 client/imports/app/parties/parties-upload.component.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 client/imports/app/parties/parties-upload.component.ts

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
new file mode 100644
index 0000000..36a61be
--- /dev/null
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -0,0 +1,11 @@
+import { Component } from '@angular/core';
+
+import template from './parties-upload.component.html';
+
+@Component({
+  selector: 'parties-upload',
+  template
+})
+export class PartiesUploadComponent {
+  constructor() {}
+}
\ No newline at end of file
-- 
2.10.2


From 9ae01eec2569844dfaf44f77e2f1d6166696efae Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:25:59 +0300
Subject: [PATCH 224/304] Step 21.15: Added  PartiesUpload component to the
 index file

---
 client/imports/app/parties/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/index.ts b/client/imports/app/parties/index.ts
index ae09066..7a1b315 100644
--- a/client/imports/app/parties/index.ts
+++ b/client/imports/app/parties/index.ts
@@ -1,9 +1,11 @@
 import { PartiesFormComponent } from './parties-form.component';
 import { PartiesListComponent } from './parties-list.component';
 import { PartyDetailsComponent } from './party-details.component';
+import {PartiesUploadComponent} from "./parties-upload.component";
 
 export const PARTIES_DECLARATIONS = [
   PartiesFormComponent,
   PartiesListComponent,
-  PartyDetailsComponent
+  PartyDetailsComponent,
+  PartiesUploadComponent
 ];
-- 
2.10.2


From 8c52d86bd988bfb88486472c5a8c96800a959518 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:26:53 +0300
Subject: [PATCH 225/304] Step 21.16: Use PartiesUploadComponent inside the
 form

---
 client/imports/app/parties/parties-form.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index 932b233..5632bba 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -17,6 +17,7 @@
               <br/>
               <md-checkbox formControlName="public">Public party?</md-checkbox>
               <br/><br/>
+              <parties-upload #upload></parties-upload>
               <button color="accent" md-raised-button type="submit">Add my party!</button>
             </div>
             <div class="form-extras">
-- 
2.10.2


From eb33f1848c26287cb43e189c17d0a87f9861b220 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:27:41 +0300
Subject: [PATCH 226/304] Step 21.17: Add bindings to FileDrop

---
 client/imports/app/parties/parties-upload.component.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.html b/client/imports/app/parties/parties-upload.component.html
index 828dd4c..4c77c63 100644
--- a/client/imports/app/parties/parties-upload.component.html
+++ b/client/imports/app/parties/parties-upload.component.html
@@ -1,5 +1,8 @@
 <div class="parties-update-container">
-  <div>
+  <div fileDrop
+       [ngClass]="{'file-is-over': fileIsOver}"
+       (fileOver)="fileOver($event)"
+       (onFileDrop)="onFileDrop($event)">
     <div>Drop an image to here</div>
   </div>
 </div>
\ No newline at end of file
-- 
2.10.2


From e1d9720318cc7fefc7770b1fbb0b228dc3470869 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:28:09 +0300
Subject: [PATCH 227/304] Step 21.18: Handle fileIsOver

---
 client/imports/app/parties/parties-upload.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index 36a61be..48d42e0 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -7,5 +7,11 @@ import template from './parties-upload.component.html';
   template
 })
 export class PartiesUploadComponent {
+  fileIsOver: boolean = false;
+
   constructor() {}
+
+  fileOver(fileIsOver: boolean): void {
+    this.fileIsOver = fileIsOver;
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 96132f9d2c46f8062de09ff6aa404cbc84fad8c0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:28:34 +0300
Subject: [PATCH 228/304] Step 21.19: Implement onFileDrop method

---
 client/imports/app/parties/parties-upload.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index 48d42e0..1e95a62 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -14,4 +14,8 @@ export class PartiesUploadComponent {
   fileOver(fileIsOver: boolean): void {
     this.fileIsOver = fileIsOver;
   }
+
+  onFileDrop(file: File): void {
+    console.log('Got file');
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 7f923dad5426645947c449d58b6840da2cf4e94b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:30:38 +0300
Subject: [PATCH 229/304] Step 21.20: Implement the upload method

---
 both/methods/images.methods.ts | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)
 create mode 100644 both/methods/images.methods.ts

diff --git a/both/methods/images.methods.ts b/both/methods/images.methods.ts
new file mode 100644
index 0000000..8bfb27e
--- /dev/null
+++ b/both/methods/images.methods.ts
@@ -0,0 +1,23 @@
+import { UploadFS } from 'meteor/jalik:ufs';
+import { ImagesStore } from '../collections/images.collection';
+
+export function upload(data: File): Promise<any> {
+  return new Promise((resolve, reject) => {
+    // pick from an object only: name, type and size
+    const file = {
+      name: data.name,
+      type: data.type,
+      size: data.size,
+    };
+
+    const upload = new UploadFS.Uploader({
+      data,
+      file,
+      store: ImagesStore,
+      onError: reject,
+      onComplete: resolve
+    });
+
+    upload.start();
+  });
+}
\ No newline at end of file
-- 
2.10.2


From 92c5204263cd5dd299a29cb4211b2db7a3df6edc Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:31:37 +0300
Subject: [PATCH 230/304] Step 21.21: Use the upload function

---
 client/imports/app/parties/parties-upload.component.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index 1e95a62..8e6180b 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -2,12 +2,15 @@ import { Component } from '@angular/core';
 
 import template from './parties-upload.component.html';
 
+import { upload } from '../../../../both/methods/images.methods';
+
 @Component({
   selector: 'parties-upload',
   template
 })
 export class PartiesUploadComponent {
   fileIsOver: boolean = false;
+  uploading: boolean = false;
 
   constructor() {}
 
@@ -16,6 +19,15 @@ export class PartiesUploadComponent {
   }
 
   onFileDrop(file: File): void {
-    console.log('Got file');
+    this.uploading = true;
+
+    upload(file)
+      .then(() => {
+        this.uploading = false;
+      })
+      .catch((error) => {
+        this.uploading = false;
+        console.log(`Something went wrong!`, error);
+      });
   }
 }
\ No newline at end of file
-- 
2.10.2


From 4310583260fa4a0de62ea1a98872c215332cd329 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:32:31 +0300
Subject: [PATCH 231/304] Step 21.22: Declare meteor/jalik:ufs module

---
 typings/jalik-ufs.d.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 typings/jalik-ufs.d.ts

diff --git a/typings/jalik-ufs.d.ts b/typings/jalik-ufs.d.ts
new file mode 100644
index 0000000..f2d4383
--- /dev/null
+++ b/typings/jalik-ufs.d.ts
@@ -0,0 +1,11 @@
+declare module "meteor/jalik:ufs" {
+  interface Uploader {
+    start: () => void;
+  }
+
+  interface UploadFS {
+    Uploader: (options: any) => Uploader;
+  }
+
+  export var UploadFS;
+}
\ No newline at end of file
-- 
2.10.2


From f21a275a9507f41d804860eb8a86d634e6791052 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:34:11 +0300
Subject: [PATCH 232/304] Step 21.23: Implement classes

---
 client/imports/app/parties/parties-upload.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.html b/client/imports/app/parties/parties-upload.component.html
index 4c77c63..63918dc 100644
--- a/client/imports/app/parties/parties-upload.component.html
+++ b/client/imports/app/parties/parties-upload.component.html
@@ -1,6 +1,6 @@
 <div class="parties-update-container">
   <div fileDrop
-       [ngClass]="{'file-is-over': fileIsOver}"
+       [ngClass]="{'file-is-over': fileIsOver, 'file-uploading': uploading}"
        (fileOver)="fileOver($event)"
        (onFileDrop)="onFileDrop($event)">
     <div>Drop an image to here</div>
-- 
2.10.2


From 69e91141d67f64da5afe84889cd3267bfb924927 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:34:51 +0300
Subject: [PATCH 233/304] Step 21.24: Implement publications of Images and
 Thumbs

---
 server/imports/publications/images.ts | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 server/imports/publications/images.ts

diff --git a/server/imports/publications/images.ts b/server/imports/publications/images.ts
new file mode 100644
index 0000000..1367a0c
--- /dev/null
+++ b/server/imports/publications/images.ts
@@ -0,0 +1,15 @@
+import { Meteor } from 'meteor/meteor';
+import { Thumbs, Images } from '../../../both/collections/images.collection';
+
+Meteor.publish('thumbs', function(ids: string[]) {
+  return Thumbs.collection.find({
+    originalStore: 'images',
+    originalId: {
+      $in: ids
+    }
+  });
+});
+
+Meteor.publish('images', function() {
+  return Images.collection.find({});
+});
\ No newline at end of file
-- 
2.10.2


From ff0b26b44ae460cb52675ce2a208d95289052dc6 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:35:15 +0300
Subject: [PATCH 234/304] Step 21.25: Import those publications in the server
 entry point

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index 7979c05..92ff846 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -5,6 +5,7 @@ import { loadParties } from './imports/fixtures/parties';
 import './imports/publications/parties';
 import './imports/publications/users';
 import '../both/methods/parties.methods';
+import './imports/publications/images';
 
 Meteor.startup(() => {
   loadParties();
-- 
2.10.2


From 94e2b85923b1334cc43570ea7c43703fd80c7448 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:41:14 +0300
Subject: [PATCH 235/304] Step 21.26: Use RxJS to keep track of files

---
 client/imports/app/parties/parties-upload.component.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index 8e6180b..f51ae47 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -1,9 +1,11 @@
-import { Component } from '@angular/core';
+import {Component} from '@angular/core';
 
 import template from './parties-upload.component.html';
 
 import { upload } from '../../../../both/methods/images.methods';
 
+import {Subject, Subscription} from "rxjs";
+
 @Component({
   selector: 'parties-upload',
   template
@@ -11,6 +13,7 @@ import { upload } from '../../../../both/methods/images.methods';
 export class PartiesUploadComponent {
   fileIsOver: boolean = false;
   uploading: boolean = false;
+  files: Subject<string[]> = new Subject<string[]>();
 
   constructor() {}
 
-- 
2.10.2


From 1b4f2a5a951dc05eec1fdb1f42e837fe4255192b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:41:55 +0300
Subject: [PATCH 236/304] Step 21.27: Subscribe to the thumbs publication

---
 .../imports/app/parties/parties-upload.component.ts  | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index f51ae47..33a0c75 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -1,22 +1,36 @@
-import {Component} from '@angular/core';
+import {Component, OnInit} from '@angular/core';
 
 import template from './parties-upload.component.html';
 
 import { upload } from '../../../../both/methods/images.methods';
-
 import {Subject, Subscription} from "rxjs";
+import {MeteorObservable} from "meteor-rxjs";
 
 @Component({
   selector: 'parties-upload',
   template
 })
-export class PartiesUploadComponent {
+export class PartiesUploadComponent implements OnInit {
   fileIsOver: boolean = false;
   uploading: boolean = false;
   files: Subject<string[]> = new Subject<string[]>();
+  thumbsSubscription: Subscription;
 
   constructor() {}
 
+  ngOnInit() {
+    this.files.subscribe((filesArray) => {
+      MeteorObservable.autorun().subscribe(() => {
+        if (this.thumbsSubscription) {
+          this.thumbsSubscription.unsubscribe();
+          this.thumbsSubscription = undefined;
+        }
+
+        this.thumbsSubscription = MeteorObservable.subscribe("thumbs", filesArray).subscribe();
+      });
+    });
+  }
+
   fileOver(fileIsOver: boolean): void {
     this.fileIsOver = fileIsOver;
   }
-- 
2.10.2


From cc5dbd747a898afc87a233f06d898f2c305b68fd Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:45:34 +0300
Subject: [PATCH 237/304] Step 21.28: Look for the thumbnails

---
 client/imports/app/parties/parties-upload.component.ts | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index 33a0c75..cdba392 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -3,8 +3,10 @@ import {Component, OnInit} from '@angular/core';
 import template from './parties-upload.component.html';
 
 import { upload } from '../../../../both/methods/images.methods';
-import {Subject, Subscription} from "rxjs";
+import {Subject, Subscription, Observable} from "rxjs";
 import {MeteorObservable} from "meteor-rxjs";
+import {Thumb} from "../../../../both/models/image.model";
+import {Thumbs} from "../../../../both/collections/images.collection";
 
 @Component({
   selector: 'parties-upload',
@@ -15,6 +17,7 @@ export class PartiesUploadComponent implements OnInit {
   uploading: boolean = false;
   files: Subject<string[]> = new Subject<string[]>();
   thumbsSubscription: Subscription;
+  thumbs: Observable<Thumb[]>;
 
   constructor() {}
 
@@ -26,7 +29,14 @@ export class PartiesUploadComponent implements OnInit {
           this.thumbsSubscription = undefined;
         }
 
-        this.thumbsSubscription = MeteorObservable.subscribe("thumbs", filesArray).subscribe();
+        this.thumbsSubscription = MeteorObservable.subscribe("thumbs", filesArray).subscribe(() => {
+          this.thumbs = Thumbs.find({
+            originalStore: 'images',
+            originalId: {
+              $in: filesArray
+            }
+          }).zone();
+        });
       });
     });
   }
-- 
2.10.2


From abc8c3af3953ead77c3d887118608658b994e97b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:46:04 +0300
Subject: [PATCH 238/304] Step 21.29: Implement the thumbnails in the view

---
 client/imports/app/parties/parties-upload.component.html | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/app/parties/parties-upload.component.html b/client/imports/app/parties/parties-upload.component.html
index 63918dc..1697d45 100644
--- a/client/imports/app/parties/parties-upload.component.html
+++ b/client/imports/app/parties/parties-upload.component.html
@@ -5,4 +5,10 @@
        (onFileDrop)="onFileDrop($event)">
     <div>Drop an image to here</div>
   </div>
+  <div *ngIf="thumbs" class="thumbs">
+    <div *ngFor="let thumb of thumbs | async" class="thumb">
+      <img [src]="thumb.url"/>
+    </div>
+    <div class="clear"></div>
+  </div>
 </div>
\ No newline at end of file
-- 
2.10.2


From d96d9508f1adc892ece407505f86cf120402ca79 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:46:34 +0300
Subject: [PATCH 239/304] Step 21.30: Basic styles

---
 .../app/parties/parties-upload.component.scss      | 46 ++++++++++++++++++++++
 1 file changed, 46 insertions(+)
 create mode 100644 client/imports/app/parties/parties-upload.component.scss

diff --git a/client/imports/app/parties/parties-upload.component.scss b/client/imports/app/parties/parties-upload.component.scss
new file mode 100644
index 0000000..823e601
--- /dev/null
+++ b/client/imports/app/parties/parties-upload.component.scss
@@ -0,0 +1,46 @@
+.file-uploading {
+  opacity: 0.3;
+}
+
+.file-is-over {
+  opacity: 0.7;
+}
+
+.parties-update-container {
+  width: 90%;
+  margin: 15px;
+
+  .thumbs {
+    margin-top: 10px;
+    margin-bottom: 10px;
+
+    .clear {
+      clear: both;
+    }
+
+    .thumb {
+      float: left;
+      width: 60px;
+      height: 60px;
+      display: flex;
+      justify-content: center;
+      align-items: center;
+      overflow: hidden;
+      margin-right: 5px;
+
+      img {
+        flex-shrink: 0;
+        min-width: 100%;
+        min-height: 100%
+      }
+    }
+  }
+}
+
+[filedrop] {
+  width: 100%;
+  height: 60px;
+  line-height: 60px;
+  text-align: center;
+  border: 3px dashed rgba(255, 255, 255, 0.7);
+}
\ No newline at end of file
-- 
2.10.2


From a3ac8b9ce38a96c9b861855958030775e4650d4e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 25 Oct 2016 13:24:03 +0300
Subject: [PATCH 240/304] Step 21.31: Added import for the styles file

---
 client/imports/app/parties/parties-upload.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index cdba392..e33859a 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -1,6 +1,7 @@
 import {Component, OnInit} from '@angular/core';
 
 import template from './parties-upload.component.html';
+import style from './parties-upload.component.scss';
 
 import { upload } from '../../../../both/methods/images.methods';
 import {Subject, Subscription, Observable} from "rxjs";
@@ -10,7 +11,8 @@ import {Thumbs} from "../../../../both/collections/images.collection";
 
 @Component({
   selector: 'parties-upload',
-  template
+  template,
+  styles: [ style ]
 })
 export class PartiesUploadComponent implements OnInit {
   fileIsOver: boolean = false;
-- 
2.10.2


From 6e486cd656c057d0ab550503dc01715fbda699a3 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 14:49:01 +0300
Subject: [PATCH 241/304] Step 21.32: Handle file upload

---
 client/imports/app/parties/parties-upload.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index e33859a..8b40f32 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -17,6 +17,7 @@ import {Thumbs} from "../../../../both/collections/images.collection";
 export class PartiesUploadComponent implements OnInit {
   fileIsOver: boolean = false;
   uploading: boolean = false;
+  filesArray: string[] = [];
   files: Subject<string[]> = new Subject<string[]>();
   thumbsSubscription: Subscription;
   thumbs: Observable<Thumb[]>;
@@ -51,12 +52,18 @@ export class PartiesUploadComponent implements OnInit {
     this.uploading = true;
 
     upload(file)
-      .then(() => {
+      .then((result) => {
         this.uploading = false;
+        this.addFile(result);
       })
       .catch((error) => {
         this.uploading = false;
         console.log(`Something went wrong!`, error);
       });
   }
+
+  addFile(file) {
+    this.filesArray.push(file._id);
+    this.files.next(this.filesArray);
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 9aa7e591bfc5eca00183629b35c3fea644743917 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:10:26 +0300
Subject: [PATCH 242/304] Step 21.33: Emit event with the new file

---
 client/imports/app/parties/parties-upload.component.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index 8b40f32..f2ad44d 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -1,4 +1,4 @@
-import {Component, OnInit} from '@angular/core';
+import {Component, OnInit, EventEmitter, Output} from '@angular/core';
 
 import template from './parties-upload.component.html';
 import style from './parties-upload.component.scss';
@@ -21,6 +21,7 @@ export class PartiesUploadComponent implements OnInit {
   files: Subject<string[]> = new Subject<string[]>();
   thumbsSubscription: Subscription;
   thumbs: Observable<Thumb[]>;
+  @Output() onFile: EventEmitter<string> = new EventEmitter<string>();
 
   constructor() {}
 
@@ -65,5 +66,6 @@ export class PartiesUploadComponent implements OnInit {
   addFile(file) {
     this.filesArray.push(file._id);
     this.files.next(this.filesArray);
+    this.onFile.emit(file._id);
   }
 }
\ No newline at end of file
-- 
2.10.2


From daa0e854c36fbb3718a455927f6c9172414d30a8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:11:01 +0300
Subject: [PATCH 243/304] Step 21.34: Add images to the PartiesForm component

---
 client/imports/app/parties/parties-form.component.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/app/parties/parties-form.component.ts b/client/imports/app/parties/parties-form.component.ts
index 25a58dd..845930f 100644
--- a/client/imports/app/parties/parties-form.component.ts
+++ b/client/imports/app/parties/parties-form.component.ts
@@ -14,6 +14,7 @@ import style from './parties-form.component.scss';
 export class PartiesFormComponent implements OnInit {
   addForm: FormGroup;
   newPartyPosition: {lat:number, lng: number} = {lat: 37.4292, lng: -122.1381};
+  images: string[] = [];
 
   constructor(
     private formBuilder: FormBuilder
@@ -47,6 +48,7 @@ export class PartiesFormComponent implements OnInit {
           lat: this.newPartyPosition.lat,
           lng: this.newPartyPosition.lng
         },
+        images: this.images,
         public: this.addForm.value.public,
         owner: Meteor.userId()
       });
@@ -54,4 +56,8 @@ export class PartiesFormComponent implements OnInit {
       this.addForm.reset();
     }
   }
+
+  onImage(imageId: string) {
+    this.images.push(imageId);
+  }
 }
-- 
2.10.2


From 3c886eeb7f93401caec983cdbe3b85f114f77ffe Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:11:29 +0300
Subject: [PATCH 244/304] Step 21.35: Add images property to the Party
 interface

---
 both/models/party.model.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/both/models/party.model.ts b/both/models/party.model.ts
index 5e62f1b..eb4b3e4 100644
--- a/both/models/party.model.ts
+++ b/both/models/party.model.ts
@@ -8,6 +8,7 @@ export interface Party extends CollectionObject {
   public: boolean;
   invited?: string[];
   rsvps?: RSVP[];
+  images?: string[];
 }
 
 interface RSVP {
-- 
2.10.2


From 0c706406e00de769ad161bbc7ddd5f1c5ccf0552 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:11:51 +0300
Subject: [PATCH 245/304] Step 21.36: Bind the onFile event

---
 client/imports/app/parties/parties-form.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index 5632bba..a9bffa9 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -17,7 +17,7 @@
               <br/>
               <md-checkbox formControlName="public">Public party?</md-checkbox>
               <br/><br/>
-              <parties-upload #upload></parties-upload>
+              <parties-upload #upload (onFile)="onImage($event)"></parties-upload>
               <button color="accent" md-raised-button type="submit">Add my party!</button>
             </div>
             <div class="form-extras">
-- 
2.10.2


From 5a53c4382bd5ac394db6c8060e8bf4bd2838623c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:14:00 +0300
Subject: [PATCH 246/304] Step 21.37: Create DisplayMainImage pipe

---
 .../imports/app/shared/display-main-image.pipe.ts  | 25 ++++++++++++++++++++++
 1 file changed, 25 insertions(+)
 create mode 100644 client/imports/app/shared/display-main-image.pipe.ts

diff --git a/client/imports/app/shared/display-main-image.pipe.ts b/client/imports/app/shared/display-main-image.pipe.ts
new file mode 100644
index 0000000..c98e952
--- /dev/null
+++ b/client/imports/app/shared/display-main-image.pipe.ts
@@ -0,0 +1,25 @@
+import {Pipe, PipeTransform} from '@angular/core';
+import { Images } from '../../../../both/collections/images.collection';
+import { Party } from '../../../../both/models/party.model';
+
+@Pipe({
+  name: 'displayMainImage'
+})
+export class DisplayMainImagePipe implements PipeTransform {
+  transform(party: Party) {
+    if (!party) {
+      return;
+    }
+
+    let imageUrl: string;
+    let imageId: string = (party.images || [])[0];
+
+    const found = Images.findOne(imageId);
+
+    if (found) {
+      imageUrl = found.url;
+    }
+
+    return imageUrl;
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 5e5fd635565861948bd7f550941b3f933264e55e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:14:26 +0300
Subject: [PATCH 247/304] Step 21.38: Add DisplayMainImage pipe

---
 client/imports/app/shared/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/shared/index.ts b/client/imports/app/shared/index.ts
index 12c7d64..37c6cf1 100644
--- a/client/imports/app/shared/index.ts
+++ b/client/imports/app/shared/index.ts
@@ -1,7 +1,9 @@
 import { DisplayNamePipe } from './display-name.pipe';
 import {RsvpPipe} from "./rsvp.pipe";
+import {DisplayMainImagePipe} from "./display-main-image.pipe";
 
 export const SHARED_DECLARATIONS: any[] = [
   DisplayNamePipe,
-  RsvpPipe
+  RsvpPipe,
+  DisplayMainImagePipe
 ];
-- 
2.10.2


From bed54327482c73fdf1a8e2a383977ffd1a25bf54 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:15:56 +0300
Subject: [PATCH 248/304] Step 21.39: Subscribe to the images publication

---
 client/imports/app/parties/parties-list.component.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index 341adea..bd5e2bb 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -41,12 +41,15 @@ export class PartiesListComponent implements OnInit, OnDestroy {
   autorunSub: Subscription;
   location: Subject<string> = new Subject<string>();
   user: Meteor.User;
+  imagesSubs: Subscription;
 
   constructor(
     private paginationService: PaginationService
   ) {}
 
   ngOnInit() {
+    this.imagesSubs = MeteorObservable.subscribe('images').subscribe();
+
     this.optionsSub = Observable.combineLatest(
       this.pageSize,
       this.curPage,
@@ -117,5 +120,6 @@ export class PartiesListComponent implements OnInit, OnDestroy {
     this.partiesSub.unsubscribe();
     this.optionsSub.unsubscribe();
     this.autorunSub.unsubscribe();
+    this.imagesSubs.unsubscribe();
   }
 }
-- 
2.10.2


From 5395333cc17d08247a44b2dc357c2f25f6c4c86e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:16:31 +0300
Subject: [PATCH 249/304] Step 21.40: Implement the pipe

---
 client/imports/app/parties/parties-list.component.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/parties/parties-list.component.html b/client/imports/app/parties/parties-list.component.html
index 6a05816..40a025f 100644
--- a/client/imports/app/parties/parties-list.component.html
+++ b/client/imports/app/parties/parties-list.component.html
@@ -19,6 +19,7 @@
     <pagination-controls class="pagination" (pageChange)="onPageChanged($event)"></pagination-controls>
 
     <md-card *ngFor="let party of parties | async" class="party-card">
+      <img *ngIf="party.images && party.images.length > 0" class="party-main-image" [src]="party | displayMainImage">
       <h2 class="party-name">
         <a [routerLink]="['/party', party._id]">{{party.name}}</a>
       </h2>
-- 
2.10.2


From c3c3f1861584d3b44fa438d5e8b9915c92e8e592 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:16:52 +0300
Subject: [PATCH 250/304] Step 21.41: Add some styles

---
 client/imports/app/parties/parties-list.component.scss | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/imports/app/parties/parties-list.component.scss b/client/imports/app/parties/parties-list.component.scss
index 6a695e7..811e9f9 100644
--- a/client/imports/app/parties/parties-list.component.scss
+++ b/client/imports/app/parties/parties-list.component.scss
@@ -24,6 +24,11 @@
       margin: 20px;
       position: relative;
 
+      img.party-main-image {
+        max-width: 100%;
+        max-height: 100%;
+      }
+
       .party-name > a {
         color: black;
         text-decoration: none;
-- 
2.10.2


From 65ba3fbf051f0c3e7c740627118effa49636f69e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:17:53 +0300
Subject: [PATCH 251/304] Step 21.42: Add the reset method to PartiesUpload
 component

---
 client/imports/app/parties/parties-upload.component.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/imports/app/parties/parties-upload.component.ts b/client/imports/app/parties/parties-upload.component.ts
index f2ad44d..80eeeb7 100644
--- a/client/imports/app/parties/parties-upload.component.ts
+++ b/client/imports/app/parties/parties-upload.component.ts
@@ -68,4 +68,9 @@ export class PartiesUploadComponent implements OnInit {
     this.files.next(this.filesArray);
     this.onFile.emit(file._id);
   }
+
+  reset() {
+    this.filesArray = [];
+    this.files.next(this.filesArray);
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 2107c9ac66cf591231658ec0a0ac515f1466d122 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:18:33 +0300
Subject: [PATCH 252/304] Step 21.43: Reset files on ngSubmit

---
 client/imports/app/parties/parties-form.component.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/parties/parties-form.component.html b/client/imports/app/parties/parties-form.component.html
index a9bffa9..51b4609 100644
--- a/client/imports/app/parties/parties-form.component.html
+++ b/client/imports/app/parties/parties-form.component.html
@@ -6,7 +6,7 @@
         <h2>Add it now! ></h2>
       </div>
       <div class="form-center">
-        <form *ngIf="user" [formGroup]="addForm" (ngSubmit)="addParty()">
+        <form *ngIf="user" [formGroup]="addForm" (ngSubmit)="addParty(); upload.reset();">
           <div style="display: table-row">
             <div class="form-inputs">
               <md-input dividerColor="accent" formControlName="name" placeholder="Party name"></md-input>
-- 
2.10.2


From b957c7153ea23d08a29bdb00c165d3f39d7cf802 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:54 -0200
Subject: [PATCH 253/304] Step 21: Handling Files with UploadFS

---
 manuals/templates/step21.md |  253 +++++++++
 manuals/views/step21.md     | 1183 +++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1436 insertions(+)
 create mode 100644 manuals/templates/step21.md
 create mode 100644 manuals/views/step21.md

diff --git a/manuals/templates/step21.md b/manuals/templates/step21.md
new file mode 100644
index 0000000..9c90ba7
--- /dev/null
+++ b/manuals/templates/step21.md
@@ -0,0 +1,253 @@
+In this step we are going to add the ability to upload images into our app, and also sorting and naming them.
+
+Angular-Meteor can use Meteor [UploadFS](https://github.com/jalik/jalik-ufs) which is a suite of Meteor packages that together provide a complete file management solution including uploading, downloading, storage, synchronization, manipulation, and copying.
+
+It supports several storage adapters for saving files to the local filesystem, GridFS and additional storage adapters can be created.
+
+The process is very similar for handling any other MongoDB Collection!
+
+So let's add image upload to our app!
+
+
+We will start by adding UploadFS to our project, by running the following command:
+
+    $ meteor add jalik:ufs
+
+Now, we will decide the storage adapter we want to use.
+In this example, we will use the GridFS as storage adapters, so we will add the adapter by running this command:
+
+    $ meteor add jalik:ufs-gridfs
+
+Note: you can find more information about Stores and Storage Adapters on the [UploadFS](https://github.com/jalik/jalik-ufs)'s GitHub repository.
+
+So now we have the UploadFS support and the storage adapter installed - we still need to create a UploadFS object to handle our files.
+Note that you will need to define the collection as shared resource because you will need to use the collection in both client and server side.
+
+### Creating the Mongo Collection and UploadFS Store
+
+Let's start by creating `both/collections/images.collection.ts` file, and define a Mongo Collection object called "Images". Since we want to be able to make thumbnails we have to create another Collection called "Thumbs".
+
+Also we will use the stadard Mongo Collection API that allows us to defined auth-rules.
+
+{{{diff_step 21.2}}}
+
+Let's now create interfaces for both collections:
+
+{{{diff_step 21.3}}}
+
+{{{diff_step 21.4}}}
+
+And use them on Images and Thumbs collections:
+
+{{{diff_step 21.5}}}
+
+We have to create Stores for Images and Thumbs.
+
+{{{diff_step 21.6}}}
+
+Let's explain a bit what happened.
+
+* We assigned Stores to their Collections, which is required.
+* We defined names of these Stores.
+* We added filter to ImagesStore so it can receive only images.
+* Every file will be copied to ThumbsStore.
+
+There is a reason why we called one of the Collections the `Thumbs`!
+
+Since we transfer every uploaded file to ThumbsStore, we can now easily add file manipulations.
+
+Let's resize every file to 32x32:
+
+{{{diff_step 21.7}}}
+
+We used [`gm`](https://github.com/aheckmann/gm) module, let's install it:
+
+    $ meteor npm install gm --save
+
+> Note: To use this module, you need download and install [GraphicsMagick](http://www.graphicsmagick.org/) or [ImageMagick](http://www.imagemagick.org/). In Mac OS X, you can use [Homebrew](http://brew.sh/) and do: `brew install graphicsmagick` or `brew install imagemagick`.
+
+Now because we used `require`, which is a NodeJS API, we need to add a TypeScript declaration, so let's install it:
+
+    $ meteor npm install @types/node --save
+    
+And let's import it in `typings.d.ts` file:    
+
+{{{diff_step 21.9}}}
+
+### Image upload
+
+Note that for file upload you can use basic HTML `<input type="file">` or any other package - you only need the HTML5 File object to be provided.
+
+For our application, we would like to add ability to drag-and-drop images, so we use Angular2 directive that handles file upload and gives us more abilities such as drag & drop, on the client side. In this example, We used [`angular2-file-drop`](https://github.com/jellyjs/angular2-file-drop), which is still in develop. In order to do this, let's add the package to our project:
+
+    $ meteor npm install angular2-file-drop --save
+
+And let's add it's module to ours:
+
+{{{diff_step 21.12}}}
+
+Now, let's create the `PartiesUpload` component. It will be responsible for uploading photos, starting with a stub of the view:
+
+{{{diff_step 21.13}}}
+
+And the `Component`:
+
+{{{diff_step 21.14}}}
+
+And let's add it to our declarations file:
+
+{{{diff_step 21.15}}}
+
+We want to use it in `PartiesForm`:
+
+{{{diff_step 21.16}}}
+
+Now, let's implement `fileDrop` directive:
+
+{{{diff_step 21.17}}}
+
+As you can see we used `fileOver` event. It tells the component if file is over the drop zone.
+
+We can now handle it inside the component:
+
+{{{diff_step 21.18}}}
+
+Second thing is to handle `onFileDrop` event:
+
+{{{diff_step 21.19}}}
+
+Now our component is able to catch any dropped file, so let's create a function to upload that file into server.
+
+{{{diff_step 21.20}}}
+
+Quick explanation. We need to know the name, the type and also the size of file we want to upload. We can get it from `data` object.
+
+Now we can move on to use that function in `PartiesUpload` component:
+
+{{{diff_step 21.21}}}
+
+Now let's take a little break and solve those annoying missing modules errors. Since the uploading packages we used in the `upload` method are package that comes from Meteor Atmosphere and they not provide TypeScript declaration (`.d.ts` files), we need to create one for them.
+
+Let's add it:
+
+{{{diff_step 21.22}}}
+
+Let's also add the `file-uploading` css class:
+
+{{{diff_step 21.23}}}
+
+### Display Uploaded Images
+
+Let's create a simple gallery to list the images in the new party form.
+
+First thing to do is to create a Publication for thumbnails:
+
+{{{diff_step 21.24}}}
+
+As you can see we also created a Publication for images. We will use it later.
+
+We still need to add it on the server-side:
+
+{{{diff_step 21.25}}}
+
+Now let's take care of UI. This will need to be reactive, so we will use again the `MeteorObservable` wrapper and RxJS.
+
+Let's create a `Subject` that will be in charge of notification regarding files actions:
+
+{{{diff_step 21.26}}}
+
+Let's now subscribe to `thumbs` publication with an array of those ids we created in the previous step:
+
+{{{diff_step 21.27}}}
+
+Now we can look for thumbnails that come from `ImagesStore`:
+
+{{{diff_step 21.28}}}
+
+We still don't see any thumbnails, so let's add a view for the thumbs:
+
+{{{diff_step 21.29}}}
+
+Since we are working on a view right now, let's add some style.
+
+We need to create `parties-upload.component.scss` file:
+
+{{{diff_step 21.30}}}
+
+And let's import the SCSS file into our Component:
+
+{{{diff_step 21.31}}}
+
+Great! We can move on to the next step. Let's do something with the result of the `upload` function.
+
+We will create the `addFile` method that updates the `files` property, and we will add the actual array the in charge of the notifications in `files` (which is a `Subject` and only in charge of the notifications, not the actual data):
+
+{{{diff_step 21.32}}}
+
+We want a communication between PartiesUpload and PartiesForm. Let's use `Output` decorator and the `EventEmitter` to notify PartiesForm component about every new file.
+
+{{{diff_step 21.33}}}
+
+On the receiving side of this connection we have the PartiesForm component.
+
+Create a method that handles an event with the new file and put images inside the FormBuilder.
+
+{{{diff_step 21.34}}}
+
+To keep Party interface up to date, we need to add `images` to it:
+
+{{{diff_step 21.35}}}
+
+The last step will be to create an event binding for `onFile`.
+
+{{{diff_step 21.36}}}
+
+### Display the main image of each party on the list
+
+We will use Pipes to achieve this.
+
+Let's create the `DisplayMainImagePipe` inside `client/imports/app/shared/display-main-image.pipe.ts`:
+
+{{{diff_step 21.37}}}
+
+Since we have it done, let's add it to PartiesList:
+
+{{{diff_step 21.38}}}
+
+We also need to subscribe to `images`:
+
+{{{diff_step 21.39}}}
+
+We can now just implement it:
+
+{{{diff_step 21.40}}}
+
+Add some css rules to keep the control of images:
+
+{{{diff_step 21.41}}}
+
+We still need to add the reset functionality to the component, since we want to manage what happens after images were added:
+
+{{{diff_step 21.42}}}
+
+By using `#upload` we get access to the PartiesUpload component's API. We can now use the `reset()`` method:
+
+{{{diff_step 21.43}}}
+
+And that's it!
+
+### Cloud Storage
+
+By storing files in the cloud you can reduce your costs and get a lot of other benefits.
+
+Since this chapter is all about uploading files and UploadFS doesn't have built-in support for cloud services we should mention another library for that.
+
+We recommend you to use [Slingshot](https://github.com/CulturalMe/meteor-slingshot/). You can install it by running:
+
+    $ meteor add edgee:slingshot
+
+It's very easy to use with AWS S3, Google Cloud and other cloud storage services.
+
+From slignshot's repository:
+
+> meteor-slingshot uploads the files directly to the cloud service from the browser without ever exposing your secret access key or any other sensitive data to the client and without requiring public write access to cloud storage to the entire public.
diff --git a/manuals/views/step21.md b/manuals/views/step21.md
new file mode 100644
index 0000000..9360b55
--- /dev/null
+++ b/manuals/views/step21.md
@@ -0,0 +1,1183 @@
+[{]: <region> (header)
+# Step 21: Handling Files with UploadFS
+[}]: #
+[{]: <region> (body)
+In this step we are going to add the ability to upload images into our app, and also sorting and naming them.
+
+Angular-Meteor can use Meteor [UploadFS](https://github.com/jalik/jalik-ufs) which is a suite of Meteor packages that together provide a complete file management solution including uploading, downloading, storage, synchronization, manipulation, and copying.
+
+It supports several storage adapters for saving files to the local filesystem, GridFS and additional storage adapters can be created.
+
+The process is very similar for handling any other MongoDB Collection!
+
+So let's add image upload to our app!
+
+
+We will start by adding UploadFS to our project, by running the following command:
+
+    $ meteor add jalik:ufs
+
+Now, we will decide the storage adapter we want to use.
+In this example, we will use the GridFS as storage adapters, so we will add the adapter by running this command:
+
+    $ meteor add jalik:ufs-gridfs
+
+Note: you can find more information about Stores and Storage Adapters on the [UploadFS](https://github.com/jalik/jalik-ufs)'s GitHub repository.
+
+So now we have the UploadFS support and the storage adapter installed - we still need to create a UploadFS object to handle our files.
+Note that you will need to define the collection as shared resource because you will need to use the collection in both client and server side.
+
+### Creating the Mongo Collection and UploadFS Store
+
+Let's start by creating `both/collections/images.collection.ts` file, and define a Mongo Collection object called "Images". Since we want to be able to make thumbnails we have to create another Collection called "Thumbs".
+
+Also we will use the stadard Mongo Collection API that allows us to defined auth-rules.
+
+[{]: <helper> (diff_step 21.2)
+#### Step 21.2: Create Images and Thumbs collections
+
+##### Added both/collections/images.collection.ts
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊import { MongoObservable } from 'meteor-rxjs';
++┊ ┊2┊import { Meteor } from 'meteor/meteor';
++┊ ┊3┊
++┊ ┊4┊export const Images = new MongoObservable.Collection('images');
++┊ ┊5┊export const Thumbs = new MongoObservable.Collection('thumbs');
+```
+[}]: #
+
+Let's now create interfaces for both collections:
+
+[{]: <helper> (diff_step 21.3)
+#### Step 21.3: Define Image interface
+
+##### Added both/models/image.model.ts
+```diff
+@@ -0,0 +1,15 @@
++┊  ┊ 1┊export interface Image {
++┊  ┊ 2┊  _id?: string;
++┊  ┊ 3┊  complete: boolean;
++┊  ┊ 4┊  extension: string;
++┊  ┊ 5┊  name: string;
++┊  ┊ 6┊  progress: number;
++┊  ┊ 7┊  size: number;
++┊  ┊ 8┊  store: string;
++┊  ┊ 9┊  token: string;
++┊  ┊10┊  type: string;
++┊  ┊11┊  uploadedAt: Date;
++┊  ┊12┊  uploading: boolean;
++┊  ┊13┊  url: string;
++┊  ┊14┊  userId?: string;
++┊  ┊15┊}🚫↵
+```
+[}]: #
+
+[{]: <helper> (diff_step 21.4)
+#### Step 21.4: Define Thumbs interface
+
+##### Changed both/models/image.model.ts
+```diff
+@@ -12,4 +12,9 @@
+ ┊12┊12┊  uploading: boolean;
+ ┊13┊13┊  url: string;
+ ┊14┊14┊  userId?: string;
++┊  ┊15┊}
++┊  ┊16┊
++┊  ┊17┊export interface Thumb extends Image  {
++┊  ┊18┊  originalStore?: string;
++┊  ┊19┊  originalId?: string;
+ ┊15┊20┊}🚫↵
+```
+[}]: #
+
+And use them on Images and Thumbs collections:
+
+[{]: <helper> (diff_step 21.5)
+#### Step 21.5: Add interfaces to Mongo Collections
+
+##### Changed both/collections/images.collection.ts
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊import { MongoObservable } from 'meteor-rxjs';
+ ┊2┊2┊import { Meteor } from 'meteor/meteor';
++┊ ┊3┊import { Thumb, Image } from "../models/image.model";
+ ┊3┊4┊
+-┊4┊ ┊export const Images = new MongoObservable.Collection('images');
+-┊5┊ ┊export const Thumbs = new MongoObservable.Collection('thumbs');
++┊ ┊5┊export const Images = new MongoObservable.Collection<Image>('images');
++┊ ┊6┊export const Thumbs = new MongoObservable.Collection<Thumb>('thumbs');
+```
+[}]: #
+
+We have to create Stores for Images and Thumbs.
+
+[{]: <helper> (diff_step 21.6)
+#### Step 21.6: Create stores for Images and Thumbs
+
+##### Changed both/collections/images.collection.ts
+```diff
+@@ -1,6 +1,38 @@
+ ┊ 1┊ 1┊import { MongoObservable } from 'meteor-rxjs';
+ ┊ 2┊ 2┊import { Meteor } from 'meteor/meteor';
++┊  ┊ 3┊import { UploadFS } from 'meteor/jalik:ufs';
+ ┊ 3┊ 4┊import { Thumb, Image } from "../models/image.model";
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊export const Images = new MongoObservable.Collection<Image>('images');
+ ┊ 6┊ 7┊export const Thumbs = new MongoObservable.Collection<Thumb>('thumbs');
++┊  ┊ 8┊
++┊  ┊ 9┊function loggedIn(userId) {
++┊  ┊10┊  return !!userId;
++┊  ┊11┊}
++┊  ┊12┊
++┊  ┊13┊export const ThumbsStore = new UploadFS.store.GridFS({
++┊  ┊14┊  collection: Thumbs.collection,
++┊  ┊15┊  name: 'thumbs',
++┊  ┊16┊  permissions: new UploadFS.StorePermissions({
++┊  ┊17┊    insert: loggedIn,
++┊  ┊18┊    update: loggedIn,
++┊  ┊19┊    remove: loggedIn
++┊  ┊20┊  })
++┊  ┊21┊});
++┊  ┊22┊
++┊  ┊23┊export const ImagesStore = new UploadFS.store.GridFS({
++┊  ┊24┊  collection: Images.collection,
++┊  ┊25┊  name: 'images',
++┊  ┊26┊  filter: new UploadFS.Filter({
++┊  ┊27┊    contentTypes: ['image/*']
++┊  ┊28┊  }),
++┊  ┊29┊  copyTo: [
++┊  ┊30┊    ThumbsStore
++┊  ┊31┊  ],
++┊  ┊32┊  permissions: new UploadFS.StorePermissions({
++┊  ┊33┊    insert: loggedIn,
++┊  ┊34┊    update: loggedIn,
++┊  ┊35┊    remove: loggedIn
++┊  ┊36┊  })
++┊  ┊37┊});
++┊  ┊38┊
+```
+[}]: #
+
+Let's explain a bit what happened.
+
+* We assigned Stores to their Collections, which is required.
+* We defined names of these Stores.
+* We added filter to ImagesStore so it can receive only images.
+* Every file will be copied to ThumbsStore.
+
+There is a reason why we called one of the Collections the `Thumbs`!
+
+Since we transfer every uploaded file to ThumbsStore, we can now easily add file manipulations.
+
+Let's resize every file to 32x32:
+
+[{]: <helper> (diff_step 21.7)
+#### Step 21.7: Resize images
+
+##### Changed both/collections/images.collection.ts
+```diff
+@@ -17,7 +17,19 @@
+ ┊17┊17┊    insert: loggedIn,
+ ┊18┊18┊    update: loggedIn,
+ ┊19┊19┊    remove: loggedIn
+-┊20┊  ┊  })
++┊  ┊20┊  }),
++┊  ┊21┊  transformWrite(from, to, fileId, file) {
++┊  ┊22┊    // Resize to 32x32
++┊  ┊23┊    const gm = require('gm');
++┊  ┊24┊
++┊  ┊25┊    gm(from, file.name)
++┊  ┊26┊      .resize(32, 32)
++┊  ┊27┊      .gravity('Center')
++┊  ┊28┊      .extent(32, 32)
++┊  ┊29┊      .quality(75)
++┊  ┊30┊      .stream()
++┊  ┊31┊      .pipe(to);
++┊  ┊32┊  }
+ ┊21┊33┊});
+ ┊22┊34┊
+ ┊23┊35┊export const ImagesStore = new UploadFS.store.GridFS({
+```
+[}]: #
+
+We used [`gm`](https://github.com/aheckmann/gm) module, let's install it:
+
+    $ meteor npm install gm --save
+
+> Note: To use this module, you need download and install [GraphicsMagick](http://www.graphicsmagick.org/) or [ImageMagick](http://www.imagemagick.org/). In Mac OS X, you can use [Homebrew](http://brew.sh/) and do: `brew install graphicsmagick` or `brew install imagemagick`.
+
+Now because we used `require`, which is a NodeJS API, we need to add a TypeScript declaration, so let's install it:
+
+    $ meteor npm install @types/node --save
+    
+And let's import it in `typings.d.ts` file:    
+
+[{]: <helper> (diff_step 21.9)
+#### Step 21.9: Import NodeJS @types
+
+##### Changed typings.d.ts
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊/// <reference types="zone.js" />
+ ┊2┊2┊/// <reference types="meteor-typings" />
+ ┊3┊3┊/// <reference types="@types/underscore" />
++┊ ┊4┊/// <reference types="@types/node" />
+ ┊4┊5┊
+ ┊5┊6┊declare module '*.html' {
+ ┊6┊7┊  const template: string;
+```
+[}]: #
+
+### Image upload
+
+Note that for file upload you can use basic HTML `<input type="file">` or any other package - you only need the HTML5 File object to be provided.
+
+For our application, we would like to add ability to drag-and-drop images, so we use Angular2 directive that handles file upload and gives us more abilities such as drag & drop, on the client side. In this example, We used [`angular2-file-drop`](https://github.com/jellyjs/angular2-file-drop), which is still in develop. In order to do this, let's add the package to our project:
+
+    $ meteor npm install angular2-file-drop --save
+
+And let's add it's module to ours:
+
+[{]: <helper> (diff_step 21.12)
+#### Step 21.12: Include file drop module
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -12,6 +12,7 @@
+ ┊12┊12┊import { SHARED_DECLARATIONS } from './shared';
+ ┊13┊13┊import { MaterialModule } from "@angular/material";
+ ┊14┊14┊import { AUTH_DECLARATIONS } from "./auth/index";
++┊  ┊15┊import { FileDropModule } from "angular2-file-drop";
+ ┊15┊16┊
+ ┊16┊17┊@NgModule({
+ ┊17┊18┊  imports: [
+```
+```diff
+@@ -24,7 +25,8 @@
+ ┊24┊25┊    AgmCoreModule.forRoot({
+ ┊25┊26┊      apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
+ ┊26┊27┊    }),
+-┊27┊  ┊    MaterialModule.forRoot()
++┊  ┊28┊    MaterialModule.forRoot(),
++┊  ┊29┊    FileDropModule
+ ┊28┊30┊  ],
+ ┊29┊31┊  declarations: [
+ ┊30┊32┊    AppComponent,
+```
+[}]: #
+
+Now, let's create the `PartiesUpload` component. It will be responsible for uploading photos, starting with a stub of the view:
+
+[{]: <helper> (diff_step 21.13)
+#### Step 21.13: Create a view for an upload
+
+##### Added client/imports/app/parties/parties-upload.component.html
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊<div class="parties-update-container">
++┊ ┊2┊  <div>
++┊ ┊3┊    <div>Drop an image to here</div>
++┊ ┊4┊  </div>
++┊ ┊5┊</div>🚫↵
+```
+[}]: #
+
+And the `Component`:
+
+[{]: <helper> (diff_step 21.14)
+#### Step 21.14: Create a PartiesUpload component
+
+##### Added client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -0,0 +1,11 @@
++┊  ┊ 1┊import { Component } from '@angular/core';
++┊  ┊ 2┊
++┊  ┊ 3┊import template from './parties-upload.component.html';
++┊  ┊ 4┊
++┊  ┊ 5┊@Component({
++┊  ┊ 6┊  selector: 'parties-upload',
++┊  ┊ 7┊  template
++┊  ┊ 8┊})
++┊  ┊ 9┊export class PartiesUploadComponent {
++┊  ┊10┊  constructor() {}
++┊  ┊11┊}🚫↵
+```
+[}]: #
+
+And let's add it to our declarations file:
+
+[{]: <helper> (diff_step 21.15)
+#### Step 21.15: Added PartiesUpload component to the index file
+
+##### Changed client/imports/app/parties/index.ts
+```diff
+@@ -1,9 +1,11 @@
+ ┊ 1┊ 1┊import { PartiesFormComponent } from './parties-form.component';
+ ┊ 2┊ 2┊import { PartiesListComponent } from './parties-list.component';
+ ┊ 3┊ 3┊import { PartyDetailsComponent } from './party-details.component';
++┊  ┊ 4┊import {PartiesUploadComponent} from "./parties-upload.component";
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊export const PARTIES_DECLARATIONS = [
+ ┊ 6┊ 7┊  PartiesFormComponent,
+ ┊ 7┊ 8┊  PartiesListComponent,
+-┊ 8┊  ┊  PartyDetailsComponent
++┊  ┊ 9┊  PartyDetailsComponent,
++┊  ┊10┊  PartiesUploadComponent
+ ┊ 9┊11┊];
+```
+[}]: #
+
+We want to use it in `PartiesForm`:
+
+[{]: <helper> (diff_step 21.16)
+#### Step 21.16: Use PartiesUploadComponent inside the form
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -17,6 +17,7 @@
+ ┊17┊17┊              <br/>
+ ┊18┊18┊              <md-checkbox formControlName="public">Public party?</md-checkbox>
+ ┊19┊19┊              <br/><br/>
++┊  ┊20┊              <parties-upload #upload></parties-upload>
+ ┊20┊21┊              <button color="accent" md-raised-button type="submit">Add my party!</button>
+ ┊21┊22┊            </div>
+ ┊22┊23┊            <div class="form-extras">
+```
+[}]: #
+
+Now, let's implement `fileDrop` directive:
+
+[{]: <helper> (diff_step 21.17)
+#### Step 21.17: Add bindings to FileDrop
+
+##### Changed client/imports/app/parties/parties-upload.component.html
+```diff
+@@ -1,5 +1,8 @@
+ ┊1┊1┊<div class="parties-update-container">
+-┊2┊ ┊  <div>
++┊ ┊2┊  <div fileDrop
++┊ ┊3┊       [ngClass]="{'file-is-over': fileIsOver}"
++┊ ┊4┊       (fileOver)="fileOver($event)"
++┊ ┊5┊       (onFileDrop)="onFileDrop($event)">
+ ┊3┊6┊    <div>Drop an image to here</div>
+ ┊4┊7┊  </div>
+ ┊5┊8┊</div>🚫↵
+```
+[}]: #
+
+As you can see we used `fileOver` event. It tells the component if file is over the drop zone.
+
+We can now handle it inside the component:
+
+[{]: <helper> (diff_step 21.18)
+#### Step 21.18: Handle fileIsOver
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -7,5 +7,11 @@
+ ┊ 7┊ 7┊  template
+ ┊ 8┊ 8┊})
+ ┊ 9┊ 9┊export class PartiesUploadComponent {
++┊  ┊10┊  fileIsOver: boolean = false;
++┊  ┊11┊
+ ┊10┊12┊  constructor() {}
++┊  ┊13┊
++┊  ┊14┊  fileOver(fileIsOver: boolean): void {
++┊  ┊15┊    this.fileIsOver = fileIsOver;
++┊  ┊16┊  }
+ ┊11┊17┊}🚫↵
+```
+[}]: #
+
+Second thing is to handle `onFileDrop` event:
+
+[{]: <helper> (diff_step 21.19)
+#### Step 21.19: Implement onFileDrop method
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -14,4 +14,8 @@
+ ┊14┊14┊  fileOver(fileIsOver: boolean): void {
+ ┊15┊15┊    this.fileIsOver = fileIsOver;
+ ┊16┊16┊  }
++┊  ┊17┊
++┊  ┊18┊  onFileDrop(file: File): void {
++┊  ┊19┊    console.log('Got file');
++┊  ┊20┊  }
+ ┊17┊21┊}🚫↵
+```
+[}]: #
+
+Now our component is able to catch any dropped file, so let's create a function to upload that file into server.
+
+[{]: <helper> (diff_step 21.20)
+#### Step 21.20: Implement the upload method
+
+##### Added both/methods/images.methods.ts
+```diff
+@@ -0,0 +1,23 @@
++┊  ┊ 1┊import { UploadFS } from 'meteor/jalik:ufs';
++┊  ┊ 2┊import { ImagesStore } from '../collections/images.collection';
++┊  ┊ 3┊
++┊  ┊ 4┊export function upload(data: File): Promise<any> {
++┊  ┊ 5┊  return new Promise((resolve, reject) => {
++┊  ┊ 6┊    // pick from an object only: name, type and size
++┊  ┊ 7┊    const file = {
++┊  ┊ 8┊      name: data.name,
++┊  ┊ 9┊      type: data.type,
++┊  ┊10┊      size: data.size,
++┊  ┊11┊    };
++┊  ┊12┊
++┊  ┊13┊    const upload = new UploadFS.Uploader({
++┊  ┊14┊      data,
++┊  ┊15┊      file,
++┊  ┊16┊      store: ImagesStore,
++┊  ┊17┊      onError: reject,
++┊  ┊18┊      onComplete: resolve
++┊  ┊19┊    });
++┊  ┊20┊
++┊  ┊21┊    upload.start();
++┊  ┊22┊  });
++┊  ┊23┊}🚫↵
+```
+[}]: #
+
+Quick explanation. We need to know the name, the type and also the size of file we want to upload. We can get it from `data` object.
+
+Now we can move on to use that function in `PartiesUpload` component:
+
+[{]: <helper> (diff_step 21.21)
+#### Step 21.21: Use the upload function
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -2,12 +2,15 @@
+ ┊ 2┊ 2┊
+ ┊ 3┊ 3┊import template from './parties-upload.component.html';
+ ┊ 4┊ 4┊
++┊  ┊ 5┊import { upload } from '../../../../both/methods/images.methods';
++┊  ┊ 6┊
+ ┊ 5┊ 7┊@Component({
+ ┊ 6┊ 8┊  selector: 'parties-upload',
+ ┊ 7┊ 9┊  template
+ ┊ 8┊10┊})
+ ┊ 9┊11┊export class PartiesUploadComponent {
+ ┊10┊12┊  fileIsOver: boolean = false;
++┊  ┊13┊  uploading: boolean = false;
+ ┊11┊14┊
+ ┊12┊15┊  constructor() {}
+ ┊13┊16┊
+```
+```diff
+@@ -16,6 +19,15 @@
+ ┊16┊19┊  }
+ ┊17┊20┊
+ ┊18┊21┊  onFileDrop(file: File): void {
+-┊19┊  ┊    console.log('Got file');
++┊  ┊22┊    this.uploading = true;
++┊  ┊23┊
++┊  ┊24┊    upload(file)
++┊  ┊25┊      .then(() => {
++┊  ┊26┊        this.uploading = false;
++┊  ┊27┊      })
++┊  ┊28┊      .catch((error) => {
++┊  ┊29┊        this.uploading = false;
++┊  ┊30┊        console.log(`Something went wrong!`, error);
++┊  ┊31┊      });
+ ┊20┊32┊  }
+ ┊21┊33┊}🚫↵
+```
+[}]: #
+
+Now let's take a little break and solve those annoying missing modules errors. Since the uploading packages we used in the `upload` method are package that comes from Meteor Atmosphere and they not provide TypeScript declaration (`.d.ts` files), we need to create one for them.
+
+Let's add it:
+
+[{]: <helper> (diff_step 21.22)
+#### Step 21.22: Declare meteor/jalik:ufs module
+
+##### Added typings/jalik-ufs.d.ts
+```diff
+@@ -0,0 +1,11 @@
++┊  ┊ 1┊declare module "meteor/jalik:ufs" {
++┊  ┊ 2┊  interface Uploader {
++┊  ┊ 3┊    start: () => void;
++┊  ┊ 4┊  }
++┊  ┊ 5┊
++┊  ┊ 6┊  interface UploadFS {
++┊  ┊ 7┊    Uploader: (options: any) => Uploader;
++┊  ┊ 8┊  }
++┊  ┊ 9┊
++┊  ┊10┊  export var UploadFS;
++┊  ┊11┊}🚫↵
+```
+[}]: #
+
+Let's also add the `file-uploading` css class:
+
+[{]: <helper> (diff_step 21.23)
+#### Step 21.23: Implement classes
+
+##### Changed client/imports/app/parties/parties-upload.component.html
+```diff
+@@ -1,6 +1,6 @@
+ ┊1┊1┊<div class="parties-update-container">
+ ┊2┊2┊  <div fileDrop
+-┊3┊ ┊       [ngClass]="{'file-is-over': fileIsOver}"
++┊ ┊3┊       [ngClass]="{'file-is-over': fileIsOver, 'file-uploading': uploading}"
+ ┊4┊4┊       (fileOver)="fileOver($event)"
+ ┊5┊5┊       (onFileDrop)="onFileDrop($event)">
+ ┊6┊6┊    <div>Drop an image to here</div>
+```
+[}]: #
+
+### Display Uploaded Images
+
+Let's create a simple gallery to list the images in the new party form.
+
+First thing to do is to create a Publication for thumbnails:
+
+[{]: <helper> (diff_step 21.24)
+#### Step 21.24: Implement publications of Images and Thumbs
+
+##### Added server/imports/publications/images.ts
+```diff
+@@ -0,0 +1,15 @@
++┊  ┊ 1┊import { Meteor } from 'meteor/meteor';
++┊  ┊ 2┊import { Thumbs, Images } from '../../../both/collections/images.collection';
++┊  ┊ 3┊
++┊  ┊ 4┊Meteor.publish('thumbs', function(ids: string[]) {
++┊  ┊ 5┊  return Thumbs.collection.find({
++┊  ┊ 6┊    originalStore: 'images',
++┊  ┊ 7┊    originalId: {
++┊  ┊ 8┊      $in: ids
++┊  ┊ 9┊    }
++┊  ┊10┊  });
++┊  ┊11┊});
++┊  ┊12┊
++┊  ┊13┊Meteor.publish('images', function() {
++┊  ┊14┊  return Images.collection.find({});
++┊  ┊15┊});🚫↵
+```
+[}]: #
+
+As you can see we also created a Publication for images. We will use it later.
+
+We still need to add it on the server-side:
+
+[{]: <helper> (diff_step 21.25)
+#### Step 21.25: Import those publications in the server entry point
+
+##### Changed server/main.ts
+```diff
+@@ -5,6 +5,7 @@
+ ┊ 5┊ 5┊import './imports/publications/parties';
+ ┊ 6┊ 6┊import './imports/publications/users';
+ ┊ 7┊ 7┊import '../both/methods/parties.methods';
++┊  ┊ 8┊import './imports/publications/images';
+ ┊ 8┊ 9┊
+ ┊ 9┊10┊Meteor.startup(() => {
+ ┊10┊11┊  loadParties();
+```
+[}]: #
+
+Now let's take care of UI. This will need to be reactive, so we will use again the `MeteorObservable` wrapper and RxJS.
+
+Let's create a `Subject` that will be in charge of notification regarding files actions:
+
+[{]: <helper> (diff_step 21.26)
+#### Step 21.26: Use RxJS to keep track of files
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -1,9 +1,11 @@
+-┊ 1┊  ┊import { Component } from '@angular/core';
++┊  ┊ 1┊import {Component} from '@angular/core';
+ ┊ 2┊ 2┊
+ ┊ 3┊ 3┊import template from './parties-upload.component.html';
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊import { upload } from '../../../../both/methods/images.methods';
+ ┊ 6┊ 6┊
++┊  ┊ 7┊import {Subject, Subscription} from "rxjs";
++┊  ┊ 8┊
+ ┊ 7┊ 9┊@Component({
+ ┊ 8┊10┊  selector: 'parties-upload',
+ ┊ 9┊11┊  template
+```
+```diff
+@@ -11,6 +13,7 @@
+ ┊11┊13┊export class PartiesUploadComponent {
+ ┊12┊14┊  fileIsOver: boolean = false;
+ ┊13┊15┊  uploading: boolean = false;
++┊  ┊16┊  files: Subject<string[]> = new Subject<string[]>();
+ ┊14┊17┊
+ ┊15┊18┊  constructor() {}
+```
+[}]: #
+
+Let's now subscribe to `thumbs` publication with an array of those ids we created in the previous step:
+
+[{]: <helper> (diff_step 21.27)
+#### Step 21.27: Subscribe to the thumbs publication
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -1,22 +1,36 @@
+-┊ 1┊  ┊import {Component} from '@angular/core';
++┊  ┊ 1┊import {Component, OnInit} from '@angular/core';
+ ┊ 2┊ 2┊
+ ┊ 3┊ 3┊import template from './parties-upload.component.html';
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊import { upload } from '../../../../both/methods/images.methods';
+-┊ 6┊  ┊
+ ┊ 7┊ 6┊import {Subject, Subscription} from "rxjs";
++┊  ┊ 7┊import {MeteorObservable} from "meteor-rxjs";
+ ┊ 8┊ 8┊
+ ┊ 9┊ 9┊@Component({
+ ┊10┊10┊  selector: 'parties-upload',
+ ┊11┊11┊  template
+ ┊12┊12┊})
+-┊13┊  ┊export class PartiesUploadComponent {
++┊  ┊13┊export class PartiesUploadComponent implements OnInit {
+ ┊14┊14┊  fileIsOver: boolean = false;
+ ┊15┊15┊  uploading: boolean = false;
+ ┊16┊16┊  files: Subject<string[]> = new Subject<string[]>();
++┊  ┊17┊  thumbsSubscription: Subscription;
+ ┊17┊18┊
+ ┊18┊19┊  constructor() {}
+ ┊19┊20┊
++┊  ┊21┊  ngOnInit() {
++┊  ┊22┊    this.files.subscribe((filesArray) => {
++┊  ┊23┊      MeteorObservable.autorun().subscribe(() => {
++┊  ┊24┊        if (this.thumbsSubscription) {
++┊  ┊25┊          this.thumbsSubscription.unsubscribe();
++┊  ┊26┊          this.thumbsSubscription = undefined;
++┊  ┊27┊        }
++┊  ┊28┊
++┊  ┊29┊        this.thumbsSubscription = MeteorObservable.subscribe("thumbs", filesArray).subscribe();
++┊  ┊30┊      });
++┊  ┊31┊    });
++┊  ┊32┊  }
++┊  ┊33┊
+ ┊20┊34┊  fileOver(fileIsOver: boolean): void {
+ ┊21┊35┊    this.fileIsOver = fileIsOver;
+ ┊22┊36┊  }
+```
+[}]: #
+
+Now we can look for thumbnails that come from `ImagesStore`:
+
+[{]: <helper> (diff_step 21.28)
+#### Step 21.28: Look for the thumbnails
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -3,8 +3,10 @@
+ ┊ 3┊ 3┊import template from './parties-upload.component.html';
+ ┊ 4┊ 4┊
+ ┊ 5┊ 5┊import { upload } from '../../../../both/methods/images.methods';
+-┊ 6┊  ┊import {Subject, Subscription} from "rxjs";
++┊  ┊ 6┊import {Subject, Subscription, Observable} from "rxjs";
+ ┊ 7┊ 7┊import {MeteorObservable} from "meteor-rxjs";
++┊  ┊ 8┊import {Thumb} from "../../../../both/models/image.model";
++┊  ┊ 9┊import {Thumbs} from "../../../../both/collections/images.collection";
+ ┊ 8┊10┊
+ ┊ 9┊11┊@Component({
+ ┊10┊12┊  selector: 'parties-upload',
+```
+```diff
+@@ -15,6 +17,7 @@
+ ┊15┊17┊  uploading: boolean = false;
+ ┊16┊18┊  files: Subject<string[]> = new Subject<string[]>();
+ ┊17┊19┊  thumbsSubscription: Subscription;
++┊  ┊20┊  thumbs: Observable<Thumb[]>;
+ ┊18┊21┊
+ ┊19┊22┊  constructor() {}
+ ┊20┊23┊
+```
+```diff
+@@ -26,7 +29,14 @@
+ ┊26┊29┊          this.thumbsSubscription = undefined;
+ ┊27┊30┊        }
+ ┊28┊31┊
+-┊29┊  ┊        this.thumbsSubscription = MeteorObservable.subscribe("thumbs", filesArray).subscribe();
++┊  ┊32┊        this.thumbsSubscription = MeteorObservable.subscribe("thumbs", filesArray).subscribe(() => {
++┊  ┊33┊          this.thumbs = Thumbs.find({
++┊  ┊34┊            originalStore: 'images',
++┊  ┊35┊            originalId: {
++┊  ┊36┊              $in: filesArray
++┊  ┊37┊            }
++┊  ┊38┊          }).zone();
++┊  ┊39┊        });
+ ┊30┊40┊      });
+ ┊31┊41┊    });
+ ┊32┊42┊  }
+```
+[}]: #
+
+We still don't see any thumbnails, so let's add a view for the thumbs:
+
+[{]: <helper> (diff_step 21.29)
+#### Step 21.29: Implement the thumbnails in the view
+
+##### Changed client/imports/app/parties/parties-upload.component.html
+```diff
+@@ -5,4 +5,10 @@
+ ┊ 5┊ 5┊       (onFileDrop)="onFileDrop($event)">
+ ┊ 6┊ 6┊    <div>Drop an image to here</div>
+ ┊ 7┊ 7┊  </div>
++┊  ┊ 8┊  <div *ngIf="thumbs" class="thumbs">
++┊  ┊ 9┊    <div *ngFor="let thumb of thumbs | async" class="thumb">
++┊  ┊10┊      <img [src]="thumb.url"/>
++┊  ┊11┊    </div>
++┊  ┊12┊    <div class="clear"></div>
++┊  ┊13┊  </div>
+ ┊ 8┊14┊</div>🚫↵
+```
+[}]: #
+
+Since we are working on a view right now, let's add some style.
+
+We need to create `parties-upload.component.scss` file:
+
+[{]: <helper> (diff_step 21.30)
+#### Step 21.30: Basic styles
+
+##### Added client/imports/app/parties/parties-upload.component.scss
+```diff
+@@ -0,0 +1,46 @@
++┊  ┊ 1┊.file-uploading {
++┊  ┊ 2┊  opacity: 0.3;
++┊  ┊ 3┊}
++┊  ┊ 4┊
++┊  ┊ 5┊.file-is-over {
++┊  ┊ 6┊  opacity: 0.7;
++┊  ┊ 7┊}
++┊  ┊ 8┊
++┊  ┊ 9┊.parties-update-container {
++┊  ┊10┊  width: 90%;
++┊  ┊11┊  margin: 15px;
++┊  ┊12┊
++┊  ┊13┊  .thumbs {
++┊  ┊14┊    margin-top: 10px;
++┊  ┊15┊    margin-bottom: 10px;
++┊  ┊16┊
++┊  ┊17┊    .clear {
++┊  ┊18┊      clear: both;
++┊  ┊19┊    }
++┊  ┊20┊
++┊  ┊21┊    .thumb {
++┊  ┊22┊      float: left;
++┊  ┊23┊      width: 60px;
++┊  ┊24┊      height: 60px;
++┊  ┊25┊      display: flex;
++┊  ┊26┊      justify-content: center;
++┊  ┊27┊      align-items: center;
++┊  ┊28┊      overflow: hidden;
++┊  ┊29┊      margin-right: 5px;
++┊  ┊30┊
++┊  ┊31┊      img {
++┊  ┊32┊        flex-shrink: 0;
++┊  ┊33┊        min-width: 100%;
++┊  ┊34┊        min-height: 100%
++┊  ┊35┊      }
++┊  ┊36┊    }
++┊  ┊37┊  }
++┊  ┊38┊}
++┊  ┊39┊
++┊  ┊40┊[filedrop] {
++┊  ┊41┊  width: 100%;
++┊  ┊42┊  height: 60px;
++┊  ┊43┊  line-height: 60px;
++┊  ┊44┊  text-align: center;
++┊  ┊45┊  border: 3px dashed rgba(255, 255, 255, 0.7);
++┊  ┊46┊}🚫↵
+```
+[}]: #
+
+And let's import the SCSS file into our Component:
+
+[{]: <helper> (diff_step 21.31)
+#### Step 21.31: Added import for the styles file
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊import {Component, OnInit} from '@angular/core';
+ ┊2┊2┊
+ ┊3┊3┊import template from './parties-upload.component.html';
++┊ ┊4┊import style from './parties-upload.component.scss';
+ ┊4┊5┊
+ ┊5┊6┊import { upload } from '../../../../both/methods/images.methods';
+ ┊6┊7┊import {Subject, Subscription, Observable} from "rxjs";
+```
+```diff
+@@ -10,7 +11,8 @@
+ ┊10┊11┊
+ ┊11┊12┊@Component({
+ ┊12┊13┊  selector: 'parties-upload',
+-┊13┊  ┊  template
++┊  ┊14┊  template,
++┊  ┊15┊  styles: [ style ]
+ ┊14┊16┊})
+ ┊15┊17┊export class PartiesUploadComponent implements OnInit {
+ ┊16┊18┊  fileIsOver: boolean = false;
+```
+[}]: #
+
+Great! We can move on to the next step. Let's do something with the result of the `upload` function.
+
+We will create the `addFile` method that updates the `files` property, and we will add the actual array the in charge of the notifications in `files` (which is a `Subject` and only in charge of the notifications, not the actual data):
+
+[{]: <helper> (diff_step 21.32)
+#### Step 21.32: Handle file upload
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -17,6 +17,7 @@
+ ┊17┊17┊export class PartiesUploadComponent implements OnInit {
+ ┊18┊18┊  fileIsOver: boolean = false;
+ ┊19┊19┊  uploading: boolean = false;
++┊  ┊20┊  filesArray: string[] = [];
+ ┊20┊21┊  files: Subject<string[]> = new Subject<string[]>();
+ ┊21┊22┊  thumbsSubscription: Subscription;
+ ┊22┊23┊  thumbs: Observable<Thumb[]>;
+```
+```diff
+@@ -51,12 +52,18 @@
+ ┊51┊52┊    this.uploading = true;
+ ┊52┊53┊
+ ┊53┊54┊    upload(file)
+-┊54┊  ┊      .then(() => {
++┊  ┊55┊      .then((result) => {
+ ┊55┊56┊        this.uploading = false;
++┊  ┊57┊        this.addFile(result);
+ ┊56┊58┊      })
+ ┊57┊59┊      .catch((error) => {
+ ┊58┊60┊        this.uploading = false;
+ ┊59┊61┊        console.log(`Something went wrong!`, error);
+ ┊60┊62┊      });
+ ┊61┊63┊  }
++┊  ┊64┊
++┊  ┊65┊  addFile(file) {
++┊  ┊66┊    this.filesArray.push(file._id);
++┊  ┊67┊    this.files.next(this.filesArray);
++┊  ┊68┊  }
+ ┊62┊69┊}🚫↵
+```
+[}]: #
+
+We want a communication between PartiesUpload and PartiesForm. Let's use `Output` decorator and the `EventEmitter` to notify PartiesForm component about every new file.
+
+[{]: <helper> (diff_step 21.33)
+#### Step 21.33: Emit event with the new file
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -1,4 +1,4 @@
+-┊1┊ ┊import {Component, OnInit} from '@angular/core';
++┊ ┊1┊import {Component, OnInit, EventEmitter, Output} from '@angular/core';
+ ┊2┊2┊
+ ┊3┊3┊import template from './parties-upload.component.html';
+ ┊4┊4┊import style from './parties-upload.component.scss';
+```
+```diff
+@@ -21,6 +21,7 @@
+ ┊21┊21┊  files: Subject<string[]> = new Subject<string[]>();
+ ┊22┊22┊  thumbsSubscription: Subscription;
+ ┊23┊23┊  thumbs: Observable<Thumb[]>;
++┊  ┊24┊  @Output() onFile: EventEmitter<string> = new EventEmitter<string>();
+ ┊24┊25┊
+ ┊25┊26┊  constructor() {}
+ ┊26┊27┊
+```
+```diff
+@@ -65,5 +66,6 @@
+ ┊65┊66┊  addFile(file) {
+ ┊66┊67┊    this.filesArray.push(file._id);
+ ┊67┊68┊    this.files.next(this.filesArray);
++┊  ┊69┊    this.onFile.emit(file._id);
+ ┊68┊70┊  }
+ ┊69┊71┊}🚫↵
+```
+[}]: #
+
+On the receiving side of this connection we have the PartiesForm component.
+
+Create a method that handles an event with the new file and put images inside the FormBuilder.
+
+[{]: <helper> (diff_step 21.34)
+#### Step 21.34: Add images to the PartiesForm component
+
+##### Changed client/imports/app/parties/parties-form.component.ts
+```diff
+@@ -14,6 +14,7 @@
+ ┊14┊14┊export class PartiesFormComponent implements OnInit {
+ ┊15┊15┊  addForm: FormGroup;
+ ┊16┊16┊  newPartyPosition: {lat:number, lng: number} = {lat: 37.4292, lng: -122.1381};
++┊  ┊17┊  images: string[] = [];
+ ┊17┊18┊
+ ┊18┊19┊  constructor(
+ ┊19┊20┊    private formBuilder: FormBuilder
+```
+```diff
+@@ -47,6 +48,7 @@
+ ┊47┊48┊          lat: this.newPartyPosition.lat,
+ ┊48┊49┊          lng: this.newPartyPosition.lng
+ ┊49┊50┊        },
++┊  ┊51┊        images: this.images,
+ ┊50┊52┊        public: this.addForm.value.public,
+ ┊51┊53┊        owner: Meteor.userId()
+ ┊52┊54┊      });
+```
+```diff
+@@ -54,4 +56,8 @@
+ ┊54┊56┊      this.addForm.reset();
+ ┊55┊57┊    }
+ ┊56┊58┊  }
++┊  ┊59┊
++┊  ┊60┊  onImage(imageId: string) {
++┊  ┊61┊    this.images.push(imageId);
++┊  ┊62┊  }
+ ┊57┊63┊}
+```
+[}]: #
+
+To keep Party interface up to date, we need to add `images` to it:
+
+[{]: <helper> (diff_step 21.35)
+#### Step 21.35: Add images property to the Party interface
+
+##### Changed both/models/party.model.ts
+```diff
+@@ -8,6 +8,7 @@
+ ┊ 8┊ 8┊  public: boolean;
+ ┊ 9┊ 9┊  invited?: string[];
+ ┊10┊10┊  rsvps?: RSVP[];
++┊  ┊11┊  images?: string[];
+ ┊11┊12┊}
+ ┊12┊13┊
+ ┊13┊14┊interface RSVP {
+```
+[}]: #
+
+The last step will be to create an event binding for `onFile`.
+
+[{]: <helper> (diff_step 21.36)
+#### Step 21.36: Bind the onFile event
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -17,7 +17,7 @@
+ ┊17┊17┊              <br/>
+ ┊18┊18┊              <md-checkbox formControlName="public">Public party?</md-checkbox>
+ ┊19┊19┊              <br/><br/>
+-┊20┊  ┊              <parties-upload #upload></parties-upload>
++┊  ┊20┊              <parties-upload #upload (onFile)="onImage($event)"></parties-upload>
+ ┊21┊21┊              <button color="accent" md-raised-button type="submit">Add my party!</button>
+ ┊22┊22┊            </div>
+ ┊23┊23┊            <div class="form-extras">
+```
+[}]: #
+
+### Display the main image of each party on the list
+
+We will use Pipes to achieve this.
+
+Let's create the `DisplayMainImagePipe` inside `client/imports/app/shared/display-main-image.pipe.ts`:
+
+[{]: <helper> (diff_step 21.37)
+#### Step 21.37: Create DisplayMainImage pipe
+
+##### Added client/imports/app/shared/display-main-image.pipe.ts
+```diff
+@@ -0,0 +1,25 @@
++┊  ┊ 1┊import {Pipe, PipeTransform} from '@angular/core';
++┊  ┊ 2┊import { Images } from '../../../../both/collections/images.collection';
++┊  ┊ 3┊import { Party } from '../../../../both/models/party.model';
++┊  ┊ 4┊
++┊  ┊ 5┊@Pipe({
++┊  ┊ 6┊  name: 'displayMainImage'
++┊  ┊ 7┊})
++┊  ┊ 8┊export class DisplayMainImagePipe implements PipeTransform {
++┊  ┊ 9┊  transform(party: Party) {
++┊  ┊10┊    if (!party) {
++┊  ┊11┊      return;
++┊  ┊12┊    }
++┊  ┊13┊
++┊  ┊14┊    let imageUrl: string;
++┊  ┊15┊    let imageId: string = (party.images || [])[0];
++┊  ┊16┊
++┊  ┊17┊    const found = Images.findOne(imageId);
++┊  ┊18┊
++┊  ┊19┊    if (found) {
++┊  ┊20┊      imageUrl = found.url;
++┊  ┊21┊    }
++┊  ┊22┊
++┊  ┊23┊    return imageUrl;
++┊  ┊24┊  }
++┊  ┊25┊}🚫↵
+```
+[}]: #
+
+Since we have it done, let's add it to PartiesList:
+
+[{]: <helper> (diff_step 21.38)
+#### Step 21.38: Add DisplayMainImage pipe
+
+##### Changed client/imports/app/shared/index.ts
+```diff
+@@ -1,7 +1,9 @@
+ ┊1┊1┊import { DisplayNamePipe } from './display-name.pipe';
+ ┊2┊2┊import {RsvpPipe} from "./rsvp.pipe";
++┊ ┊3┊import {DisplayMainImagePipe} from "./display-main-image.pipe";
+ ┊3┊4┊
+ ┊4┊5┊export const SHARED_DECLARATIONS: any[] = [
+ ┊5┊6┊  DisplayNamePipe,
+-┊6┊ ┊  RsvpPipe
++┊ ┊7┊  RsvpPipe,
++┊ ┊8┊  DisplayMainImagePipe
+ ┊7┊9┊];
+```
+[}]: #
+
+We also need to subscribe to `images`:
+
+[{]: <helper> (diff_step 21.39)
+#### Step 21.39: Subscribe to the images publication
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -41,12 +41,15 @@
+ ┊41┊41┊  autorunSub: Subscription;
+ ┊42┊42┊  location: Subject<string> = new Subject<string>();
+ ┊43┊43┊  user: Meteor.User;
++┊  ┊44┊  imagesSubs: Subscription;
+ ┊44┊45┊
+ ┊45┊46┊  constructor(
+ ┊46┊47┊    private paginationService: PaginationService
+ ┊47┊48┊  ) {}
+ ┊48┊49┊
+ ┊49┊50┊  ngOnInit() {
++┊  ┊51┊    this.imagesSubs = MeteorObservable.subscribe('images').subscribe();
++┊  ┊52┊
+ ┊50┊53┊    this.optionsSub = Observable.combineLatest(
+ ┊51┊54┊      this.pageSize,
+ ┊52┊55┊      this.curPage,
+```
+```diff
+@@ -117,5 +120,6 @@
+ ┊117┊120┊    this.partiesSub.unsubscribe();
+ ┊118┊121┊    this.optionsSub.unsubscribe();
+ ┊119┊122┊    this.autorunSub.unsubscribe();
++┊   ┊123┊    this.imagesSubs.unsubscribe();
+ ┊120┊124┊  }
+ ┊121┊125┊}
+```
+[}]: #
+
+We can now just implement it:
+
+[{]: <helper> (diff_step 21.40)
+#### Step 21.40: Implement the pipe
+
+##### Changed client/imports/app/parties/parties-list.component.html
+```diff
+@@ -19,6 +19,7 @@
+ ┊19┊19┊    <pagination-controls class="pagination" (pageChange)="onPageChanged($event)"></pagination-controls>
+ ┊20┊20┊
+ ┊21┊21┊    <md-card *ngFor="let party of parties | async" class="party-card">
++┊  ┊22┊      <img *ngIf="party.images && party.images.length > 0" class="party-main-image" [src]="party | displayMainImage">
+ ┊22┊23┊      <h2 class="party-name">
+ ┊23┊24┊        <a [routerLink]="['/party', party._id]">{{party.name}}</a>
+ ┊24┊25┊      </h2>
+```
+[}]: #
+
+Add some css rules to keep the control of images:
+
+[{]: <helper> (diff_step 21.41)
+#### Step 21.41: Add some styles
+
+##### Changed client/imports/app/parties/parties-list.component.scss
+```diff
+@@ -24,6 +24,11 @@
+ ┊24┊24┊      margin: 20px;
+ ┊25┊25┊      position: relative;
+ ┊26┊26┊
++┊  ┊27┊      img.party-main-image {
++┊  ┊28┊        max-width: 100%;
++┊  ┊29┊        max-height: 100%;
++┊  ┊30┊      }
++┊  ┊31┊
+ ┊27┊32┊      .party-name > a {
+ ┊28┊33┊        color: black;
+ ┊29┊34┊        text-decoration: none;
+```
+[}]: #
+
+We still need to add the reset functionality to the component, since we want to manage what happens after images were added:
+
+[{]: <helper> (diff_step 21.42)
+#### Step 21.42: Add the reset method to PartiesUpload component
+
+##### Changed client/imports/app/parties/parties-upload.component.ts
+```diff
+@@ -68,4 +68,9 @@
+ ┊68┊68┊    this.files.next(this.filesArray);
+ ┊69┊69┊    this.onFile.emit(file._id);
+ ┊70┊70┊  }
++┊  ┊71┊
++┊  ┊72┊  reset() {
++┊  ┊73┊    this.filesArray = [];
++┊  ┊74┊    this.files.next(this.filesArray);
++┊  ┊75┊  }
+ ┊71┊76┊}🚫↵
+```
+[}]: #
+
+By using `#upload` we get access to the PartiesUpload component's API. We can now use the `reset()`` method:
+
+[{]: <helper> (diff_step 21.43)
+#### Step 21.43: Reset files on ngSubmit
+
+##### Changed client/imports/app/parties/parties-form.component.html
+```diff
+@@ -6,7 +6,7 @@
+ ┊ 6┊ 6┊        <h2>Add it now! ></h2>
+ ┊ 7┊ 7┊      </div>
+ ┊ 8┊ 8┊      <div class="form-center">
+-┊ 9┊  ┊        <form *ngIf="user" [formGroup]="addForm" (ngSubmit)="addParty()">
++┊  ┊ 9┊        <form *ngIf="user" [formGroup]="addForm" (ngSubmit)="addParty(); upload.reset();">
+ ┊10┊10┊          <div style="display: table-row">
+ ┊11┊11┊            <div class="form-inputs">
+ ┊12┊12┊              <md-input dividerColor="accent" formControlName="name" placeholder="Party name"></md-input>
+```
+[}]: #
+
+And that's it!
+
+### Cloud Storage
+
+By storing files in the cloud you can reduce your costs and get a lot of other benefits.
+
+Since this chapter is all about uploading files and UploadFS doesn't have built-in support for cloud services we should mention another library for that.
+
+We recommend you to use [Slingshot](https://github.com/CulturalMe/meteor-slingshot/). You can install it by running:
+
+    $ meteor add edgee:slingshot
+
+It's very easy to use with AWS S3, Google Cloud and other cloud storage services.
+
+From slignshot's repository:
+
+> meteor-slingshot uploads the files directly to the cloud service from the browser without ever exposing your secret access key or any other sensitive data to the client and without requiring public write access to cloud storage to the entire public.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step20.md) | [Next Step >](step22.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 6289dbe791a6f907575f9cf106799525b88868a0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:34:29 +0300
Subject: [PATCH 254/304] Step 22.1: Add mobile platform

---
 .meteor/platforms | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/.meteor/platforms b/.meteor/platforms
index efeba1b..2d49a85 100644
--- a/.meteor/platforms
+++ b/.meteor/platforms
@@ -1,2 +1,4 @@
-server
+android
 browser
+ios
+server
-- 
2.10.2


From 90296c1b8a1534f3fe59a2f71c3625bcc3885e84 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 11:26:49 +0300
Subject: [PATCH 255/304] Step 22.2: Wrapped Angular 2 bootstrap with Meteor
 startup

---
 client/main.ts | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/main.ts b/client/main.ts
index 45d1530..7c00907 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -6,5 +6,7 @@ import { AppModule } from './imports/app/app.module';
 
 import '../both/methods/parties.methods';
 
-const platform = platformBrowserDynamic();
-platform.bootstrapModule(AppModule);
\ No newline at end of file
+Meteor.startup(() => {
+  const platform = platformBrowserDynamic();
+  platform.bootstrapModule(AppModule);
+});
\ No newline at end of file
-- 
2.10.2


From 0b43e989ced6a5f7350ffef202fff778dfda38ff Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:34:43 +0300
Subject: [PATCH 256/304] Step 22.3: Rename to login.web.component.html

---
 .../imports/app/auth/{login.component.html => login.component.web.html}   | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename client/imports/app/auth/{login.component.html => login.component.web.html} (100%)

diff --git a/client/imports/app/auth/login.component.html b/client/imports/app/auth/login.component.web.html
similarity index 100%
rename from client/imports/app/auth/login.component.html
rename to client/imports/app/auth/login.component.web.html
-- 
2.10.2


From 27ef5db963e1d911ebbf4deb258c12ee360f10f7 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:34:55 +0300
Subject: [PATCH 257/304] Step 22.4: Do the same for login.component.ts

---
 client/imports/app/auth/{login.component.ts => login.component.web.ts} | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename client/imports/app/auth/{login.component.ts => login.component.web.ts} (100%)

diff --git a/client/imports/app/auth/login.component.ts b/client/imports/app/auth/login.component.web.ts
similarity index 100%
rename from client/imports/app/auth/login.component.ts
rename to client/imports/app/auth/login.component.web.ts
-- 
2.10.2


From e5c4475acec7d7633ea7dff0252a051490bacd2d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:35:10 +0300
Subject: [PATCH 258/304] Step 22.5: Update the template

---
 client/imports/app/auth/login.component.web.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/auth/login.component.web.ts b/client/imports/app/auth/login.component.web.ts
index ed740de..81d0e24 100644
--- a/client/imports/app/auth/login.component.web.ts
+++ b/client/imports/app/auth/login.component.web.ts
@@ -3,7 +3,7 @@ import { FormBuilder, FormGroup, Validators } from '@angular/forms';
 import { Router } from '@angular/router';
 import { Meteor } from 'meteor/meteor';
 
-import template from './login.component.html';
+import template from './login.component.web.html';
 
 @Component({
   selector: 'login',
-- 
2.10.2


From 992045cec004f2f44fada99da78fe7673faa80e4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:37:42 +0300
Subject: [PATCH 259/304] Step 22.6: Update the index file

---
 client/imports/app/auth/index.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/auth/index.ts b/client/imports/app/auth/index.ts
index 11c1835..afed0f9 100644
--- a/client/imports/app/auth/index.ts
+++ b/client/imports/app/auth/index.ts
@@ -1,4 +1,4 @@
-import {LoginComponent} from "./login.component";
+import {LoginComponent} from "./login.component.web";
 import {SignupComponent} from "./signup.component";
 import {RecoverComponent} from "./recover.component";
 
-- 
2.10.2


From 07ac7d548828c8321d5f661fca1462e31707ff2b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:38:00 +0300
Subject: [PATCH 260/304] Step 22.7: Add accounts-phone package

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 637554b..efa5b53 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -27,3 +27,4 @@ check
 email
 jalik:ufs
 jalik:ufs-gridfs
+mys:accounts-phone
diff --git a/.meteor/versions b/.meteor/versions
index 50fe94e..eeca0a0 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -61,6 +61,7 @@ modules@0.7.7
 modules-runtime@0.7.7
 mongo@1.1.14
 mongo-id@1.0.6
+mys:accounts-phone@0.0.21
 npm-bcrypt@0.9.2
 npm-mongo@2.2.11_2
 observe-sequence@1.0.14
-- 
2.10.2


From 75b9901e4cce00799d64cc280b1efcb888b1ea2e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:39:01 +0300
Subject: [PATCH 261/304] Step 22.8: Create a view for the mobile login

---
 client/imports/app/auth/login.component.mobile.html | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
 create mode 100644 client/imports/app/auth/login.component.mobile.html

diff --git a/client/imports/app/auth/login.component.mobile.html b/client/imports/app/auth/login.component.mobile.html
new file mode 100644
index 0000000..cd71ab3
--- /dev/null
+++ b/client/imports/app/auth/login.component.mobile.html
@@ -0,0 +1,19 @@
+<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
+  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary" color="primary">
+      Sign in
+    </md-toolbar>
+
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Sign in with SMS</p>
+      </div>
+
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+    </div>
+  </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 67f940f8666a4fc36ac70da37e175f3c39b38561 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:40:04 +0300
Subject: [PATCH 262/304] Step 22.9: Create mobile version of Login component

---
 client/imports/app/auth/login.component.mobile.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 client/imports/app/auth/login.component.mobile.ts

diff --git a/client/imports/app/auth/login.component.mobile.ts b/client/imports/app/auth/login.component.mobile.ts
new file mode 100644
index 0000000..75a6e78
--- /dev/null
+++ b/client/imports/app/auth/login.component.mobile.ts
@@ -0,0 +1,17 @@
+import { Component, OnInit } from '@angular/core';
+import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+import { Router } from '@angular/router';
+
+import template from './login.component.mobile.html';
+
+@Component({
+  selector: 'login',
+  template
+})
+export class MobileLoginComponent implements OnInit {
+  error: string = '';
+
+  constructor(private router: Router, private formBuilder: FormBuilder) {}
+
+  ngOnInit() {}
+}
\ No newline at end of file
-- 
2.10.2


From 677c0fc22bed1297fdc75763aa09fb7f529f226a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:40:42 +0300
Subject: [PATCH 263/304] Step 22.10: Add a form with phone number to provide

---
 client/imports/app/auth/login.component.mobile.html | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/app/auth/login.component.mobile.html b/client/imports/app/auth/login.component.mobile.html
index cd71ab3..2154629 100644
--- a/client/imports/app/auth/login.component.mobile.html
+++ b/client/imports/app/auth/login.component.mobile.html
@@ -9,6 +9,16 @@
         <p class="md-body-2"> Sign in with SMS</p>
       </div>
 
+      <form [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
+            layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="phone" type="text" placeholder="Phone"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="send">Send SMS</button>
+        </div>
+      </form>
+
       <div [hidden]="error == ''">
         <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
           <p class="md-body-1">{{ error }}</p>
-- 
2.10.2


From cc6a6d4a7edf9b10236f135908514fe01653aca5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:42:13 +0300
Subject: [PATCH 264/304] Step 22.11: Implement a phone number verification

---
 client/imports/app/auth/login.component.mobile.ts | 28 ++++++++++++++++++++---
 1 file changed, 25 insertions(+), 3 deletions(-)

diff --git a/client/imports/app/auth/login.component.mobile.ts b/client/imports/app/auth/login.component.mobile.ts
index 75a6e78..651abdc 100644
--- a/client/imports/app/auth/login.component.mobile.ts
+++ b/client/imports/app/auth/login.component.mobile.ts
@@ -1,6 +1,7 @@
-import { Component, OnInit } from '@angular/core';
+import {Component, OnInit, NgZone} from '@angular/core';
 import { FormBuilder, FormGroup, Validators } from '@angular/forms';
 import { Router } from '@angular/router';
+import { Accounts } from 'meteor/accounts-base';
 
 import template from './login.component.mobile.html';
 
@@ -10,8 +11,29 @@ import template from './login.component.mobile.html';
 })
 export class MobileLoginComponent implements OnInit {
   error: string = '';
+  phoneForm: FormGroup;
+  phone: string;
 
-  constructor(private router: Router, private formBuilder: FormBuilder) {}
+  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
 
-  ngOnInit() {}
+  ngOnInit() {
+    this.phoneForm = this.formBuilder.group({
+      phone: ['', Validators.required]
+    });
+  }
+
+  send() {
+    if (this.phoneForm.valid) {
+      Accounts.requestPhoneVerification(this.phoneForm.value.phone, (err) => {
+        this.zone.run(() => {
+          if (err) {
+            this.error = err.reason || err;
+          } else {
+            this.phone = this.phoneForm.value.phone;
+            this.error = '';
+          }
+        });
+      });
+    }
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 21a1e5cad3cd1a83e9bc0dd29474bd648b055d8f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:43:17 +0300
Subject: [PATCH 265/304] Step 22.12: Implement a code verification

---
 client/imports/app/auth/login.component.mobile.ts | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/client/imports/app/auth/login.component.mobile.ts b/client/imports/app/auth/login.component.mobile.ts
index 651abdc..4695bda 100644
--- a/client/imports/app/auth/login.component.mobile.ts
+++ b/client/imports/app/auth/login.component.mobile.ts
@@ -13,6 +13,8 @@ export class MobileLoginComponent implements OnInit {
   error: string = '';
   phoneForm: FormGroup;
   phone: string;
+  verifyForm: FormGroup;
+  isStepTwo: boolean = false;
 
   constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
 
@@ -20,6 +22,10 @@ export class MobileLoginComponent implements OnInit {
     this.phoneForm = this.formBuilder.group({
       phone: ['', Validators.required]
     });
+
+    this.verifyForm = this.formBuilder.group({
+        code: ['', Validators.required]
+    });
   }
 
   send() {
@@ -31,6 +37,23 @@ export class MobileLoginComponent implements OnInit {
           } else {
             this.phone = this.phoneForm.value.phone;
             this.error = '';
+            this.isStepTwo = true;
+          }
+        });
+      });
+    }
+  }
+
+
+  verify() {
+    if (this.verifyForm.valid) {
+      Accounts.verifyPhone(this.phone, this.verifyForm.value.code, (err) => {
+        this.zone.run(() => {
+          if (err) {
+            this.error = err.reason || err;
+          }
+          else {
+            this.router.navigate(['/']);
           }
         });
       });
-- 
2.10.2


From 5e1cdae8f5148715ead158ae5848954a63b495f1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:44:00 +0300
Subject: [PATCH 266/304] Step 22.13: Create a form with code verification

---
 client/imports/app/auth/login.component.mobile.html | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/auth/login.component.mobile.html b/client/imports/app/auth/login.component.mobile.html
index 2154629..f6dc6b7 100644
--- a/client/imports/app/auth/login.component.mobile.html
+++ b/client/imports/app/auth/login.component.mobile.html
@@ -9,7 +9,7 @@
         <p class="md-body-2"> Sign in with SMS</p>
       </div>
 
-      <form [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
+      <form [formGroup]="phoneForm" *ngIf="!isStepTwo" #f="ngForm" (ngSubmit)="send()"
             layout="column" layout-fill layout-padding layout-margin>
 
         <md-input formControlName="phone" type="text" placeholder="Phone"></md-input>
@@ -19,6 +19,16 @@
         </div>
       </form>
 
+      <form *ngIf="isStepTwo" [formGroup]="verifyForm" #f="ngForm" (ngSubmit)="verify()"
+            layout="column" layout-fill layout-padding layout-margin>
+
+        <md-input formControlName="code" type="text" placeholder="Code"></md-input>
+
+        <div layout="row" layout-align="space-between center">
+          <button md-raised-button class="md-primary" type="submit" aria-label="verify">Verify code</button>
+        </div>
+      </form>
+
       <div [hidden]="error == ''">
         <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
           <p class="md-body-1">{{ error }}</p>
-- 
2.10.2


From 347766d350b7cadfd2246b8c64073910c291eeee Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:46:50 +0300
Subject: [PATCH 267/304] Step 22.14: Added MobileLoginComponent to the index
 file

---
 client/imports/app/auth/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/auth/index.ts b/client/imports/app/auth/index.ts
index afed0f9..0b7a720 100644
--- a/client/imports/app/auth/index.ts
+++ b/client/imports/app/auth/index.ts
@@ -1,9 +1,11 @@
 import {LoginComponent} from "./login.component.web";
 import {SignupComponent} from "./signup.component";
 import {RecoverComponent} from "./recover.component";
+import {MobileLoginComponent} from "./login.component.mobile";
 
 export const AUTH_DECLARATIONS = [
   LoginComponent,
   SignupComponent,
-  RecoverComponent
+  RecoverComponent,
+  MobileLoginComponent
 ];
-- 
2.10.2


From 61c45fe5c5bde0a5781b80429a1e9466623c7a53 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Tue, 27 Sep 2016 16:47:36 +0300
Subject: [PATCH 268/304] Step 22.15: Choose mobile or web version

---
 client/imports/app/app.routes.ts | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index ed9f829..dfa1246 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -3,14 +3,15 @@ import { Meteor } from 'meteor/meteor';
 
 import { PartiesListComponent } from './parties/parties-list.component';
 import { PartyDetailsComponent } from './parties/party-details.component';
-import {LoginComponent} from "./auth/login.component";
 import {SignupComponent} from "./auth/signup.component";
 import {RecoverComponent} from "./auth/recover.component";
+import {MobileLoginComponent} from "./auth/login.component.mobile";
+import {LoginComponent} from "./auth/login.component.web";
 
 export const routes: Route[] = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
-  { path: 'login', component: LoginComponent },
+  { path: 'login', component: Meteor.isCordova ? MobileLoginComponent : LoginComponent },
   { path: 'signup', component: SignupComponent },
   { path: 'recover', component: RecoverComponent }
 ];
-- 
2.10.2


From 5875cbb51894b82d4039523be3b52a0db211039b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 2 Nov 2016 19:11:25 +0200
Subject: [PATCH 269/304] Step 22.16: Added missing typings for accounts-phone
 package

---
 typings.d.ts | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/typings.d.ts b/typings.d.ts
index 2376734..4802eb1 100644
--- a/typings.d.ts
+++ b/typings.d.ts
@@ -38,3 +38,10 @@ declare module 'meteor/tmeasday:publish-counts' {
 
   export const Counts: CountsObject;
 }
+
+declare module 'meteor/accounts-base' {
+  module Accounts {
+    function requestPhoneVerification(phoneNumber: string, callback?: Function): void;
+    function verifyPhone(phoneNumber: string, code: string, callback?: Function): void;
+  }
+}
\ No newline at end of file
-- 
2.10.2


From ac8003c49690c1f8e5afa74c79640e35148096ea Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:55 -0200
Subject: [PATCH 270/304] Step 22: Mobile Support & Packages Isolation

---
 manuals/templates/step22.md | 123 +++++++++
 manuals/views/step22.md     | 608 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 731 insertions(+)
 create mode 100644 manuals/templates/step22.md
 create mode 100644 manuals/views/step22.md

diff --git a/manuals/templates/step22.md b/manuals/templates/step22.md
new file mode 100644
index 0000000..aabef88
--- /dev/null
+++ b/manuals/templates/step22.md
@@ -0,0 +1,123 @@
+This step of the tutorial teaches us how to add mobile support for iOS and Android and how to elegantly reuse code using the es2015 modules.
+
+In this tutorial's example we will differentiate the login part of the project: in the browser users will login using email and password and in the mobile app users will login with SMS verification.
+
+### Adding mobile support for the project:
+
+To add mobile support, select the platform(s) you want and run the following command:
+
+    $ meteor add-platform ios
+    # OR / AND
+    $ meteor add-platform android
+
+And now to run in the emulator, run:
+
+    $ meteor run ios
+    # OR
+    $ meteor run android
+
+You can also run in a real mobile device, for more instructions, read the ["Mobile" chapter](http://guide.meteor.com/mobile.html) of the Official Meteor Guide.
+
+Before we can run Meteor and Angular 2 on mobile platform, we need to make sure that our Angular 2 NgModule initialized only when Meteor platform declares that it's ready, to do so, let's wrap the `bootstrapModule` with `Meteor.startup`:
+
+{{{diff_step 22.2}}}
+
+### Creating Mobile/Web Separation
+
+We're going to keep the view and the component for the web under `*.component.web.html` and `*.component.web.ts` and doing the same for `*.component.mobile.html` and `*.component.mobile.ts`.
+
+First thing to do is to rename `login.component.html` to `login.component.web.html`:
+
+{{{diff_step 22.3}}}
+
+Let's do the same with `login.component.ts` file:
+
+{{{diff_step 22.4}}}
+
+with one small change which is a new `template` property:
+
+{{{diff_step 22.5}}}
+
+And let's update the imports in the index file:
+
+{{{diff_step 22.6}}}
+
+### SMS verification
+
+As I mentioned before, we're going to use SMS verification to log in a user on the mobile application.
+
+There is a package for that!
+
+We will use an external package that extends Meteor's Accounts, called [accounts-phone](https://atmospherejs.com/okland/accounts-phone) that verifies phone number with SMS message, so let's add it:
+
+    $ meteor add mys:accounts-phone
+
+> Note that in development mode - the SMS will not be sent - and the verification code will be printed to the Meteor log.
+
+**We can now move on to create a mobile version Login Component.**
+
+A template of a mobile version will be pretty much the same as for browsers:
+
+{{{diff_step 22.8}}}
+
+We can use the same directives in the component as in Web version, so let's create a basic component without any functionality:
+
+{{{diff_step 22.9}}}
+
+SMS verification is a two-step process. First thing to do is to verify a phone number.
+
+Let's create a form for that:
+
+{{{diff_step 22.10}}}
+
+It's a simple form, basically the same as the form with Email and password verification we did in previous chapters.
+
+We can now take care of the logic. Let's create a `send` method:
+
+{{{diff_step 22.11}}}
+
+What we did? Few things:
+
+* form called `phoneForm` with one field `phone`.
+* `send` method that calls `Accounts.requestPhoneVerification` to verify phone number and to send SMS with verification code.
+* we're also keeping phone number outside the form's scope.
+
+Great, we're half way there!
+
+Now we need to verify that code. We will keep all the logic under `verify` method:
+
+{{{diff_step 22.12}}}
+
+As you can see, we used `Accounts.verifyPhone` with proper arguments to call the verification process.
+
+There are two more things that you should notice.
+
+* New property `isStepTwo` that holds the status of sign in process. Based on that property we can tell if someone is still in the first phase or he already wants to verify code sent via SMS.
+* Redirection to `PartiesList` if verification succeed.
+
+We have all the logic, we still need to create a view for it:
+
+{{{diff_step 22.13}}}
+
+And let's add the mobile version of the Component to the index file:
+
+{{{diff_step 22.14}}}
+
+It seems like both versions are ready.
+
+We can now move on to `client/app.routes.ts`.
+
+Just as you can use `Meteor.isServer` and `Meteor.isClient` to separate your client-side and server-side code, you can use `Meteor.isCordova` to separate your Cordova-specific code from the rest of your code.
+
+{{{diff_step 22.15}}}
+
+As you can see, we're importing both version of Login Component. But only one is being used, depending on Meteor.isCordova value.
+
+If we would run Socially in a browser `LoginComponent` for web platform will be used.
+
+And that's it!
+
+
+## Summary
+
+In this tutorial we showed how to make our code behave differently in mobile and web platforms. We did this by creating separate es2015 modules with specific code for mobile and web, and using them based on the platform that runs the application.
diff --git a/manuals/views/step22.md b/manuals/views/step22.md
new file mode 100644
index 0000000..2dcd47b
--- /dev/null
+++ b/manuals/views/step22.md
@@ -0,0 +1,608 @@
+[{]: <region> (header)
+# Step 22: Mobile Support & Packages Isolation
+[}]: #
+[{]: <region> (body)
+This step of the tutorial teaches us how to add mobile support for iOS and Android and how to elegantly reuse code using the es2015 modules.
+
+In this tutorial's example we will differentiate the login part of the project: in the browser users will login using email and password and in the mobile app users will login with SMS verification.
+
+### Adding mobile support for the project:
+
+To add mobile support, select the platform(s) you want and run the following command:
+
+    $ meteor add-platform ios
+    # OR / AND
+    $ meteor add-platform android
+
+And now to run in the emulator, run:
+
+    $ meteor run ios
+    # OR
+    $ meteor run android
+
+You can also run in a real mobile device, for more instructions, read the ["Mobile" chapter](http://guide.meteor.com/mobile.html) of the Official Meteor Guide.
+
+Before we can run Meteor and Angular 2 on mobile platform, we need to make sure that our Angular 2 NgModule initialized only when Meteor platform declares that it's ready, to do so, let's wrap the `bootstrapModule` with `Meteor.startup`:
+
+[{]: <helper> (diff_step 22.2)
+#### Step 22.2: Wrapped Angular 2 bootstrap with Meteor startup
+
+##### Changed client/main.ts
+```diff
+@@ -6,5 +6,7 @@
+ ┊ 6┊ 6┊
+ ┊ 7┊ 7┊import '../both/methods/parties.methods';
+ ┊ 8┊ 8┊
+-┊ 9┊  ┊const platform = platformBrowserDynamic();
+-┊10┊  ┊platform.bootstrapModule(AppModule);🚫↵
++┊  ┊ 9┊Meteor.startup(() => {
++┊  ┊10┊  const platform = platformBrowserDynamic();
++┊  ┊11┊  platform.bootstrapModule(AppModule);
++┊  ┊12┊});🚫↵
+```
+[}]: #
+
+### Creating Mobile/Web Separation
+
+We're going to keep the view and the component for the web under `*.component.web.html` and `*.component.web.ts` and doing the same for `*.component.mobile.html` and `*.component.mobile.ts`.
+
+First thing to do is to rename `login.component.html` to `login.component.web.html`:
+
+[{]: <helper> (diff_step 22.3)
+#### Step 22.3: Rename to login.web.component.html
+
+##### Deleted client/imports/app/auth/login.component.html
+```diff
+@@ -1,37 +0,0 @@
+-┊ 1┊  ┊<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
+-┊ 2┊  ┊  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+-┊ 3┊  ┊    <md-toolbar class="md-primary" color="primary">
+-┊ 4┊  ┊      Sign in
+-┊ 5┊  ┊    </md-toolbar>
+-┊ 6┊  ┊
+-┊ 7┊  ┊    <div layout="column" layout-margin layout-padding>
+-┊ 8┊  ┊      <div layout="row" layout-margin>
+-┊ 9┊  ┊        <p class="md-body-2"> Sign in with your email</p>
+-┊10┊  ┊      </div>
+-┊11┊  ┊
+-┊12┊  ┊      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
+-┊13┊  ┊            layout="column" layout-fill layout-padding layout-margin>
+-┊14┊  ┊
+-┊15┊  ┊        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
+-┊16┊  ┊        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
+-┊17┊  ┊
+-┊18┊  ┊        <div layout="row" layout-align="space-between center">
+-┊19┊  ┊          <a md-button [routerLink]="['/recover']">Forgot password?</a>
+-┊20┊  ┊          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
+-┊21┊  ┊        </div>
+-┊22┊  ┊      </form>
+-┊23┊  ┊
+-┊24┊  ┊      <div [hidden]="error == ''">
+-┊25┊  ┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+-┊26┊  ┊          <p class="md-body-1">{{ error }}</p>
+-┊27┊  ┊        </md-toolbar>
+-┊28┊  ┊      </div>
+-┊29┊  ┊
+-┊30┊  ┊      <md-divider></md-divider>
+-┊31┊  ┊
+-┊32┊  ┊      <div layout="row" layout-align="center">
+-┊33┊  ┊        <a md-button [routerLink]="['/signup']">Need an account?</a>
+-┊34┊  ┊      </div>
+-┊35┊  ┊    </div>
+-┊36┊  ┊  </div>
+-┊37┊  ┊</div>🚫↵
+```
+
+##### Added client/imports/app/auth/login.component.web.html
+```diff
+@@ -0,0 +1,37 @@
++┊  ┊ 1┊<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
++┊  ┊ 2┊  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
++┊  ┊ 3┊    <md-toolbar class="md-primary" color="primary">
++┊  ┊ 4┊      Sign in
++┊  ┊ 5┊    </md-toolbar>
++┊  ┊ 6┊
++┊  ┊ 7┊    <div layout="column" layout-margin layout-padding>
++┊  ┊ 8┊      <div layout="row" layout-margin>
++┊  ┊ 9┊        <p class="md-body-2"> Sign in with your email</p>
++┊  ┊10┊      </div>
++┊  ┊11┊
++┊  ┊12┊      <form [formGroup]="loginForm" #f="ngForm" (ngSubmit)="login()"
++┊  ┊13┊            layout="column" layout-fill layout-padding layout-margin>
++┊  ┊14┊
++┊  ┊15┊        <md-input formControlName="email" type="email" placeholder="Email"></md-input>
++┊  ┊16┊        <md-input formControlName="password" type="password" placeholder="Password"></md-input>
++┊  ┊17┊
++┊  ┊18┊        <div layout="row" layout-align="space-between center">
++┊  ┊19┊          <a md-button [routerLink]="['/recover']">Forgot password?</a>
++┊  ┊20┊          <button md-raised-button class="md-primary" type="submit" aria-label="login">Sign In</button>
++┊  ┊21┊        </div>
++┊  ┊22┊      </form>
++┊  ┊23┊
++┊  ┊24┊      <div [hidden]="error == ''">
++┊  ┊25┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
++┊  ┊26┊          <p class="md-body-1">{{ error }}</p>
++┊  ┊27┊        </md-toolbar>
++┊  ┊28┊      </div>
++┊  ┊29┊
++┊  ┊30┊      <md-divider></md-divider>
++┊  ┊31┊
++┊  ┊32┊      <div layout="row" layout-align="center">
++┊  ┊33┊        <a md-button [routerLink]="['/signup']">Need an account?</a>
++┊  ┊34┊      </div>
++┊  ┊35┊    </div>
++┊  ┊36┊  </div>
++┊  ┊37┊</div>🚫↵
+```
+[}]: #
+
+Let's do the same with `login.component.ts` file:
+
+[{]: <helper> (diff_step 22.4)
+#### Step 22.4: Do the same for login.component.ts
+
+##### Deleted client/imports/app/auth/login.component.ts
+```diff
+@@ -1,40 +0,0 @@
+-┊ 1┊  ┊import {Component, OnInit, NgZone} from '@angular/core';
+-┊ 2┊  ┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+-┊ 3┊  ┊import { Router } from '@angular/router';
+-┊ 4┊  ┊import { Meteor } from 'meteor/meteor';
+-┊ 5┊  ┊
+-┊ 6┊  ┊import template from './login.component.html';
+-┊ 7┊  ┊
+-┊ 8┊  ┊@Component({
+-┊ 9┊  ┊  selector: 'login',
+-┊10┊  ┊  template
+-┊11┊  ┊})
+-┊12┊  ┊export class LoginComponent implements OnInit {
+-┊13┊  ┊  loginForm: FormGroup;
+-┊14┊  ┊  error: string;
+-┊15┊  ┊
+-┊16┊  ┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
+-┊17┊  ┊
+-┊18┊  ┊  ngOnInit() {
+-┊19┊  ┊    this.loginForm = this.formBuilder.group({
+-┊20┊  ┊      email: ['', Validators.required],
+-┊21┊  ┊      password: ['', Validators.required]
+-┊22┊  ┊    });
+-┊23┊  ┊
+-┊24┊  ┊    this.error = '';
+-┊25┊  ┊  }
+-┊26┊  ┊
+-┊27┊  ┊  login() {
+-┊28┊  ┊    if (this.loginForm.valid) {
+-┊29┊  ┊      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
+-┊30┊  ┊        if (err) {
+-┊31┊  ┊          this.zone.run(() => {
+-┊32┊  ┊            this.error = err;
+-┊33┊  ┊          });
+-┊34┊  ┊        } else {
+-┊35┊  ┊          this.router.navigate(['/']);
+-┊36┊  ┊        }
+-┊37┊  ┊      });
+-┊38┊  ┊    }
+-┊39┊  ┊  }
+-┊40┊  ┊}🚫↵
+```
+
+##### Added client/imports/app/auth/login.component.web.ts
+```diff
+@@ -0,0 +1,40 @@
++┊  ┊ 1┊import {Component, OnInit, NgZone} from '@angular/core';
++┊  ┊ 2┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
++┊  ┊ 3┊import { Router } from '@angular/router';
++┊  ┊ 4┊import { Meteor } from 'meteor/meteor';
++┊  ┊ 5┊
++┊  ┊ 6┊import template from './login.component.html';
++┊  ┊ 7┊
++┊  ┊ 8┊@Component({
++┊  ┊ 9┊  selector: 'login',
++┊  ┊10┊  template
++┊  ┊11┊})
++┊  ┊12┊export class LoginComponent implements OnInit {
++┊  ┊13┊  loginForm: FormGroup;
++┊  ┊14┊  error: string;
++┊  ┊15┊
++┊  ┊16┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
++┊  ┊17┊
++┊  ┊18┊  ngOnInit() {
++┊  ┊19┊    this.loginForm = this.formBuilder.group({
++┊  ┊20┊      email: ['', Validators.required],
++┊  ┊21┊      password: ['', Validators.required]
++┊  ┊22┊    });
++┊  ┊23┊
++┊  ┊24┊    this.error = '';
++┊  ┊25┊  }
++┊  ┊26┊
++┊  ┊27┊  login() {
++┊  ┊28┊    if (this.loginForm.valid) {
++┊  ┊29┊      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {
++┊  ┊30┊        if (err) {
++┊  ┊31┊          this.zone.run(() => {
++┊  ┊32┊            this.error = err;
++┊  ┊33┊          });
++┊  ┊34┊        } else {
++┊  ┊35┊          this.router.navigate(['/']);
++┊  ┊36┊        }
++┊  ┊37┊      });
++┊  ┊38┊    }
++┊  ┊39┊  }
++┊  ┊40┊}🚫↵
+```
+[}]: #
+
+with one small change which is a new `template` property:
+
+[{]: <helper> (diff_step 22.5)
+#### Step 22.5: Update the template
+
+##### Changed client/imports/app/auth/login.component.web.ts
+```diff
+@@ -3,7 +3,7 @@
+ ┊3┊3┊import { Router } from '@angular/router';
+ ┊4┊4┊import { Meteor } from 'meteor/meteor';
+ ┊5┊5┊
+-┊6┊ ┊import template from './login.component.html';
++┊ ┊6┊import template from './login.component.web.html';
+ ┊7┊7┊
+ ┊8┊8┊@Component({
+ ┊9┊9┊  selector: 'login',
+```
+[}]: #
+
+And let's update the imports in the index file:
+
+[{]: <helper> (diff_step 22.6)
+#### Step 22.6: Update the index file
+
+##### Changed client/imports/app/auth/index.ts
+```diff
+@@ -1,4 +1,4 @@
+-┊1┊ ┊import {LoginComponent} from "./login.component";
++┊ ┊1┊import {LoginComponent} from "./login.component.web";
+ ┊2┊2┊import {SignupComponent} from "./signup.component";
+ ┊3┊3┊import {RecoverComponent} from "./recover.component";
+```
+[}]: #
+
+### SMS verification
+
+As I mentioned before, we're going to use SMS verification to log in a user on the mobile application.
+
+There is a package for that!
+
+We will use an external package that extends Meteor's Accounts, called [accounts-phone](https://atmospherejs.com/okland/accounts-phone) that verifies phone number with SMS message, so let's add it:
+
+    $ meteor add mys:accounts-phone
+
+> Note that in development mode - the SMS will not be sent - and the verification code will be printed to the Meteor log.
+
+**We can now move on to create a mobile version Login Component.**
+
+A template of a mobile version will be pretty much the same as for browsers:
+
+[{]: <helper> (diff_step 22.8)
+#### Step 22.8: Create a view for the mobile login
+
+##### Added client/imports/app/auth/login.component.mobile.html
+```diff
+@@ -0,0 +1,19 @@
++┊  ┊ 1┊<div class="md-content" layout="row" layout-align="center start" layout-fill layout-margin>
++┊  ┊ 2┊  <div layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
++┊  ┊ 3┊    <md-toolbar class="md-primary" color="primary">
++┊  ┊ 4┊      Sign in
++┊  ┊ 5┊    </md-toolbar>
++┊  ┊ 6┊
++┊  ┊ 7┊    <div layout="column" layout-fill layout-margin layout-padding>
++┊  ┊ 8┊      <div layout="row" layout-fill layout-margin>
++┊  ┊ 9┊        <p class="md-body-2"> Sign in with SMS</p>
++┊  ┊10┊      </div>
++┊  ┊11┊
++┊  ┊12┊      <div [hidden]="error == ''">
++┊  ┊13┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
++┊  ┊14┊          <p class="md-body-1">{{ error }}</p>
++┊  ┊15┊        </md-toolbar>
++┊  ┊16┊      </div>
++┊  ┊17┊    </div>
++┊  ┊18┊  </div>
++┊  ┊19┊</div>🚫↵
+```
+[}]: #
+
+We can use the same directives in the component as in Web version, so let's create a basic component without any functionality:
+
+[{]: <helper> (diff_step 22.9)
+#### Step 22.9: Create mobile version of Login component
+
+##### Added client/imports/app/auth/login.component.mobile.ts
+```diff
+@@ -0,0 +1,17 @@
++┊  ┊ 1┊import { Component, OnInit } from '@angular/core';
++┊  ┊ 2┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
++┊  ┊ 3┊import { Router } from '@angular/router';
++┊  ┊ 4┊
++┊  ┊ 5┊import template from './login.component.mobile.html';
++┊  ┊ 6┊
++┊  ┊ 7┊@Component({
++┊  ┊ 8┊  selector: 'login',
++┊  ┊ 9┊  template
++┊  ┊10┊})
++┊  ┊11┊export class MobileLoginComponent implements OnInit {
++┊  ┊12┊  error: string = '';
++┊  ┊13┊
++┊  ┊14┊  constructor(private router: Router, private formBuilder: FormBuilder) {}
++┊  ┊15┊
++┊  ┊16┊  ngOnInit() {}
++┊  ┊17┊}🚫↵
+```
+[}]: #
+
+SMS verification is a two-step process. First thing to do is to verify a phone number.
+
+Let's create a form for that:
+
+[{]: <helper> (diff_step 22.10)
+#### Step 22.10: Add a form with phone number to provide
+
+##### Changed client/imports/app/auth/login.component.mobile.html
+```diff
+@@ -9,6 +9,16 @@
+ ┊ 9┊ 9┊        <p class="md-body-2"> Sign in with SMS</p>
+ ┊10┊10┊      </div>
+ ┊11┊11┊
++┊  ┊12┊      <form [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
++┊  ┊13┊            layout="column" layout-fill layout-padding layout-margin>
++┊  ┊14┊
++┊  ┊15┊        <md-input formControlName="phone" type="text" placeholder="Phone"></md-input>
++┊  ┊16┊
++┊  ┊17┊        <div layout="row" layout-align="space-between center">
++┊  ┊18┊          <button md-raised-button class="md-primary" type="submit" aria-label="send">Send SMS</button>
++┊  ┊19┊        </div>
++┊  ┊20┊      </form>
++┊  ┊21┊
+ ┊12┊22┊      <div [hidden]="error == ''">
+ ┊13┊23┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+ ┊14┊24┊          <p class="md-body-1">{{ error }}</p>
+```
+[}]: #
+
+It's a simple form, basically the same as the form with Email and password verification we did in previous chapters.
+
+We can now take care of the logic. Let's create a `send` method:
+
+[{]: <helper> (diff_step 22.11)
+#### Step 22.11: Implement a phone number verification
+
+##### Changed client/imports/app/auth/login.component.mobile.ts
+```diff
+@@ -1,6 +1,7 @@
+-┊1┊ ┊import { Component, OnInit } from '@angular/core';
++┊ ┊1┊import {Component, OnInit, NgZone} from '@angular/core';
+ ┊2┊2┊import { FormBuilder, FormGroup, Validators } from '@angular/forms';
+ ┊3┊3┊import { Router } from '@angular/router';
++┊ ┊4┊import { Accounts } from 'meteor/accounts-base';
+ ┊4┊5┊
+ ┊5┊6┊import template from './login.component.mobile.html';
+ ┊6┊7┊
+```
+```diff
+@@ -10,8 +11,29 @@
+ ┊10┊11┊})
+ ┊11┊12┊export class MobileLoginComponent implements OnInit {
+ ┊12┊13┊  error: string = '';
++┊  ┊14┊  phoneForm: FormGroup;
++┊  ┊15┊  phone: string;
+ ┊13┊16┊
+-┊14┊  ┊  constructor(private router: Router, private formBuilder: FormBuilder) {}
++┊  ┊17┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
+ ┊15┊18┊
+-┊16┊  ┊  ngOnInit() {}
++┊  ┊19┊  ngOnInit() {
++┊  ┊20┊    this.phoneForm = this.formBuilder.group({
++┊  ┊21┊      phone: ['', Validators.required]
++┊  ┊22┊    });
++┊  ┊23┊  }
++┊  ┊24┊
++┊  ┊25┊  send() {
++┊  ┊26┊    if (this.phoneForm.valid) {
++┊  ┊27┊      Accounts.requestPhoneVerification(this.phoneForm.value.phone, (err) => {
++┊  ┊28┊        this.zone.run(() => {
++┊  ┊29┊          if (err) {
++┊  ┊30┊            this.error = err.reason || err;
++┊  ┊31┊          } else {
++┊  ┊32┊            this.phone = this.phoneForm.value.phone;
++┊  ┊33┊            this.error = '';
++┊  ┊34┊          }
++┊  ┊35┊        });
++┊  ┊36┊      });
++┊  ┊37┊    }
++┊  ┊38┊  }
+ ┊17┊39┊}🚫↵
+```
+[}]: #
+
+What we did? Few things:
+
+* form called `phoneForm` with one field `phone`.
+* `send` method that calls `Accounts.requestPhoneVerification` to verify phone number and to send SMS with verification code.
+* we're also keeping phone number outside the form's scope.
+
+Great, we're half way there!
+
+Now we need to verify that code. We will keep all the logic under `verify` method:
+
+[{]: <helper> (diff_step 22.12)
+#### Step 22.12: Implement a code verification
+
+##### Changed client/imports/app/auth/login.component.mobile.ts
+```diff
+@@ -13,6 +13,8 @@
+ ┊13┊13┊  error: string = '';
+ ┊14┊14┊  phoneForm: FormGroup;
+ ┊15┊15┊  phone: string;
++┊  ┊16┊  verifyForm: FormGroup;
++┊  ┊17┊  isStepTwo: boolean = false;
+ ┊16┊18┊
+ ┊17┊19┊  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}
+ ┊18┊20┊
+```
+```diff
+@@ -20,6 +22,10 @@
+ ┊20┊22┊    this.phoneForm = this.formBuilder.group({
+ ┊21┊23┊      phone: ['', Validators.required]
+ ┊22┊24┊    });
++┊  ┊25┊
++┊  ┊26┊    this.verifyForm = this.formBuilder.group({
++┊  ┊27┊        code: ['', Validators.required]
++┊  ┊28┊    });
+ ┊23┊29┊  }
+ ┊24┊30┊
+ ┊25┊31┊  send() {
+```
+```diff
+@@ -31,6 +37,23 @@
+ ┊31┊37┊          } else {
+ ┊32┊38┊            this.phone = this.phoneForm.value.phone;
+ ┊33┊39┊            this.error = '';
++┊  ┊40┊            this.isStepTwo = true;
++┊  ┊41┊          }
++┊  ┊42┊        });
++┊  ┊43┊      });
++┊  ┊44┊    }
++┊  ┊45┊  }
++┊  ┊46┊
++┊  ┊47┊
++┊  ┊48┊  verify() {
++┊  ┊49┊    if (this.verifyForm.valid) {
++┊  ┊50┊      Accounts.verifyPhone(this.phone, this.verifyForm.value.code, (err) => {
++┊  ┊51┊        this.zone.run(() => {
++┊  ┊52┊          if (err) {
++┊  ┊53┊            this.error = err.reason || err;
++┊  ┊54┊          }
++┊  ┊55┊          else {
++┊  ┊56┊            this.router.navigate(['/']);
+ ┊34┊57┊          }
+ ┊35┊58┊        });
+ ┊36┊59┊      });
+```
+[}]: #
+
+As you can see, we used `Accounts.verifyPhone` with proper arguments to call the verification process.
+
+There are two more things that you should notice.
+
+* New property `isStepTwo` that holds the status of sign in process. Based on that property we can tell if someone is still in the first phase or he already wants to verify code sent via SMS.
+* Redirection to `PartiesList` if verification succeed.
+
+We have all the logic, we still need to create a view for it:
+
+[{]: <helper> (diff_step 22.13)
+#### Step 22.13: Create a form with code verification
+
+##### Changed client/imports/app/auth/login.component.mobile.html
+```diff
+@@ -9,7 +9,7 @@
+ ┊ 9┊ 9┊        <p class="md-body-2"> Sign in with SMS</p>
+ ┊10┊10┊      </div>
+ ┊11┊11┊
+-┊12┊  ┊      <form [formGroup]="phoneForm" #f="ngForm" (ngSubmit)="send()"
++┊  ┊12┊      <form [formGroup]="phoneForm" *ngIf="!isStepTwo" #f="ngForm" (ngSubmit)="send()"
+ ┊13┊13┊            layout="column" layout-fill layout-padding layout-margin>
+ ┊14┊14┊
+ ┊15┊15┊        <md-input formControlName="phone" type="text" placeholder="Phone"></md-input>
+```
+```diff
+@@ -19,6 +19,16 @@
+ ┊19┊19┊        </div>
+ ┊20┊20┊      </form>
+ ┊21┊21┊
++┊  ┊22┊      <form *ngIf="isStepTwo" [formGroup]="verifyForm" #f="ngForm" (ngSubmit)="verify()"
++┊  ┊23┊            layout="column" layout-fill layout-padding layout-margin>
++┊  ┊24┊
++┊  ┊25┊        <md-input formControlName="code" type="text" placeholder="Code"></md-input>
++┊  ┊26┊
++┊  ┊27┊        <div layout="row" layout-align="space-between center">
++┊  ┊28┊          <button md-raised-button class="md-primary" type="submit" aria-label="verify">Verify code</button>
++┊  ┊29┊        </div>
++┊  ┊30┊      </form>
++┊  ┊31┊
+ ┊22┊32┊      <div [hidden]="error == ''">
+ ┊23┊33┊        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+ ┊24┊34┊          <p class="md-body-1">{{ error }}</p>
+```
+[}]: #
+
+And let's add the mobile version of the Component to the index file:
+
+[{]: <helper> (diff_step 22.14)
+#### Step 22.14: Added MobileLoginComponent to the index file
+
+##### Changed client/imports/app/auth/index.ts
+```diff
+@@ -1,9 +1,11 @@
+ ┊ 1┊ 1┊import {LoginComponent} from "./login.component.web";
+ ┊ 2┊ 2┊import {SignupComponent} from "./signup.component";
+ ┊ 3┊ 3┊import {RecoverComponent} from "./recover.component";
++┊  ┊ 4┊import {MobileLoginComponent} from "./login.component.mobile";
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊export const AUTH_DECLARATIONS = [
+ ┊ 6┊ 7┊  LoginComponent,
+ ┊ 7┊ 8┊  SignupComponent,
+-┊ 8┊  ┊  RecoverComponent
++┊  ┊ 9┊  RecoverComponent,
++┊  ┊10┊  MobileLoginComponent
+ ┊ 9┊11┊];
+```
+[}]: #
+
+It seems like both versions are ready.
+
+We can now move on to `client/app.routes.ts`.
+
+Just as you can use `Meteor.isServer` and `Meteor.isClient` to separate your client-side and server-side code, you can use `Meteor.isCordova` to separate your Cordova-specific code from the rest of your code.
+
+[{]: <helper> (diff_step 22.15)
+#### Step 22.15: Choose mobile or web version
+
+##### Changed client/imports/app/app.routes.ts
+```diff
+@@ -3,14 +3,15 @@
+ ┊ 3┊ 3┊
+ ┊ 4┊ 4┊import { PartiesListComponent } from './parties/parties-list.component';
+ ┊ 5┊ 5┊import { PartyDetailsComponent } from './parties/party-details.component';
+-┊ 6┊  ┊import {LoginComponent} from "./auth/login.component";
+ ┊ 7┊ 6┊import {SignupComponent} from "./auth/signup.component";
+ ┊ 8┊ 7┊import {RecoverComponent} from "./auth/recover.component";
++┊  ┊ 8┊import {MobileLoginComponent} from "./auth/login.component.mobile";
++┊  ┊ 9┊import {LoginComponent} from "./auth/login.component.web";
+ ┊ 9┊10┊
+ ┊10┊11┊export const routes: Route[] = [
+ ┊11┊12┊  { path: '', component: PartiesListComponent },
+ ┊12┊13┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
+-┊13┊  ┊  { path: 'login', component: LoginComponent },
++┊  ┊14┊  { path: 'login', component: Meteor.isCordova ? MobileLoginComponent : LoginComponent },
+ ┊14┊15┊  { path: 'signup', component: SignupComponent },
+ ┊15┊16┊  { path: 'recover', component: RecoverComponent }
+ ┊16┊17┊];
+```
+[}]: #
+
+As you can see, we're importing both version of Login Component. But only one is being used, depending on Meteor.isCordova value.
+
+If we would run Socially in a browser `LoginComponent` for web platform will be used.
+
+And that's it!
+
+
+## Summary
+
+In this tutorial we showed how to make our code behave differently in mobile and web platforms. We did this by creating separate es2015 modules with specific code for mobile and web, and using them based on the platform that runs the application.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step21.md) | [Next Step >](step23.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 9cb5d3b9931107b2ddf1feb08d39c20a147cbb9c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:06:32 +0300
Subject: [PATCH 271/304] Step 23.1: Install ionic-angular and missing angular
 dependencis

---
 package.json | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/package.json b/package.json
index 5e29903..f23dc85 100644
--- a/package.json
+++ b/package.json
@@ -12,8 +12,10 @@
     "@angular/core": "2.1.2",
     "@angular/forms": "2.1.2",
     "@angular/material": "2.0.0-alpha.9-3",
+    "@angular/http": "2.1.2",
     "@angular/platform-browser": "2.1.2",
     "@angular/platform-browser-dynamic": "2.1.2",
+    "@angular/platform-server": "2.1.2",
     "@angular/router": "3.1.2",
     "angular2-file-drop": "0.0.5",
     "@types/node": "^6.0.45",
@@ -23,6 +25,7 @@
     "angular2-meteor-polyfills": "^0.1.1",
     "angular2-meteor-tests-polyfills": "0.0.2",
     "gm": "1.23.0",
+    "ionic-angular": "2.0.0-rc.1",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
     "meteor-typings": "1.3.1",
-- 
2.10.2


From 77de14a02d60668ca00991b61364a3a4ffd74ff2 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:08:01 +0300
Subject: [PATCH 272/304] Step 23.2: Rename to app.component.web.ts

---
 client/imports/app/{app.component.ts => app.component.web.ts} | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename client/imports/app/{app.component.ts => app.component.web.ts} (100%)

diff --git a/client/imports/app/app.component.ts b/client/imports/app/app.component.web.ts
similarity index 100%
rename from client/imports/app/app.component.ts
rename to client/imports/app/app.component.web.ts
-- 
2.10.2


From 24cabab791d6e08ed1adda9557a024903f9a1d0e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:08:11 +0300
Subject: [PATCH 273/304] Step 23.3: Rename to app.component.web.html

---
 client/imports/app/{app.component.html => app.component.web.html} | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename client/imports/app/{app.component.html => app.component.web.html} (100%)

diff --git a/client/imports/app/app.component.html b/client/imports/app/app.component.web.html
similarity index 100%
rename from client/imports/app/app.component.html
rename to client/imports/app/app.component.web.html
-- 
2.10.2


From f5ccb5cea582f7c0d5d8668495553897b25b4988 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:08:40 +0300
Subject: [PATCH 274/304] Step 23.4: Updated the template import

---
 client/imports/app/app.component.web.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/app.component.web.ts b/client/imports/app/app.component.web.ts
index 09074c8..98264c9 100644
--- a/client/imports/app/app.component.web.ts
+++ b/client/imports/app/app.component.web.ts
@@ -1,7 +1,7 @@
 import { Component } from '@angular/core';
 
-import template from './app.component.html';
 import style from './app.component.scss';
+import template from './app.component.web.html';
 import {InjectUser} from "angular2-meteor-accounts-ui";
 
 @Component({
-- 
2.10.2


From acff5cfc8e97b420d88eefa3666f436008e5a0db Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:09:49 +0300
Subject: [PATCH 275/304] Step 23.5: Updated the main component import

---
 client/imports/app/app.module.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 5139c77..a1cbd5a 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -6,7 +6,7 @@ import { AccountsModule } from 'angular2-meteor-accounts-ui';
 import { Ng2PaginationModule } from 'ng2-pagination';
 import { AgmCoreModule } from 'angular2-google-maps/core';
 
-import { AppComponent } from './app.component';
+import { AppComponent } from "./app.component.web";
 import { routes, ROUTES_PROVIDERS } from './app.routes';
 import { PARTIES_DECLARATIONS } from './parties';
 import { SHARED_DECLARATIONS } from './shared';
-- 
2.10.2


From 6bf2eb3468c07a2dc7b66c2c2675e9b9d214d2f8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:10:36 +0300
Subject: [PATCH 276/304] Step 23.6: Use web version of Login component in
 routing

---
 client/imports/app/app.routes.ts | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/client/imports/app/app.routes.ts b/client/imports/app/app.routes.ts
index dfa1246..cc25d9f 100644
--- a/client/imports/app/app.routes.ts
+++ b/client/imports/app/app.routes.ts
@@ -5,13 +5,12 @@ import { PartiesListComponent } from './parties/parties-list.component';
 import { PartyDetailsComponent } from './parties/party-details.component';
 import {SignupComponent} from "./auth/signup.component";
 import {RecoverComponent} from "./auth/recover.component";
-import {MobileLoginComponent} from "./auth/login.component.mobile";
 import {LoginComponent} from "./auth/login.component.web";
 
 export const routes: Route[] = [
   { path: '', component: PartiesListComponent },
   { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
-  { path: 'login', component: Meteor.isCordova ? MobileLoginComponent : LoginComponent },
+  { path: 'login', component: LoginComponent },
   { path: 'signup', component: SignupComponent },
   { path: 'recover', component: RecoverComponent }
 ];
-- 
2.10.2


From 3c0505b098cca5b5f2a17834178f0e0be28d8c8e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:16:31 +0300
Subject: [PATCH 277/304] Step 23.7: Created the main mobile component

---
 client/imports/app/mobile/app.component.mobile.ts | 13 +++++++++++++
 1 file changed, 13 insertions(+)
 create mode 100644 client/imports/app/mobile/app.component.mobile.ts

diff --git a/client/imports/app/mobile/app.component.mobile.ts b/client/imports/app/mobile/app.component.mobile.ts
new file mode 100644
index 0000000..ae661d6
--- /dev/null
+++ b/client/imports/app/mobile/app.component.mobile.ts
@@ -0,0 +1,13 @@
+import {Component} from "@angular/core";
+import template from "./app.component.mobile.html";
+import {MenuController, Platform, App} from "ionic-angular";
+
+@Component({
+  selector: "app",
+  template
+})
+export class AppMobileComponent {
+  constructor(app: App, platform: Platform, menu: MenuController) {
+
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 317742db81c99c467a265e74dfa72f52ecfc8efb Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:16:41 +0300
Subject: [PATCH 278/304] Step 23.8: Created the main mobile component view

---
 client/imports/app/mobile/app.component.mobile.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/imports/app/mobile/app.component.mobile.html

diff --git a/client/imports/app/mobile/app.component.mobile.html b/client/imports/app/mobile/app.component.mobile.html
new file mode 100644
index 0000000..a94744b
--- /dev/null
+++ b/client/imports/app/mobile/app.component.mobile.html
@@ -0,0 +1 @@
+<ion-nav [root]="rootPage" swipe-back-enabled="true"></ion-nav>
\ No newline at end of file
-- 
2.10.2


From bff6232cb0ec792ede7d7ffe2509b639da4c033a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:17:03 +0300
Subject: [PATCH 279/304] Step 23.9: Created index file for mobile declarations

---
 client/imports/app/mobile/index.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/app/mobile/index.ts

diff --git a/client/imports/app/mobile/index.ts b/client/imports/app/mobile/index.ts
new file mode 100644
index 0000000..b92e848
--- /dev/null
+++ b/client/imports/app/mobile/index.ts
@@ -0,0 +1,5 @@
+import {AppMobileComponent} from "./app.component.mobile";
+
+export const MOBILE_DECLARATIONS = [
+  AppMobileComponent
+];
\ No newline at end of file
-- 
2.10.2


From f45a77adb561bc2c1e7700fa2b3845d86e732ec5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:17:32 +0300
Subject: [PATCH 280/304] Step 23.10: Imported mobile declarations and added
 conditional main component bootstrap

---
 client/imports/app/app.module.ts | 82 +++++++++++++++++++++++++++-------------
 1 file changed, 55 insertions(+), 27 deletions(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index a1cbd5a..9c33cda 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -13,32 +13,60 @@ import { SHARED_DECLARATIONS } from './shared';
 import { MaterialModule } from "@angular/material";
 import { AUTH_DECLARATIONS } from "./auth/index";
 import { FileDropModule } from "angular2-file-drop";
+import { MOBILE_DECLARATIONS } from "./mobile/index";
+import { AppMobileComponent } from "./mobile/app.component.mobile";
+import { IonicModule, IonicApp } from "ionic-angular";
 
-@NgModule({
-  imports: [
-    BrowserModule,
-    FormsModule,
-    ReactiveFormsModule,
-    RouterModule.forRoot(routes),
-    AccountsModule,
-    Ng2PaginationModule,
-    AgmCoreModule.forRoot({
-      apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
-    }),
-    MaterialModule.forRoot(),
-    FileDropModule
-  ],
-  declarations: [
-    AppComponent,
-    ...PARTIES_DECLARATIONS,
-    ...SHARED_DECLARATIONS,
-    ...AUTH_DECLARATIONS
-  ],
-  providers: [
-    ...ROUTES_PROVIDERS
-  ],
-  bootstrap: [
-    AppComponent
-  ]
-})
+let moduleDefinition;
+
+if (Meteor.isCordova) {
+  moduleDefinition = {
+    imports: [
+      IonicModule.forRoot(AppMobileComponent)
+    ],
+    declarations: [
+      ...SHARED_DECLARATIONS,
+      ...MOBILE_DECLARATIONS
+    ],
+    providers: [
+    ],
+    bootstrap: [
+      IonicApp
+    ],
+    entryComponents: [
+      AppMobileComponent
+    ]
+  }
+}
+else {
+  moduleDefinition = {
+    imports: [
+      BrowserModule,
+      FormsModule,
+      ReactiveFormsModule,
+      RouterModule.forRoot(routes),
+      AccountsModule,
+      Ng2PaginationModule,
+      AgmCoreModule.forRoot({
+        apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
+      }),
+      MaterialModule.forRoot(),
+      FileDropModule
+    ],
+    declarations: [
+      AppComponent,
+      ...PARTIES_DECLARATIONS,
+      ...SHARED_DECLARATIONS,
+      ...AUTH_DECLARATIONS
+    ],
+    providers: [
+      ...ROUTES_PROVIDERS
+    ],
+    bootstrap: [
+      AppComponent
+    ]
+  }
+}
+
+@NgModule(moduleDefinition)
 export class AppModule {}
\ No newline at end of file
-- 
2.10.2


From ceef1d46fb48bbb29efbd1793012a8b9e8644e4e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:38:32 +0300
Subject: [PATCH 281/304] Step 23.11: Added ionic-selector package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index f23dc85..c9281fc 100644
--- a/package.json
+++ b/package.json
@@ -26,6 +26,7 @@
     "angular2-meteor-tests-polyfills": "0.0.2",
     "gm": "1.23.0",
     "ionic-angular": "2.0.0-rc.1",
+    "ionic-selector": "0.0.2",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
     "meteor-typings": "1.3.1",
-- 
2.10.2


From cbcb4a9acebba5076ae4afb28ac014222bf31094 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:39:16 +0300
Subject: [PATCH 282/304] Step 23.12: Use ionic-selector package

---
 client/main.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index 7c00907..5cbb885 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -6,7 +6,13 @@ import { AppModule } from './imports/app/app.module';
 
 import '../both/methods/parties.methods';
 
+import ionicSelector from 'ionic-selector';
+
 Meteor.startup(() => {
+  if (Meteor.isCordova) {
+    ionicSelector("app");
+  }
+
   const platform = platformBrowserDynamic();
   platform.bootstrapModule(AppModule);
 });
\ No newline at end of file
-- 
2.10.2


From 68b23b7f3b41def7e2543ddd19b3e9f78528608d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:42:58 +0300
Subject: [PATCH 283/304] Step 23.13: Install ionicons

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index c9281fc..6585086 100644
--- a/package.json
+++ b/package.json
@@ -27,6 +27,7 @@
     "gm": "1.23.0",
     "ionic-angular": "2.0.0-rc.1",
     "ionic-selector": "0.0.2",
+    "ionicons": "^3.0.0",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.3",
     "meteor-typings": "1.3.1",
-- 
2.10.2


From 65db3ec769369d2b6ee0a8f3a287b404b5976aec Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:43:51 +0300
Subject: [PATCH 284/304] Step 23.14: Create ionic.scss and add ionicons to it

---
 client/imports/app/mobile/ionic.scss | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/imports/app/mobile/ionic.scss

diff --git a/client/imports/app/mobile/ionic.scss b/client/imports/app/mobile/ionic.scss
new file mode 100644
index 0000000..0dec7a3
--- /dev/null
+++ b/client/imports/app/mobile/ionic.scss
@@ -0,0 +1 @@
+@import "{}/node_modules/ionicons/dist/scss/ionicons";
\ No newline at end of file
-- 
2.10.2


From 3974ae0a076154a72ba803e66e6b8d8993ed9f3f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:48:45 +0300
Subject: [PATCH 285/304] Step 23.15: Import ionic.scss to main file

---
 client/main.scss | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/main.scss b/client/main.scss
index 0fd8fdd..241aabd 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -1,4 +1,5 @@
 @import '../node_modules/@angular/material/core/theming/all-theme';
+@import "imports/app/mobile/ionic.scss";
 
 @include md-core();
 $app-primary: md-palette($md-light-blue, 500, 100, 700);
-- 
2.10.2


From e5c0622ac81c08419d9c58c7854c34566bbeef73 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:59:06 +0300
Subject: [PATCH 286/304] Step 23.16: Imported the main css file of ionic

---
 client/imports/app/mobile/app.component.mobile.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/app/mobile/app.component.mobile.ts b/client/imports/app/mobile/app.component.mobile.ts
index ae661d6..212bc29 100644
--- a/client/imports/app/mobile/app.component.mobile.ts
+++ b/client/imports/app/mobile/app.component.mobile.ts
@@ -2,6 +2,10 @@ import {Component} from "@angular/core";
 import template from "./app.component.mobile.html";
 import {MenuController, Platform, App} from "ionic-angular";
 
+if (Meteor.isCordova) {
+  require("ionic-angular/css/ionic.css");
+}
+
 @Component({
   selector: "app",
   template
-- 
2.10.2


From 8b1f1e37bdb2dd737b9b385eab1a5ed1c51ab5bd Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:49:15 +0300
Subject: [PATCH 287/304] Step 23.17: Add two classes to fix an issue with
 overflow

---
 client/main.scss | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/client/main.scss b/client/main.scss
index 241aabd..4dcc626 100644
--- a/client/main.scss
+++ b/client/main.scss
@@ -19,6 +19,15 @@ body {
   margin: 0;
 }
 
+body.mobile {
+  overflow: hidden;
+}
+
+body.web {
+  overflow: visible;
+  position: initial;
+}
+
 .sebm-google-map-container {
   width: 450px;
   height: 450px;
-- 
2.10.2


From 94bf321d16d8496a845363470470ee4d9788ff23 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 12:50:18 +0300
Subject: [PATCH 288/304] Step 23.18: Set the proper class on body

---
 client/main.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/client/main.ts b/client/main.ts
index 5cbb885..26bd39d 100644
--- a/client/main.ts
+++ b/client/main.ts
@@ -8,9 +8,20 @@ import '../both/methods/parties.methods';
 
 import ionicSelector from 'ionic-selector';
 
+function setClass(css) {
+  if (!document.body.className) {
+    document.body.className = "";
+  }
+  document.body.className += " " + css;
+}
+
 Meteor.startup(() => {
   if (Meteor.isCordova) {
     ionicSelector("app");
+    setClass('mobile');
+  }
+  else {
+    setClass('web');
   }
 
   const platform = platformBrowserDynamic();
-- 
2.10.2


From e165a87b81432c1ad6d76aeffdcfbd3b044ccf85 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:04:53 +0300
Subject: [PATCH 289/304] Step 23.19: Take the logic of parties list to
 external class

---
 .../app/shared-components/parties-list.class.ts    | 112 +++++++++++++++++++++
 1 file changed, 112 insertions(+)
 create mode 100644 client/imports/app/shared-components/parties-list.class.ts

diff --git a/client/imports/app/shared-components/parties-list.class.ts b/client/imports/app/shared-components/parties-list.class.ts
new file mode 100644
index 0000000..705824d
--- /dev/null
+++ b/client/imports/app/shared-components/parties-list.class.ts
@@ -0,0 +1,112 @@
+import {OnDestroy, OnInit} from "@angular/core";
+import {Observable, Subscription, Subject} from "rxjs";
+import {Party} from "../../../../both/models/party.model";
+import {PaginationService} from "ng2-pagination";
+import {MeteorObservable} from "meteor-rxjs";
+import {Parties} from "../../../../both/collections/parties.collection";
+import {Counts} from "meteor/tmeasday:publish-counts";
+import {InjectUser} from "angular2-meteor-accounts-ui";
+
+interface Pagination {
+  limit: number;
+  skip: number;
+}
+
+interface Options extends Pagination {
+  [key: string]: any
+}
+
+@InjectUser('user')
+export class PartiesList implements OnInit, OnDestroy {
+  parties: Observable<Party[]>;
+  partiesSub: Subscription;
+  pageSize: Subject<number> = new Subject<number>();
+  curPage: Subject<number> = new Subject<number>();
+  nameOrder: Subject<number> = new Subject<number>();
+  optionsSub: Subscription;
+  partiesSize: number = 0;
+  autorunSub: Subscription;
+  location: Subject<string> = new Subject<string>();
+  user: Meteor.User;
+  imagesSubs: Subscription;
+
+  constructor(private paginationService: PaginationService) {
+
+  }
+
+  ngOnInit() {
+    this.imagesSubs = MeteorObservable.subscribe('images').subscribe();
+
+    this.optionsSub = Observable.combineLatest(
+      this.pageSize,
+      this.curPage,
+      this.nameOrder,
+      this.location
+    ).subscribe(([pageSize, curPage, nameOrder, location]) => {
+      const options: Options = {
+        limit: pageSize as number,
+        skip: ((curPage as number) - 1) * (pageSize as number),
+        sort: { name: nameOrder as number }
+      };
+
+      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);
+
+      if (this.partiesSub) {
+        this.partiesSub.unsubscribe();
+      }
+
+      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {
+        this.parties = Parties.find({}, {
+          sort: {
+            name: nameOrder
+          }
+        }).zone();
+      });
+    });
+
+    this.paginationService.register({
+      id: this.paginationService.defaultId,
+      itemsPerPage: 10,
+      currentPage: 1,
+      totalItems: this.partiesSize
+    });
+
+    this.pageSize.next(10);
+    this.curPage.next(1);
+    this.nameOrder.next(1);
+    this.location.next('');
+
+    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
+      this.partiesSize = Counts.get('numberOfParties');
+      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
+    });
+  }
+
+  removeParty(party: Party): void {
+    Parties.remove(party._id);
+  }
+
+  search(value: string): void {
+    this.curPage.next(1);
+    this.location.next(value);
+  }
+
+  onPageChanged(page: number): void {
+    this.curPage.next(page);
+  }
+
+  changeSortOrder(nameOrder: string): void {
+    this.nameOrder.next(parseInt(nameOrder));
+  }
+
+  isOwner(party: Party): boolean {
+    return this.user && this.user._id === party.owner;
+  }
+
+  ngOnDestroy() {
+    this.partiesSub.unsubscribe();
+    this.optionsSub.unsubscribe();
+    this.autorunSub.unsubscribe();
+    this.imagesSubs.unsubscribe();
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 4a75f44c6be50f14162d3a41a71da7214147226a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:05:07 +0300
Subject: [PATCH 290/304] Step 23.20: Create a clean parties list for web
 display

---
 .../imports/app/parties/parties-list.component.ts  | 118 +--------------------
 1 file changed, 5 insertions(+), 113 deletions(-)

diff --git a/client/imports/app/parties/parties-list.component.ts b/client/imports/app/parties/parties-list.component.ts
index bd5e2bb..ce59033 100644
--- a/client/imports/app/parties/parties-list.component.ts
+++ b/client/imports/app/parties/parties-list.component.ts
@@ -1,125 +1,17 @@
-import { Component, OnInit, OnDestroy } from '@angular/core';
-import { Observable } from 'rxjs/Observable';
-import { Subject } from 'rxjs/Subject';
-import { Subscription } from 'rxjs/Subscription';
-import { MeteorObservable } from 'meteor-rxjs';
+import { Component } from '@angular/core';
 import { PaginationService } from 'ng2-pagination';
-import { Counts } from 'meteor/tmeasday:publish-counts';
-import { InjectUser } from "angular2-meteor-accounts-ui";
-
-import 'rxjs/add/operator/combineLatest';
-
-import { Parties } from '../../../../both/collections/parties.collection';
-import { Party } from '../../../../both/models/party.model';
+import { PartiesList } from "../shared-components/parties-list.class";
 
 import template from './parties-list.component.html';
 import style from './parties-list.component.scss';
 
-interface Pagination {
-  limit: number;
-  skip: number;
-}
-
-interface Options extends Pagination {
-  [key: string]: any
-}
-
 @Component({
   selector: 'parties-list',
   template,
   styles: [ style ]
 })
-@InjectUser('user')
-export class PartiesListComponent implements OnInit, OnDestroy {
-  parties: Observable<Party[]>;
-  partiesSub: Subscription;
-  pageSize: Subject<number> = new Subject<number>();
-  curPage: Subject<number> = new Subject<number>();
-  nameOrder: Subject<number> = new Subject<number>();
-  optionsSub: Subscription;
-  partiesSize: number = 0;
-  autorunSub: Subscription;
-  location: Subject<string> = new Subject<string>();
-  user: Meteor.User;
-  imagesSubs: Subscription;
-
-  constructor(
-    private paginationService: PaginationService
-  ) {}
-
-  ngOnInit() {
-    this.imagesSubs = MeteorObservable.subscribe('images').subscribe();
-
-    this.optionsSub = Observable.combineLatest(
-      this.pageSize,
-      this.curPage,
-      this.nameOrder,
-      this.location
-    ).subscribe(([pageSize, curPage, nameOrder, location]) => {
-      const options: Options = {
-        limit: pageSize as number,
-        skip: ((curPage as number) - 1) * (pageSize as number),
-        sort: { name: nameOrder as number }
-      };
-
-      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);
-
-      if (this.partiesSub) {
-        this.partiesSub.unsubscribe();
-      }
-      
-      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {
-        this.parties = Parties.find({}, {
-          sort: {
-            name: nameOrder
-          }
-        }).zone();
-      });
-    });
-
-    this.paginationService.register({
-      id: this.paginationService.defaultId,
-      itemsPerPage: 10,
-      currentPage: 1,
-      totalItems: this.partiesSize
-    });
-
-    this.pageSize.next(10);
-    this.curPage.next(1);
-    this.nameOrder.next(1);
-    this.location.next('');
-
-    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
-      this.partiesSize = Counts.get('numberOfParties');
-      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
-    });
-  }
-
-  removeParty(party: Party): void {
-    Parties.remove(party._id);
-  }
-
-  search(value: string): void {
-    this.curPage.next(1);
-    this.location.next(value);
-  }
-
-  onPageChanged(page: number): void {
-    this.curPage.next(page);
-  }
-
-  changeSortOrder(nameOrder: string): void {
-    this.nameOrder.next(parseInt(nameOrder));
-  }
-
-  isOwner(party: Party): boolean {
-    return this.user && this.user._id === party.owner;
-  }
-
-  ngOnDestroy() {
-    this.partiesSub.unsubscribe();
-    this.optionsSub.unsubscribe();
-    this.autorunSub.unsubscribe();
-    this.imagesSubs.unsubscribe();
+export class PartiesListComponent extends PartiesList {
+  constructor(paginationService: PaginationService) {
+    super(paginationService);
   }
 }
-- 
2.10.2


From bee23530e3aa0a6fc671293174053d422301f4b4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:06:01 +0300
Subject: [PATCH 291/304] Step 23.21: Create a basic view of the mobile version

---
 client/imports/app/mobile/parties-list.component.mobile.html | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/app/mobile/parties-list.component.mobile.html

diff --git a/client/imports/app/mobile/parties-list.component.mobile.html b/client/imports/app/mobile/parties-list.component.mobile.html
new file mode 100644
index 0000000..36c6831
--- /dev/null
+++ b/client/imports/app/mobile/parties-list.component.mobile.html
@@ -0,0 +1,8 @@
+<ion-header>
+  <ion-navbar>
+    <ion-title>Socially</ion-title>
+  </ion-navbar>
+</ion-header>
+<ion-content>
+  Parties!
+</ion-content>
-- 
2.10.2


From df0c31b400666346de4b11256d1b01dfe0f3493c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:07:44 +0300
Subject: [PATCH 292/304] Step 23.22: Create the mobile version of PartiesList
 component

---
 .../imports/app/mobile/parties-list.component.mobile.ts   | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 client/imports/app/mobile/parties-list.component.mobile.ts

diff --git a/client/imports/app/mobile/parties-list.component.mobile.ts b/client/imports/app/mobile/parties-list.component.mobile.ts
new file mode 100644
index 0000000..34b7ee1
--- /dev/null
+++ b/client/imports/app/mobile/parties-list.component.mobile.ts
@@ -0,0 +1,15 @@
+import { Component } from '@angular/core';
+import { PaginationService } from 'ng2-pagination';
+import { PartiesList } from "../shared-components/parties-list.class";
+
+import template from './parties-list.component.mobile.html';
+
+@Component({
+  selector: 'parties-list',
+  template
+})
+export class PartiesListMobileComponent extends PartiesList {
+  constructor(paginationService: PaginationService) {
+    super(paginationService);
+  }
+}
-- 
2.10.2


From 81527eca11b0e9f5acb87c6cca188b503f85d7ff Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:08:28 +0300
Subject: [PATCH 293/304] Step 23.23: Added PartiesListMobile component to the
 index file

---
 client/imports/app/mobile/index.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/mobile/index.ts b/client/imports/app/mobile/index.ts
index b92e848..e6203fc 100644
--- a/client/imports/app/mobile/index.ts
+++ b/client/imports/app/mobile/index.ts
@@ -1,5 +1,7 @@
 import {AppMobileComponent} from "./app.component.mobile";
+import {PartiesListMobileComponent} from "./parties-list.component.mobile";
 
 export const MOBILE_DECLARATIONS = [
-  AppMobileComponent
+  AppMobileComponent,
+  PartiesListMobileComponent
 ];
\ No newline at end of file
-- 
2.10.2


From f56794e3978d14b7acc33a80d3c99ceea34ae0e5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:14:30 +0300
Subject: [PATCH 294/304] Step 23.24: Added the rootPage

---
 client/imports/app/mobile/app.component.mobile.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/mobile/app.component.mobile.ts b/client/imports/app/mobile/app.component.mobile.ts
index 212bc29..2b70422 100644
--- a/client/imports/app/mobile/app.component.mobile.ts
+++ b/client/imports/app/mobile/app.component.mobile.ts
@@ -1,6 +1,7 @@
 import {Component} from "@angular/core";
 import template from "./app.component.mobile.html";
 import {MenuController, Platform, App} from "ionic-angular";
+import {PartiesListMobileComponent} from "./parties-list.component.mobile";
 
 if (Meteor.isCordova) {
   require("ionic-angular/css/ionic.css");
@@ -11,7 +12,9 @@ if (Meteor.isCordova) {
   template
 })
 export class AppMobileComponent {
-  constructor(app: App, platform: Platform, menu: MenuController) {
+  rootPage: any;
 
+  constructor(app: App, platform: Platform, menu: MenuController) {
+    this.rootPage = PartiesListMobileComponent;
   }
 }
\ No newline at end of file
-- 
2.10.2


From 4f7dab953fb24adec768ce4ce570f2f1f54c5f02 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:15:32 +0300
Subject: [PATCH 295/304] Step 23.25: Update the module imports and entry point

---
 client/imports/app/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/app.module.ts b/client/imports/app/app.module.ts
index 9c33cda..5af0312 100644
--- a/client/imports/app/app.module.ts
+++ b/client/imports/app/app.module.ts
@@ -16,12 +16,14 @@ import { FileDropModule } from "angular2-file-drop";
 import { MOBILE_DECLARATIONS } from "./mobile/index";
 import { AppMobileComponent } from "./mobile/app.component.mobile";
 import { IonicModule, IonicApp } from "ionic-angular";
+import { PartiesListMobileComponent } from "./mobile/parties-list.component.mobile";
 
 let moduleDefinition;
 
 if (Meteor.isCordova) {
   moduleDefinition = {
     imports: [
+      Ng2PaginationModule,
       IonicModule.forRoot(AppMobileComponent)
     ],
     declarations: [
@@ -34,7 +36,7 @@ if (Meteor.isCordova) {
       IonicApp
     ],
     entryComponents: [
-      AppMobileComponent
+      PartiesListMobileComponent
     ]
   }
 }
-- 
2.10.2


From b632b034cf47d1ac5c21e8ac2cd72220f68104a4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:26:29 +0300
Subject: [PATCH 296/304] Step 23.26: Add name, description ad RSVPs to the
 view

---
 .../app/mobile/parties-list.component.mobile.html  | 25 +++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/mobile/parties-list.component.mobile.html b/client/imports/app/mobile/parties-list.component.mobile.html
index 36c6831..fc0c5b3 100644
--- a/client/imports/app/mobile/parties-list.component.mobile.html
+++ b/client/imports/app/mobile/parties-list.component.mobile.html
@@ -4,5 +4,28 @@
   </ion-navbar>
 </ion-header>
 <ion-content>
-  Parties!
+  <ion-card *ngFor="let party of parties | async">
+    <ion-card-content>
+      <ion-card-title>
+        {{party.name}}
+      </ion-card-title>
+      <p>
+        {{party.description}}
+      </p>
+    </ion-card-content>
+
+    <ion-row no-padding>
+      <ion-col text-right>
+        <ion-badge>
+          yes {{party | rsvp:'yes'}}
+        </ion-badge>
+        <ion-badge item-center dark>
+          maybe {{party | rsvp:'maybe'}}
+        </ion-badge>
+        <ion-badge item-center danger>
+          no {{party | rsvp:'no'}}
+        </ion-badge>
+      </ion-col>
+    </ion-row>
+  </ion-card>
 </ion-content>
-- 
2.10.2


From c4b4b166560b52e6771b529c6e57f886ebd13f50 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:28:06 +0300
Subject: [PATCH 297/304] Step 23.27: Fix an issuewith a absolute path of an
 image

---
 client/imports/app/shared/display-main-image.pipe.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/client/imports/app/shared/display-main-image.pipe.ts b/client/imports/app/shared/display-main-image.pipe.ts
index c98e952..dda5f05 100644
--- a/client/imports/app/shared/display-main-image.pipe.ts
+++ b/client/imports/app/shared/display-main-image.pipe.ts
@@ -1,6 +1,7 @@
 import {Pipe, PipeTransform} from '@angular/core';
 import { Images } from '../../../../both/collections/images.collection';
 import { Party } from '../../../../both/models/party.model';
+import { Meteor } from "meteor/meteor";
 
 @Pipe({
   name: 'displayMainImage'
@@ -17,7 +18,12 @@ export class DisplayMainImagePipe implements PipeTransform {
     const found = Images.findOne(imageId);
 
     if (found) {
-      imageUrl = found.url;
+      if (!Meteor.isCordova) {
+        imageUrl = found.url;
+      } else {
+        const path = `ufs/${found.store}/${found._id}/${found.name}`;
+        imageUrl = Meteor.absoluteUrl(path);
+      }
     }
 
     return imageUrl;
-- 
2.10.2


From a9e5e5f31e0f38a707ba42d569f2eb4073146318 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:28:57 +0300
Subject: [PATCH 298/304] Step 23.28: Use the main image pipe

---
 client/imports/app/mobile/parties-list.component.mobile.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/app/mobile/parties-list.component.mobile.html b/client/imports/app/mobile/parties-list.component.mobile.html
index fc0c5b3..02e5489 100644
--- a/client/imports/app/mobile/parties-list.component.mobile.html
+++ b/client/imports/app/mobile/parties-list.component.mobile.html
@@ -5,6 +5,7 @@
 </ion-header>
 <ion-content>
   <ion-card *ngFor="let party of parties | async">
+    <img *ngIf="party.images" [src]="party | displayMainImage">
     <ion-card-content>
       <ion-card-title>
         {{party.name}}
-- 
2.10.2


From 041780b4b3c1fa33fd0987848b951e5742452f6c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:30:25 +0300
Subject: [PATCH 299/304] Step 23.29: Add mys:fonts

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index efa5b53..a1ae3e8 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -28,3 +28,4 @@ email
 jalik:ufs
 jalik:ufs-gridfs
 mys:accounts-phone
+mys:fonts
diff --git a/.meteor/versions b/.meteor/versions
index eeca0a0..83a049a 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -62,6 +62,7 @@ modules-runtime@0.7.7
 mongo@1.1.14
 mongo-id@1.0.6
 mys:accounts-phone@0.0.21
+mys:fonts@0.0.2
 npm-bcrypt@0.9.2
 npm-mongo@2.2.11_2
 observe-sequence@1.0.14
-- 
2.10.2


From 34827d4880b5307c543c9fb168d02266162e23c5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Wed, 28 Sep 2016 13:30:57 +0300
Subject: [PATCH 300/304] Step 23.30: Define fonts.json

---
 fonts.json | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 fonts.json

diff --git a/fonts.json b/fonts.json
new file mode 100644
index 0000000..311eb9c
--- /dev/null
+++ b/fonts.json
@@ -0,0 +1,8 @@
+{
+  "map": {
+    "node_modules/ionic-angular/fonts/roboto-medium.ttf": "fonts/roboto-medium.ttf",
+    "node_modules/ionic-angular/fonts/roboto-regular.ttf": "fonts/roboto-regular.ttf",
+    "node_modules/ionic-angular/fonts/roboto-medium.woff": "fonts/roboto-medium.woff",
+    "node_modules/ionic-angular/fonts/roboto-regular.woff": "fonts/roboto-regular.woff"
+  }
+}
\ No newline at end of file
-- 
2.10.2


From da446173ba2a0cde39a6286c61ec6e0a7cc0e5e0 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 3 Nov 2016 12:17:32 +0200
Subject: [PATCH 301/304] Step 23.31: Remove fastclick package

---
 .meteor/packages | 3 ++-
 .meteor/versions | 2 --
 2 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index a1ae3e8..8b4afeb 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -5,7 +5,6 @@
 # but you can also edit it by hand.
 
 meteor-base@1.0.4             # Packages every Meteor app needs to have
-mobile-experience@1.0.4       # Packages for a great mobile UX
 mongo@1.1.12_1                   # The database Meteor supports right now
 reactive-var@1.0.10            # Reactive variable for tracker
 jquery@1.11.9                  # Helpful client-side library
@@ -29,3 +28,5 @@ jalik:ufs
 jalik:ufs-gridfs
 mys:accounts-phone
 mys:fonts
+launch-screen
+mobile-status-bar
diff --git a/.meteor/versions b/.meteor/versions
index 83a049a..9d53cb2 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -34,7 +34,6 @@ ecmascript-runtime@0.3.15
 ejson@1.0.13
 email@1.1.18
 es5-shim@4.6.15
-fastclick@1.0.13
 geojson-utils@1.0.10
 hot-code-push@1.0.4
 html-tools@1.0.11
@@ -55,7 +54,6 @@ meteor-base@1.0.4
 minifier-css@1.2.15
 minifier-js@1.2.15
 minimongo@1.0.18
-mobile-experience@1.0.4
 mobile-status-bar@1.0.13
 modules@0.7.7
 modules-runtime@0.7.7
-- 
2.10.2


From 8ef25cd0d19d69f0bf7cc4f705a346b79bd1c290 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:36:55 -0200
Subject: [PATCH 302/304] Step 23: Ionic

---
 manuals/templates/step23.md | 197 +++++++++
 manuals/views/step23.md     | 962 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1159 insertions(+)
 create mode 100644 manuals/templates/step23.md
 create mode 100644 manuals/views/step23.md

diff --git a/manuals/templates/step23.md b/manuals/templates/step23.md
new file mode 100644
index 0000000..67a5922
--- /dev/null
+++ b/manuals/templates/step23.md
@@ -0,0 +1,197 @@
+Ionic is a CSS and JavaScript framework. It is highly recommended that before starting this step you will get yourself familiar with its [documentation](http://ionicframework.com/docs/v2).
+
+In this step we will learn how to add Ionic library into our project, and use its powerful directives to create cross platform mobile (Android & iOS) applications.
+
+We will achieve this by creating separate views for web and for mobile  so be creating a separate view for the mobile applications, but we will keep the shared code parts as common code!
+
+### Adding Ionic
+
+Using ionic is pretty simple - first, we need to install it:
+
+    $ meteor npm install ionic-angular --save
+
+We also have to install missing packages that required by Ionic:
+
+    $ meteor npm install @angular/http @angular/platform-server --save
+
+### Separate web and mobile things
+
+We are going to have two different `NgModule`s, because of the differences in the imports and declarations between the two platforms (web and Ionic).
+
+We will also separate the main `Component` that in use.
+
+So let's start with the `AppComponent` that needed to be change to `app.component.web.ts`, and it's template that ness to be called `app.component.web.html`.
+
+Now update the usage of the template in the Component:
+
+{{{diff_step 23.4}}}
+
+And modify the import path in the module file:
+
+{{{diff_step 23.5}}}
+
+Now let's take back the code we modified in the previous step (#21) and use only the original version of the Login component, because we do not want to have login in our Ionic version (it will be read only):
+
+{{{diff_step 23.6}}}
+
+Create a root Component for the mobile, and call it `AppMobileComponent`:
+
+{{{diff_step 23.7}}}
+
+And let's create it's view:
+
+{{{diff_step 23.8}}}
+
+We used `ion-nav` which is the navigation bar of Ionic, we also declared that our root page is `rootPage` which we will add later.
+
+Now let's create an index file for the ionic component declarations:
+
+{{{diff_step 23.9}}}
+
+## Modules Separation
+
+In order to create two different versions of `NgModule` - one for each platform, we need to identify which platform are we running now - we already know how to do this from the previous step - we will use `Meteor.isCordova`.
+
+We will have a single `NgModule` called `AppModule`, but it's declaration will be different according to the platform.
+
+So we already know how the web module looks like, we just need to understand how mobile module defined when working with Ionic.
+
+First - we need to import `IonicModule` and declare our root Component there.
+
+We also need to declare `IonicApp` as our `bootstrap` Component, and add every Ionic `page` to the `entryComponents`.
+
+So let's create it and differ the platform:
+
+{{{diff_step 23.10}}}
+
+Our next step is to change our selector of the root Component.
+
+As we already know, the root Component of the web platform uses `<app>` tag as the selector, but in our case the root Component has to be `IonicApp` that uses `<ion-app>` tag.
+
+So we need to have the ability to switch `<app>` to `<ion-app>` when using mobile platform.
+
+There is a package called `ionic-selector` we can use in order to get this done, so let's add it:
+
+    $ meteor npm install --save ionic-selector
+
+Now let's use in before bootstrapping our module:
+
+{{{diff_step 23.12}}}
+
+What it does? It's changing tag name of the main component (`app` by default but you can specify any selector you want) to `ion-app`.
+
+An example:
+
+```html
+<body>
+  <app class="main"></app>
+</body>
+```
+
+will be changed to:
+
+```html
+<body>
+  <ion-app class="main"></ion-app>
+</body>
+```
+
+## Ionic styles & icons
+
+Our next step is to load Ionic style and icons (called `ionicons`) only to the mobile platform.
+
+Start by adding the icons package:
+
+    $ meteor npm install --save ionicons
+
+Also, let's create a style file for the mobile and Ionic styles, and load the icons package to it:
+
+{{{diff_step 23.14}}}
+
+And let's imports this file into our main styles file:
+
+{{{diff_step 23.15}}}
+
+Now we need to load Ionic stylesheet into our project - but we need to load it only to the mobile platform, without loading it to the web platform (otherwise, it will override our styles):
+
+{{{diff_step 23.16}}}
+
+We also need to add some CSS classes in order to get a good result:
+
+{{{diff_step 23.17}}}
+
+And let's add the correct class to the `body`:
+
+{{{diff_step 23.18}}}
+
+> We created a mechanism that adds `web` or `mobile` class to `<body/>` element depends on environment.
+
+## Share logic between platforms
+
+We want to share the logic of `PartiesListComponent` without sharing it's styles and template - because we want a different looks between the platforms.
+
+In order to do so, let's take all of the logic we have in `PartiesListComponent` and take it to an external file that won't contain the Component decorator:
+
+{{{diff_step 23.19}}}
+
+And let's clean up the `PartiesListComponent`, and use the new class `PartiesList` as base class for this Component:
+
+{{{diff_step 23.20}}}
+
+Now let's create a basic view and layout for the mobile platform, be creating a new Component called `PartiesListMobile`, starting with the view:
+
+{{{diff_step 23.21}}}
+
+And it's Component, which is very similar to the web version, only it uses different template:
+
+{{{diff_step 23.22}}}
+
+Now let's add the mobile Component of the parties list to the index file:
+
+{{{diff_step 23.23}}}
+
+And let's add the Component we just created as `rootPage` for our Ionic application:
+
+{{{diff_step 23.24}}}
+
+Now we just need declare this Component as `entryComponents` in the `NgModule` definition, and make sure we have all the required external modules in the `NgModule` that loaded for the mobile:
+
+{{{diff_step 23.25}}}
+
+Now we want to add the actual view to the mobile Component, so let's do it:
+
+{{{diff_step 23.26}}}
+
+> We used `ion-card` which is an Ionic Component.
+
+And in order to have the ability to load images in the mobile platform, we need to add some logic to the `displayMainImage` Pipe, because Meteor's absolute URL is not the same in mobile:
+
+{{{diff_step 23.27}}}
+
+And let's add the image to the view:
+
+{{{diff_step 23.28}}}
+
+### Fixing fonts
+
+As you probably notice, there are many warnings about missing fonts. We can easily fix it with the help of a package called [`mys:fonts`](https://github.com/jellyjs/meteor-fonts).
+
+    $ meteor add mys:fonts
+
+That plugin needs to know which font we want to use and where it should be available.
+
+Configuration is pretty easy, you will catch it by just looking on an example:
+
+{{{diff_step 23.30}}}
+
+Now `roboto-regular.ttf` is available under `http://localhost:3000/fonts/roboto-regular.ttf`.
+
+And... You have an app that works with Ionic!
+
+## Summary
+
+In this tutorial we showed how to use Ionic and how to separate the whole view for both, web and mobile.
+
+We also learned how to share component between platforms, and change the view only!
+
+We also used Ionic directives in order to provide user-experience of mobile platform instead of regular responsive layout of website.
diff --git a/manuals/views/step23.md b/manuals/views/step23.md
new file mode 100644
index 0000000..0aee7ee
--- /dev/null
+++ b/manuals/views/step23.md
@@ -0,0 +1,962 @@
+[{]: <region> (header)
+# Step 23: Ionic
+[}]: #
+[{]: <region> (body)
+Ionic is a CSS and JavaScript framework. It is highly recommended that before starting this step you will get yourself familiar with its [documentation](http://ionicframework.com/docs/v2).
+
+In this step we will learn how to add Ionic library into our project, and use its powerful directives to create cross platform mobile (Android & iOS) applications.
+
+We will achieve this by creating separate views for web and for mobile  so be creating a separate view for the mobile applications, but we will keep the shared code parts as common code!
+
+### Adding Ionic
+
+Using ionic is pretty simple - first, we need to install it:
+
+    $ meteor npm install ionic-angular --save
+
+We also have to install missing packages that required by Ionic:
+
+    $ meteor npm install @angular/http @angular/platform-server --save
+
+### Separate web and mobile things
+
+We are going to have two different `NgModule`s, because of the differences in the imports and declarations between the two platforms (web and Ionic).
+
+We will also separate the main `Component` that in use.
+
+So let's start with the `AppComponent` that needed to be change to `app.component.web.ts`, and it's template that ness to be called `app.component.web.html`.
+
+Now update the usage of the template in the Component:
+
+[{]: <helper> (diff_step 23.4)
+#### Step 23.4: Updated the template import
+
+##### Changed client/imports/app/app.component.web.ts
+```diff
+@@ -1,7 +1,7 @@
+ ┊1┊1┊import { Component } from '@angular/core';
+ ┊2┊2┊
+-┊3┊ ┊import template from './app.component.html';
+ ┊4┊3┊import style from './app.component.scss';
++┊ ┊4┊import template from './app.component.web.html';
+ ┊5┊5┊import {InjectUser} from "angular2-meteor-accounts-ui";
+ ┊6┊6┊
+ ┊7┊7┊@Component({
+```
+[}]: #
+
+And modify the import path in the module file:
+
+[{]: <helper> (diff_step 23.5)
+#### Step 23.5: Updated the main component import
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -6,7 +6,7 @@
+ ┊ 6┊ 6┊import { Ng2PaginationModule } from 'ng2-pagination';
+ ┊ 7┊ 7┊import { AgmCoreModule } from 'angular2-google-maps/core';
+ ┊ 8┊ 8┊
+-┊ 9┊  ┊import { AppComponent } from './app.component';
++┊  ┊ 9┊import { AppComponent } from "./app.component.web";
+ ┊10┊10┊import { routes, ROUTES_PROVIDERS } from './app.routes';
+ ┊11┊11┊import { PARTIES_DECLARATIONS } from './parties';
+ ┊12┊12┊import { SHARED_DECLARATIONS } from './shared';
+```
+[}]: #
+
+Now let's take back the code we modified in the previous step (#21) and use only the original version of the Login component, because we do not want to have login in our Ionic version (it will be read only):
+
+[{]: <helper> (diff_step 23.6)
+#### Step 23.6: Use web version of Login component in routing
+
+##### Changed client/imports/app/app.routes.ts
+```diff
+@@ -5,13 +5,12 @@
+ ┊ 5┊ 5┊import { PartyDetailsComponent } from './parties/party-details.component';
+ ┊ 6┊ 6┊import {SignupComponent} from "./auth/signup.component";
+ ┊ 7┊ 7┊import {RecoverComponent} from "./auth/recover.component";
+-┊ 8┊  ┊import {MobileLoginComponent} from "./auth/login.component.mobile";
+ ┊ 9┊ 8┊import {LoginComponent} from "./auth/login.component.web";
+ ┊10┊ 9┊
+ ┊11┊10┊export const routes: Route[] = [
+ ┊12┊11┊  { path: '', component: PartiesListComponent },
+ ┊13┊12┊  { path: 'party/:partyId', component: PartyDetailsComponent, canActivate: ['canActivateForLoggedIn'] },
+-┊14┊  ┊  { path: 'login', component: Meteor.isCordova ? MobileLoginComponent : LoginComponent },
++┊  ┊13┊  { path: 'login', component: LoginComponent },
+ ┊15┊14┊  { path: 'signup', component: SignupComponent },
+ ┊16┊15┊  { path: 'recover', component: RecoverComponent }
+ ┊17┊16┊];
+```
+[}]: #
+
+Create a root Component for the mobile, and call it `AppMobileComponent`:
+
+[{]: <helper> (diff_step 23.7)
+#### Step 23.7: Created the main mobile component
+
+##### Added client/imports/app/mobile/app.component.mobile.ts
+```diff
+@@ -0,0 +1,13 @@
++┊  ┊ 1┊import {Component} from "@angular/core";
++┊  ┊ 2┊import template from "./app.component.mobile.html";
++┊  ┊ 3┊import {MenuController, Platform, App} from "ionic-angular";
++┊  ┊ 4┊
++┊  ┊ 5┊@Component({
++┊  ┊ 6┊  selector: "app",
++┊  ┊ 7┊  template
++┊  ┊ 8┊})
++┊  ┊ 9┊export class AppMobileComponent {
++┊  ┊10┊  constructor(app: App, platform: Platform, menu: MenuController) {
++┊  ┊11┊
++┊  ┊12┊  }
++┊  ┊13┊}🚫↵
+```
+[}]: #
+
+And let's create it's view:
+
+[{]: <helper> (diff_step 23.8)
+#### Step 23.8: Created the main mobile component view
+
+##### Added client/imports/app/mobile/app.component.mobile.html
+```diff
+@@ -0,0 +1 @@
++┊ ┊1┊<ion-nav [root]="rootPage" swipe-back-enabled="true"></ion-nav>🚫↵
+```
+[}]: #
+
+We used `ion-nav` which is the navigation bar of Ionic, we also declared that our root page is `rootPage` which we will add later.
+
+Now let's create an index file for the ionic component declarations:
+
+[{]: <helper> (diff_step 23.9)
+#### Step 23.9: Created index file for mobile declarations
+
+##### Added client/imports/app/mobile/index.ts
+```diff
+@@ -0,0 +1,5 @@
++┊ ┊1┊import {AppMobileComponent} from "./app.component.mobile";
++┊ ┊2┊
++┊ ┊3┊export const MOBILE_DECLARATIONS = [
++┊ ┊4┊  AppMobileComponent
++┊ ┊5┊];🚫↵
+```
+[}]: #
+
+## Modules Separation
+
+In order to create two different versions of `NgModule` - one for each platform, we need to identify which platform are we running now - we already know how to do this from the previous step - we will use `Meteor.isCordova`.
+
+We will have a single `NgModule` called `AppModule`, but it's declaration will be different according to the platform.
+
+So we already know how the web module looks like, we just need to understand how mobile module defined when working with Ionic.
+
+First - we need to import `IonicModule` and declare our root Component there.
+
+We also need to declare `IonicApp` as our `bootstrap` Component, and add every Ionic `page` to the `entryComponents`.
+
+So let's create it and differ the platform:
+
+[{]: <helper> (diff_step 23.10)
+#### Step 23.10: Imported mobile declarations and added conditional main component bootstrap
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -13,32 +13,60 @@
+ ┊13┊13┊import { MaterialModule } from "@angular/material";
+ ┊14┊14┊import { AUTH_DECLARATIONS } from "./auth/index";
+ ┊15┊15┊import { FileDropModule } from "angular2-file-drop";
++┊  ┊16┊import { MOBILE_DECLARATIONS } from "./mobile/index";
++┊  ┊17┊import { AppMobileComponent } from "./mobile/app.component.mobile";
++┊  ┊18┊import { IonicModule, IonicApp } from "ionic-angular";
+ ┊16┊19┊
+-┊17┊  ┊@NgModule({
+-┊18┊  ┊  imports: [
+-┊19┊  ┊    BrowserModule,
+-┊20┊  ┊    FormsModule,
+-┊21┊  ┊    ReactiveFormsModule,
+-┊22┊  ┊    RouterModule.forRoot(routes),
+-┊23┊  ┊    AccountsModule,
+-┊24┊  ┊    Ng2PaginationModule,
+-┊25┊  ┊    AgmCoreModule.forRoot({
+-┊26┊  ┊      apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
+-┊27┊  ┊    }),
+-┊28┊  ┊    MaterialModule.forRoot(),
+-┊29┊  ┊    FileDropModule
+-┊30┊  ┊  ],
+-┊31┊  ┊  declarations: [
+-┊32┊  ┊    AppComponent,
+-┊33┊  ┊    ...PARTIES_DECLARATIONS,
+-┊34┊  ┊    ...SHARED_DECLARATIONS,
+-┊35┊  ┊    ...AUTH_DECLARATIONS
+-┊36┊  ┊  ],
+-┊37┊  ┊  providers: [
+-┊38┊  ┊    ...ROUTES_PROVIDERS
+-┊39┊  ┊  ],
+-┊40┊  ┊  bootstrap: [
+-┊41┊  ┊    AppComponent
+-┊42┊  ┊  ]
+-┊43┊  ┊})
++┊  ┊20┊let moduleDefinition;
++┊  ┊21┊
++┊  ┊22┊if (Meteor.isCordova) {
++┊  ┊23┊  moduleDefinition = {
++┊  ┊24┊    imports: [
++┊  ┊25┊      IonicModule.forRoot(AppMobileComponent)
++┊  ┊26┊    ],
++┊  ┊27┊    declarations: [
++┊  ┊28┊      ...SHARED_DECLARATIONS,
++┊  ┊29┊      ...MOBILE_DECLARATIONS
++┊  ┊30┊    ],
++┊  ┊31┊    providers: [
++┊  ┊32┊    ],
++┊  ┊33┊    bootstrap: [
++┊  ┊34┊      IonicApp
++┊  ┊35┊    ],
++┊  ┊36┊    entryComponents: [
++┊  ┊37┊      AppMobileComponent
++┊  ┊38┊    ]
++┊  ┊39┊  }
++┊  ┊40┊}
++┊  ┊41┊else {
++┊  ┊42┊  moduleDefinition = {
++┊  ┊43┊    imports: [
++┊  ┊44┊      BrowserModule,
++┊  ┊45┊      FormsModule,
++┊  ┊46┊      ReactiveFormsModule,
++┊  ┊47┊      RouterModule.forRoot(routes),
++┊  ┊48┊      AccountsModule,
++┊  ┊49┊      Ng2PaginationModule,
++┊  ┊50┊      AgmCoreModule.forRoot({
++┊  ┊51┊        apiKey: 'AIzaSyAWoBdZHCNh5R-hB5S5ZZ2oeoYyfdDgniA'
++┊  ┊52┊      }),
++┊  ┊53┊      MaterialModule.forRoot(),
++┊  ┊54┊      FileDropModule
++┊  ┊55┊    ],
++┊  ┊56┊    declarations: [
++┊  ┊57┊      AppComponent,
++┊  ┊58┊      ...PARTIES_DECLARATIONS,
++┊  ┊59┊      ...SHARED_DECLARATIONS,
++┊  ┊60┊      ...AUTH_DECLARATIONS
++┊  ┊61┊    ],
++┊  ┊62┊    providers: [
++┊  ┊63┊      ...ROUTES_PROVIDERS
++┊  ┊64┊    ],
++┊  ┊65┊    bootstrap: [
++┊  ┊66┊      AppComponent
++┊  ┊67┊    ]
++┊  ┊68┊  }
++┊  ┊69┊}
++┊  ┊70┊
++┊  ┊71┊@NgModule(moduleDefinition)
+ ┊44┊72┊export class AppModule {}🚫↵
+```
+[}]: #
+
+Our next step is to change our selector of the root Component.
+
+As we already know, the root Component of the web platform uses `<app>` tag as the selector, but in our case the root Component has to be `IonicApp` that uses `<ion-app>` tag.
+
+So we need to have the ability to switch `<app>` to `<ion-app>` when using mobile platform.
+
+There is a package called `ionic-selector` we can use in order to get this done, so let's add it:
+
+    $ meteor npm install --save ionic-selector
+
+Now let's use in before bootstrapping our module:
+
+[{]: <helper> (diff_step 23.12)
+#### Step 23.12: Use ionic-selector package
+
+##### Changed client/main.ts
+```diff
+@@ -6,7 +6,13 @@
+ ┊ 6┊ 6┊
+ ┊ 7┊ 7┊import '../both/methods/parties.methods';
+ ┊ 8┊ 8┊
++┊  ┊ 9┊import ionicSelector from 'ionic-selector';
++┊  ┊10┊
+ ┊ 9┊11┊Meteor.startup(() => {
++┊  ┊12┊  if (Meteor.isCordova) {
++┊  ┊13┊    ionicSelector("app");
++┊  ┊14┊  }
++┊  ┊15┊
+ ┊10┊16┊  const platform = platformBrowserDynamic();
+ ┊11┊17┊  platform.bootstrapModule(AppModule);
+ ┊12┊18┊});🚫↵
+```
+[}]: #
+
+What it does? It's changing tag name of the main component (`app` by default but you can specify any selector you want) to `ion-app`.
+
+An example:
+
+```html
+<body>
+  <app class="main"></app>
+</body>
+```
+
+will be changed to:
+
+```html
+<body>
+  <ion-app class="main"></ion-app>
+</body>
+```
+
+## Ionic styles & icons
+
+Our next step is to load Ionic style and icons (called `ionicons`) only to the mobile platform.
+
+Start by adding the icons package:
+
+    $ meteor npm install --save ionicons
+
+Also, let's create a style file for the mobile and Ionic styles, and load the icons package to it:
+
+[{]: <helper> (diff_step 23.14)
+#### Step 23.14: Create ionic.scss and add ionicons to it
+
+##### Added client/imports/app/mobile/ionic.scss
+```diff
+@@ -0,0 +1 @@
++┊ ┊1┊@import "{}/node_modules/ionicons/dist/scss/ionicons";🚫↵
+```
+[}]: #
+
+And let's imports this file into our main styles file:
+
+[{]: <helper> (diff_step 23.15)
+#### Step 23.15: Import ionic.scss to main file
+
+##### Changed client/main.scss
+```diff
+@@ -1,4 +1,5 @@
+ ┊1┊1┊@import '../node_modules/@angular/material/core/theming/all-theme';
++┊ ┊2┊@import "imports/app/mobile/ionic.scss";
+ ┊2┊3┊
+ ┊3┊4┊@include md-core();
+ ┊4┊5┊$app-primary: md-palette($md-light-blue, 500, 100, 700);
+```
+[}]: #
+
+Now we need to load Ionic stylesheet into our project - but we need to load it only to the mobile platform, without loading it to the web platform (otherwise, it will override our styles):
+
+[{]: <helper> (diff_step 23.16)
+#### Step 23.16: Imported the main css file of ionic
+
+##### Changed client/imports/app/mobile/app.component.mobile.ts
+```diff
+@@ -2,6 +2,10 @@
+ ┊ 2┊ 2┊import template from "./app.component.mobile.html";
+ ┊ 3┊ 3┊import {MenuController, Platform, App} from "ionic-angular";
+ ┊ 4┊ 4┊
++┊  ┊ 5┊if (Meteor.isCordova) {
++┊  ┊ 6┊  require("ionic-angular/css/ionic.css");
++┊  ┊ 7┊}
++┊  ┊ 8┊
+ ┊ 5┊ 9┊@Component({
+ ┊ 6┊10┊  selector: "app",
+ ┊ 7┊11┊  template
+```
+[}]: #
+
+We also need to add some CSS classes in order to get a good result:
+
+[{]: <helper> (diff_step 23.17)
+#### Step 23.17: Add two classes to fix an issue with overflow
+
+##### Changed client/main.scss
+```diff
+@@ -19,6 +19,15 @@
+ ┊19┊19┊  margin: 0;
+ ┊20┊20┊}
+ ┊21┊21┊
++┊  ┊22┊body.mobile {
++┊  ┊23┊  overflow: hidden;
++┊  ┊24┊}
++┊  ┊25┊
++┊  ┊26┊body.web {
++┊  ┊27┊  overflow: visible;
++┊  ┊28┊  position: initial;
++┊  ┊29┊}
++┊  ┊30┊
+ ┊22┊31┊.sebm-google-map-container {
+ ┊23┊32┊  width: 450px;
+ ┊24┊33┊  height: 450px;
+```
+[}]: #
+
+And let's add the correct class to the `body`:
+
+[{]: <helper> (diff_step 23.18)
+#### Step 23.18: Set the proper class on body
+
+##### Changed client/main.ts
+```diff
+@@ -8,9 +8,20 @@
+ ┊ 8┊ 8┊
+ ┊ 9┊ 9┊import ionicSelector from 'ionic-selector';
+ ┊10┊10┊
++┊  ┊11┊function setClass(css) {
++┊  ┊12┊  if (!document.body.className) {
++┊  ┊13┊    document.body.className = "";
++┊  ┊14┊  }
++┊  ┊15┊  document.body.className += " " + css;
++┊  ┊16┊}
++┊  ┊17┊
+ ┊11┊18┊Meteor.startup(() => {
+ ┊12┊19┊  if (Meteor.isCordova) {
+ ┊13┊20┊    ionicSelector("app");
++┊  ┊21┊    setClass('mobile');
++┊  ┊22┊  }
++┊  ┊23┊  else {
++┊  ┊24┊    setClass('web');
+ ┊14┊25┊  }
+ ┊15┊26┊
+ ┊16┊27┊  const platform = platformBrowserDynamic();
+```
+[}]: #
+
+> We created a mechanism that adds `web` or `mobile` class to `<body/>` element depends on environment.
+
+## Share logic between platforms
+
+We want to share the logic of `PartiesListComponent` without sharing it's styles and template - because we want a different looks between the platforms.
+
+In order to do so, let's take all of the logic we have in `PartiesListComponent` and take it to an external file that won't contain the Component decorator:
+
+[{]: <helper> (diff_step 23.19)
+#### Step 23.19: Take the logic of parties list to external class
+
+##### Added client/imports/app/shared-components/parties-list.class.ts
+```diff
+@@ -0,0 +1,112 @@
++┊   ┊  1┊import {OnDestroy, OnInit} from "@angular/core";
++┊   ┊  2┊import {Observable, Subscription, Subject} from "rxjs";
++┊   ┊  3┊import {Party} from "../../../../both/models/party.model";
++┊   ┊  4┊import {PaginationService} from "ng2-pagination";
++┊   ┊  5┊import {MeteorObservable} from "meteor-rxjs";
++┊   ┊  6┊import {Parties} from "../../../../both/collections/parties.collection";
++┊   ┊  7┊import {Counts} from "meteor/tmeasday:publish-counts";
++┊   ┊  8┊import {InjectUser} from "angular2-meteor-accounts-ui";
++┊   ┊  9┊
++┊   ┊ 10┊interface Pagination {
++┊   ┊ 11┊  limit: number;
++┊   ┊ 12┊  skip: number;
++┊   ┊ 13┊}
++┊   ┊ 14┊
++┊   ┊ 15┊interface Options extends Pagination {
++┊   ┊ 16┊  [key: string]: any
++┊   ┊ 17┊}
++┊   ┊ 18┊
++┊   ┊ 19┊@InjectUser('user')
++┊   ┊ 20┊export class PartiesList implements OnInit, OnDestroy {
++┊   ┊ 21┊  parties: Observable<Party[]>;
++┊   ┊ 22┊  partiesSub: Subscription;
++┊   ┊ 23┊  pageSize: Subject<number> = new Subject<number>();
++┊   ┊ 24┊  curPage: Subject<number> = new Subject<number>();
++┊   ┊ 25┊  nameOrder: Subject<number> = new Subject<number>();
++┊   ┊ 26┊  optionsSub: Subscription;
++┊   ┊ 27┊  partiesSize: number = 0;
++┊   ┊ 28┊  autorunSub: Subscription;
++┊   ┊ 29┊  location: Subject<string> = new Subject<string>();
++┊   ┊ 30┊  user: Meteor.User;
++┊   ┊ 31┊  imagesSubs: Subscription;
++┊   ┊ 32┊
++┊   ┊ 33┊  constructor(private paginationService: PaginationService) {
++┊   ┊ 34┊
++┊   ┊ 35┊  }
++┊   ┊ 36┊
++┊   ┊ 37┊  ngOnInit() {
++┊   ┊ 38┊    this.imagesSubs = MeteorObservable.subscribe('images').subscribe();
++┊   ┊ 39┊
++┊   ┊ 40┊    this.optionsSub = Observable.combineLatest(
++┊   ┊ 41┊      this.pageSize,
++┊   ┊ 42┊      this.curPage,
++┊   ┊ 43┊      this.nameOrder,
++┊   ┊ 44┊      this.location
++┊   ┊ 45┊    ).subscribe(([pageSize, curPage, nameOrder, location]) => {
++┊   ┊ 46┊      const options: Options = {
++┊   ┊ 47┊        limit: pageSize as number,
++┊   ┊ 48┊        skip: ((curPage as number) - 1) * (pageSize as number),
++┊   ┊ 49┊        sort: { name: nameOrder as number }
++┊   ┊ 50┊      };
++┊   ┊ 51┊
++┊   ┊ 52┊      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);
++┊   ┊ 53┊
++┊   ┊ 54┊      if (this.partiesSub) {
++┊   ┊ 55┊        this.partiesSub.unsubscribe();
++┊   ┊ 56┊      }
++┊   ┊ 57┊
++┊   ┊ 58┊      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {
++┊   ┊ 59┊        this.parties = Parties.find({}, {
++┊   ┊ 60┊          sort: {
++┊   ┊ 61┊            name: nameOrder
++┊   ┊ 62┊          }
++┊   ┊ 63┊        }).zone();
++┊   ┊ 64┊      });
++┊   ┊ 65┊    });
++┊   ┊ 66┊
++┊   ┊ 67┊    this.paginationService.register({
++┊   ┊ 68┊      id: this.paginationService.defaultId,
++┊   ┊ 69┊      itemsPerPage: 10,
++┊   ┊ 70┊      currentPage: 1,
++┊   ┊ 71┊      totalItems: this.partiesSize
++┊   ┊ 72┊    });
++┊   ┊ 73┊
++┊   ┊ 74┊    this.pageSize.next(10);
++┊   ┊ 75┊    this.curPage.next(1);
++┊   ┊ 76┊    this.nameOrder.next(1);
++┊   ┊ 77┊    this.location.next('');
++┊   ┊ 78┊
++┊   ┊ 79┊    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
++┊   ┊ 80┊      this.partiesSize = Counts.get('numberOfParties');
++┊   ┊ 81┊      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
++┊   ┊ 82┊    });
++┊   ┊ 83┊  }
++┊   ┊ 84┊
++┊   ┊ 85┊  removeParty(party: Party): void {
++┊   ┊ 86┊    Parties.remove(party._id);
++┊   ┊ 87┊  }
++┊   ┊ 88┊
++┊   ┊ 89┊  search(value: string): void {
++┊   ┊ 90┊    this.curPage.next(1);
++┊   ┊ 91┊    this.location.next(value);
++┊   ┊ 92┊  }
++┊   ┊ 93┊
++┊   ┊ 94┊  onPageChanged(page: number): void {
++┊   ┊ 95┊    this.curPage.next(page);
++┊   ┊ 96┊  }
++┊   ┊ 97┊
++┊   ┊ 98┊  changeSortOrder(nameOrder: string): void {
++┊   ┊ 99┊    this.nameOrder.next(parseInt(nameOrder));
++┊   ┊100┊  }
++┊   ┊101┊
++┊   ┊102┊  isOwner(party: Party): boolean {
++┊   ┊103┊    return this.user && this.user._id === party.owner;
++┊   ┊104┊  }
++┊   ┊105┊
++┊   ┊106┊  ngOnDestroy() {
++┊   ┊107┊    this.partiesSub.unsubscribe();
++┊   ┊108┊    this.optionsSub.unsubscribe();
++┊   ┊109┊    this.autorunSub.unsubscribe();
++┊   ┊110┊    this.imagesSubs.unsubscribe();
++┊   ┊111┊  }
++┊   ┊112┊}🚫↵
+```
+[}]: #
+
+And let's clean up the `PartiesListComponent`, and use the new class `PartiesList` as base class for this Component:
+
+[{]: <helper> (diff_step 23.20)
+#### Step 23.20: Create a clean parties list for web display
+
+##### Changed client/imports/app/parties/parties-list.component.ts
+```diff
+@@ -1,125 +1,17 @@
+-┊  1┊   ┊import { Component, OnInit, OnDestroy } from '@angular/core';
+-┊  2┊   ┊import { Observable } from 'rxjs/Observable';
+-┊  3┊   ┊import { Subject } from 'rxjs/Subject';
+-┊  4┊   ┊import { Subscription } from 'rxjs/Subscription';
+-┊  5┊   ┊import { MeteorObservable } from 'meteor-rxjs';
++┊   ┊  1┊import { Component } from '@angular/core';
+ ┊  6┊  2┊import { PaginationService } from 'ng2-pagination';
+-┊  7┊   ┊import { Counts } from 'meteor/tmeasday:publish-counts';
+-┊  8┊   ┊import { InjectUser } from "angular2-meteor-accounts-ui";
+-┊  9┊   ┊
+-┊ 10┊   ┊import 'rxjs/add/operator/combineLatest';
+-┊ 11┊   ┊
+-┊ 12┊   ┊import { Parties } from '../../../../both/collections/parties.collection';
+-┊ 13┊   ┊import { Party } from '../../../../both/models/party.model';
++┊   ┊  3┊import { PartiesList } from "../shared-components/parties-list.class";
+ ┊ 14┊  4┊
+ ┊ 15┊  5┊import template from './parties-list.component.html';
+ ┊ 16┊  6┊import style from './parties-list.component.scss';
+ ┊ 17┊  7┊
+-┊ 18┊   ┊interface Pagination {
+-┊ 19┊   ┊  limit: number;
+-┊ 20┊   ┊  skip: number;
+-┊ 21┊   ┊}
+-┊ 22┊   ┊
+-┊ 23┊   ┊interface Options extends Pagination {
+-┊ 24┊   ┊  [key: string]: any
+-┊ 25┊   ┊}
+-┊ 26┊   ┊
+ ┊ 27┊  8┊@Component({
+ ┊ 28┊  9┊  selector: 'parties-list',
+ ┊ 29┊ 10┊  template,
+ ┊ 30┊ 11┊  styles: [ style ]
+ ┊ 31┊ 12┊})
+-┊ 32┊   ┊@InjectUser('user')
+-┊ 33┊   ┊export class PartiesListComponent implements OnInit, OnDestroy {
+-┊ 34┊   ┊  parties: Observable<Party[]>;
+-┊ 35┊   ┊  partiesSub: Subscription;
+-┊ 36┊   ┊  pageSize: Subject<number> = new Subject<number>();
+-┊ 37┊   ┊  curPage: Subject<number> = new Subject<number>();
+-┊ 38┊   ┊  nameOrder: Subject<number> = new Subject<number>();
+-┊ 39┊   ┊  optionsSub: Subscription;
+-┊ 40┊   ┊  partiesSize: number = 0;
+-┊ 41┊   ┊  autorunSub: Subscription;
+-┊ 42┊   ┊  location: Subject<string> = new Subject<string>();
+-┊ 43┊   ┊  user: Meteor.User;
+-┊ 44┊   ┊  imagesSubs: Subscription;
+-┊ 45┊   ┊
+-┊ 46┊   ┊  constructor(
+-┊ 47┊   ┊    private paginationService: PaginationService
+-┊ 48┊   ┊  ) {}
+-┊ 49┊   ┊
+-┊ 50┊   ┊  ngOnInit() {
+-┊ 51┊   ┊    this.imagesSubs = MeteorObservable.subscribe('images').subscribe();
+-┊ 52┊   ┊
+-┊ 53┊   ┊    this.optionsSub = Observable.combineLatest(
+-┊ 54┊   ┊      this.pageSize,
+-┊ 55┊   ┊      this.curPage,
+-┊ 56┊   ┊      this.nameOrder,
+-┊ 57┊   ┊      this.location
+-┊ 58┊   ┊    ).subscribe(([pageSize, curPage, nameOrder, location]) => {
+-┊ 59┊   ┊      const options: Options = {
+-┊ 60┊   ┊        limit: pageSize as number,
+-┊ 61┊   ┊        skip: ((curPage as number) - 1) * (pageSize as number),
+-┊ 62┊   ┊        sort: { name: nameOrder as number }
+-┊ 63┊   ┊      };
+-┊ 64┊   ┊
+-┊ 65┊   ┊      this.paginationService.setCurrentPage(this.paginationService.defaultId, curPage as number);
+-┊ 66┊   ┊
+-┊ 67┊   ┊      if (this.partiesSub) {
+-┊ 68┊   ┊        this.partiesSub.unsubscribe();
+-┊ 69┊   ┊      }
+-┊ 70┊   ┊      
+-┊ 71┊   ┊      this.partiesSub = MeteorObservable.subscribe('parties', options, location).subscribe(() => {
+-┊ 72┊   ┊        this.parties = Parties.find({}, {
+-┊ 73┊   ┊          sort: {
+-┊ 74┊   ┊            name: nameOrder
+-┊ 75┊   ┊          }
+-┊ 76┊   ┊        }).zone();
+-┊ 77┊   ┊      });
+-┊ 78┊   ┊    });
+-┊ 79┊   ┊
+-┊ 80┊   ┊    this.paginationService.register({
+-┊ 81┊   ┊      id: this.paginationService.defaultId,
+-┊ 82┊   ┊      itemsPerPage: 10,
+-┊ 83┊   ┊      currentPage: 1,
+-┊ 84┊   ┊      totalItems: this.partiesSize
+-┊ 85┊   ┊    });
+-┊ 86┊   ┊
+-┊ 87┊   ┊    this.pageSize.next(10);
+-┊ 88┊   ┊    this.curPage.next(1);
+-┊ 89┊   ┊    this.nameOrder.next(1);
+-┊ 90┊   ┊    this.location.next('');
+-┊ 91┊   ┊
+-┊ 92┊   ┊    this.autorunSub = MeteorObservable.autorun().subscribe(() => {
+-┊ 93┊   ┊      this.partiesSize = Counts.get('numberOfParties');
+-┊ 94┊   ┊      this.paginationService.setTotalItems(this.paginationService.defaultId, this.partiesSize);
+-┊ 95┊   ┊    });
+-┊ 96┊   ┊  }
+-┊ 97┊   ┊
+-┊ 98┊   ┊  removeParty(party: Party): void {
+-┊ 99┊   ┊    Parties.remove(party._id);
+-┊100┊   ┊  }
+-┊101┊   ┊
+-┊102┊   ┊  search(value: string): void {
+-┊103┊   ┊    this.curPage.next(1);
+-┊104┊   ┊    this.location.next(value);
+-┊105┊   ┊  }
+-┊106┊   ┊
+-┊107┊   ┊  onPageChanged(page: number): void {
+-┊108┊   ┊    this.curPage.next(page);
+-┊109┊   ┊  }
+-┊110┊   ┊
+-┊111┊   ┊  changeSortOrder(nameOrder: string): void {
+-┊112┊   ┊    this.nameOrder.next(parseInt(nameOrder));
+-┊113┊   ┊  }
+-┊114┊   ┊
+-┊115┊   ┊  isOwner(party: Party): boolean {
+-┊116┊   ┊    return this.user && this.user._id === party.owner;
+-┊117┊   ┊  }
+-┊118┊   ┊
+-┊119┊   ┊  ngOnDestroy() {
+-┊120┊   ┊    this.partiesSub.unsubscribe();
+-┊121┊   ┊    this.optionsSub.unsubscribe();
+-┊122┊   ┊    this.autorunSub.unsubscribe();
+-┊123┊   ┊    this.imagesSubs.unsubscribe();
++┊   ┊ 13┊export class PartiesListComponent extends PartiesList {
++┊   ┊ 14┊  constructor(paginationService: PaginationService) {
++┊   ┊ 15┊    super(paginationService);
+ ┊124┊ 16┊  }
+ ┊125┊ 17┊}
+```
+[}]: #
+
+Now let's create a basic view and layout for the mobile platform, be creating a new Component called `PartiesListMobile`, starting with the view:
+
+[{]: <helper> (diff_step 23.21)
+#### Step 23.21: Create a basic view of the mobile version
+
+##### Added client/imports/app/mobile/parties-list.component.mobile.html
+```diff
+@@ -0,0 +1,8 @@
++┊ ┊1┊<ion-header>
++┊ ┊2┊  <ion-navbar>
++┊ ┊3┊    <ion-title>Socially</ion-title>
++┊ ┊4┊  </ion-navbar>
++┊ ┊5┊</ion-header>
++┊ ┊6┊<ion-content>
++┊ ┊7┊  Parties!
++┊ ┊8┊</ion-content>
+```
+[}]: #
+
+And it's Component, which is very similar to the web version, only it uses different template:
+
+[{]: <helper> (diff_step 23.22)
+#### Step 23.22: Create the mobile version of PartiesList component
+
+##### Added client/imports/app/mobile/parties-list.component.mobile.ts
+```diff
+@@ -0,0 +1,15 @@
++┊  ┊ 1┊import { Component } from '@angular/core';
++┊  ┊ 2┊import { PaginationService } from 'ng2-pagination';
++┊  ┊ 3┊import { PartiesList } from "../shared-components/parties-list.class";
++┊  ┊ 4┊
++┊  ┊ 5┊import template from './parties-list.component.mobile.html';
++┊  ┊ 6┊
++┊  ┊ 7┊@Component({
++┊  ┊ 8┊  selector: 'parties-list',
++┊  ┊ 9┊  template
++┊  ┊10┊})
++┊  ┊11┊export class PartiesListMobileComponent extends PartiesList {
++┊  ┊12┊  constructor(paginationService: PaginationService) {
++┊  ┊13┊    super(paginationService);
++┊  ┊14┊  }
++┊  ┊15┊}
+```
+[}]: #
+
+Now let's add the mobile Component of the parties list to the index file:
+
+[{]: <helper> (diff_step 23.23)
+#### Step 23.23: Added PartiesListMobile component to the index file
+
+##### Changed client/imports/app/mobile/index.ts
+```diff
+@@ -1,5 +1,7 @@
+ ┊1┊1┊import {AppMobileComponent} from "./app.component.mobile";
++┊ ┊2┊import {PartiesListMobileComponent} from "./parties-list.component.mobile";
+ ┊2┊3┊
+ ┊3┊4┊export const MOBILE_DECLARATIONS = [
+-┊4┊ ┊  AppMobileComponent
++┊ ┊5┊  AppMobileComponent,
++┊ ┊6┊  PartiesListMobileComponent
+ ┊5┊7┊];🚫↵
+```
+[}]: #
+
+And let's add the Component we just created as `rootPage` for our Ionic application:
+
+[{]: <helper> (diff_step 23.24)
+#### Step 23.24: Added the rootPage
+
+##### Changed client/imports/app/mobile/app.component.mobile.ts
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊import {Component} from "@angular/core";
+ ┊2┊2┊import template from "./app.component.mobile.html";
+ ┊3┊3┊import {MenuController, Platform, App} from "ionic-angular";
++┊ ┊4┊import {PartiesListMobileComponent} from "./parties-list.component.mobile";
+ ┊4┊5┊
+ ┊5┊6┊if (Meteor.isCordova) {
+ ┊6┊7┊  require("ionic-angular/css/ionic.css");
+```
+```diff
+@@ -11,7 +12,9 @@
+ ┊11┊12┊  template
+ ┊12┊13┊})
+ ┊13┊14┊export class AppMobileComponent {
+-┊14┊  ┊  constructor(app: App, platform: Platform, menu: MenuController) {
++┊  ┊15┊  rootPage: any;
+ ┊15┊16┊
++┊  ┊17┊  constructor(app: App, platform: Platform, menu: MenuController) {
++┊  ┊18┊    this.rootPage = PartiesListMobileComponent;
+ ┊16┊19┊  }
+ ┊17┊20┊}🚫↵
+```
+[}]: #
+
+Now we just need declare this Component as `entryComponents` in the `NgModule` definition, and make sure we have all the required external modules in the `NgModule` that loaded for the mobile:
+
+[{]: <helper> (diff_step 23.25)
+#### Step 23.25: Update the module imports and entry point
+
+##### Changed client/imports/app/app.module.ts
+```diff
+@@ -16,12 +16,14 @@
+ ┊16┊16┊import { MOBILE_DECLARATIONS } from "./mobile/index";
+ ┊17┊17┊import { AppMobileComponent } from "./mobile/app.component.mobile";
+ ┊18┊18┊import { IonicModule, IonicApp } from "ionic-angular";
++┊  ┊19┊import { PartiesListMobileComponent } from "./mobile/parties-list.component.mobile";
+ ┊19┊20┊
+ ┊20┊21┊let moduleDefinition;
+ ┊21┊22┊
+ ┊22┊23┊if (Meteor.isCordova) {
+ ┊23┊24┊  moduleDefinition = {
+ ┊24┊25┊    imports: [
++┊  ┊26┊      Ng2PaginationModule,
+ ┊25┊27┊      IonicModule.forRoot(AppMobileComponent)
+ ┊26┊28┊    ],
+ ┊27┊29┊    declarations: [
+```
+```diff
+@@ -34,7 +36,7 @@
+ ┊34┊36┊      IonicApp
+ ┊35┊37┊    ],
+ ┊36┊38┊    entryComponents: [
+-┊37┊  ┊      AppMobileComponent
++┊  ┊39┊      PartiesListMobileComponent
+ ┊38┊40┊    ]
+ ┊39┊41┊  }
+ ┊40┊42┊}
+```
+[}]: #
+
+Now we want to add the actual view to the mobile Component, so let's do it:
+
+[{]: <helper> (diff_step 23.26)
+#### Step 23.26: Add name, description ad RSVPs to the view
+
+##### Changed client/imports/app/mobile/parties-list.component.mobile.html
+```diff
+@@ -4,5 +4,28 @@
+ ┊ 4┊ 4┊  </ion-navbar>
+ ┊ 5┊ 5┊</ion-header>
+ ┊ 6┊ 6┊<ion-content>
+-┊ 7┊  ┊  Parties!
++┊  ┊ 7┊  <ion-card *ngFor="let party of parties | async">
++┊  ┊ 8┊    <ion-card-content>
++┊  ┊ 9┊      <ion-card-title>
++┊  ┊10┊        {{party.name}}
++┊  ┊11┊      </ion-card-title>
++┊  ┊12┊      <p>
++┊  ┊13┊        {{party.description}}
++┊  ┊14┊      </p>
++┊  ┊15┊    </ion-card-content>
++┊  ┊16┊
++┊  ┊17┊    <ion-row no-padding>
++┊  ┊18┊      <ion-col text-right>
++┊  ┊19┊        <ion-badge>
++┊  ┊20┊          yes {{party | rsvp:'yes'}}
++┊  ┊21┊        </ion-badge>
++┊  ┊22┊        <ion-badge item-center dark>
++┊  ┊23┊          maybe {{party | rsvp:'maybe'}}
++┊  ┊24┊        </ion-badge>
++┊  ┊25┊        <ion-badge item-center danger>
++┊  ┊26┊          no {{party | rsvp:'no'}}
++┊  ┊27┊        </ion-badge>
++┊  ┊28┊      </ion-col>
++┊  ┊29┊    </ion-row>
++┊  ┊30┊  </ion-card>
+ ┊ 8┊31┊</ion-content>
+```
+[}]: #
+
+> We used `ion-card` which is an Ionic Component.
+
+And in order to have the ability to load images in the mobile platform, we need to add some logic to the `displayMainImage` Pipe, because Meteor's absolute URL is not the same in mobile:
+
+[{]: <helper> (diff_step 23.27)
+#### Step 23.27: Fix an issuewith a absolute path of an image
+
+##### Changed client/imports/app/shared/display-main-image.pipe.ts
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊import {Pipe, PipeTransform} from '@angular/core';
+ ┊2┊2┊import { Images } from '../../../../both/collections/images.collection';
+ ┊3┊3┊import { Party } from '../../../../both/models/party.model';
++┊ ┊4┊import { Meteor } from "meteor/meteor";
+ ┊4┊5┊
+ ┊5┊6┊@Pipe({
+ ┊6┊7┊  name: 'displayMainImage'
+```
+```diff
+@@ -17,7 +18,12 @@
+ ┊17┊18┊    const found = Images.findOne(imageId);
+ ┊18┊19┊
+ ┊19┊20┊    if (found) {
+-┊20┊  ┊      imageUrl = found.url;
++┊  ┊21┊      if (!Meteor.isCordova) {
++┊  ┊22┊        imageUrl = found.url;
++┊  ┊23┊      } else {
++┊  ┊24┊        const path = `ufs/${found.store}/${found._id}/${found.name}`;
++┊  ┊25┊        imageUrl = Meteor.absoluteUrl(path);
++┊  ┊26┊      }
+ ┊21┊27┊    }
+ ┊22┊28┊
+ ┊23┊29┊    return imageUrl;
+```
+[}]: #
+
+And let's add the image to the view:
+
+[{]: <helper> (diff_step 23.28)
+#### Step 23.28: Use the main image pipe
+
+##### Changed client/imports/app/mobile/parties-list.component.mobile.html
+```diff
+@@ -5,6 +5,7 @@
+ ┊ 5┊ 5┊</ion-header>
+ ┊ 6┊ 6┊<ion-content>
+ ┊ 7┊ 7┊  <ion-card *ngFor="let party of parties | async">
++┊  ┊ 8┊    <img *ngIf="party.images" [src]="party | displayMainImage">
+ ┊ 8┊ 9┊    <ion-card-content>
+ ┊ 9┊10┊      <ion-card-title>
+ ┊10┊11┊        {{party.name}}
+```
+[}]: #
+
+### Fixing fonts
+
+As you probably notice, there are many warnings about missing fonts. We can easily fix it with the help of a package called [`mys:fonts`](https://github.com/jellyjs/meteor-fonts).
+
+    $ meteor add mys:fonts
+
+That plugin needs to know which font we want to use and where it should be available.
+
+Configuration is pretty easy, you will catch it by just looking on an example:
+
+[{]: <helper> (diff_step 23.30)
+#### Step 23.30: Define fonts.json
+
+##### Added fonts.json
+```diff
+@@ -0,0 +1,8 @@
++┊ ┊1┊{
++┊ ┊2┊  "map": {
++┊ ┊3┊    "node_modules/ionic-angular/fonts/roboto-medium.ttf": "fonts/roboto-medium.ttf",
++┊ ┊4┊    "node_modules/ionic-angular/fonts/roboto-regular.ttf": "fonts/roboto-regular.ttf",
++┊ ┊5┊    "node_modules/ionic-angular/fonts/roboto-medium.woff": "fonts/roboto-medium.woff",
++┊ ┊6┊    "node_modules/ionic-angular/fonts/roboto-regular.woff": "fonts/roboto-regular.woff"
++┊ ┊7┊  }
++┊ ┊8┊}🚫↵
+```
+[}]: #
+
+Now `roboto-regular.ttf` is available under `http://localhost:3000/fonts/roboto-regular.ttf`.
+
+And... You have an app that works with Ionic!
+
+## Summary
+
+In this tutorial we showed how to use Ionic and how to separate the whole view for both, web and mobile.
+
+We also learned how to share component between platforms, and change the view only!
+
+We also used Ionic directives in order to provide user-experience of mobile platform instead of regular responsive layout of website.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step22.md) | [Next Step >](step24.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From f52f23497c650c0e0db70bc7e9fc9362a53db1f8 Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:38:04 -0200
Subject: [PATCH 303/304] Step 24: ngUpgrade and Migration to Angular2

---
 manuals/templates/step24.md |  3 +++
 manuals/views/step24.md     | 15 +++++++++++++++
 2 files changed, 18 insertions(+)
 create mode 100644 manuals/templates/step24.md
 create mode 100644 manuals/views/step24.md

diff --git a/manuals/templates/step24.md b/manuals/templates/step24.md
new file mode 100644
index 0000000..e54ebf6
--- /dev/null
+++ b/manuals/templates/step24.md
@@ -0,0 +1,3 @@
+## ngUpgrade
+
+[Click here](/tutorials/socially/angular1/migration-to-angular2) for the chapter explaining how to use both Angular 1.x and 2.0 in the same app and migrate gradually. 
diff --git a/manuals/views/step24.md b/manuals/views/step24.md
new file mode 100644
index 0000000..3c3d4fa
--- /dev/null
+++ b/manuals/views/step24.md
@@ -0,0 +1,15 @@
+[{]: <region> (header)
+# Step 24: ngUpgrade and Migration to Angular2
+[}]: #
+[{]: <region> (body)
+## ngUpgrade
+
+[Click here](/tutorials/socially/angular1/migration-to-angular2) for the chapter explaining how to use both Angular 1.x and 2.0 in the same app and migrate gradually. 
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step23.md) | [Next Step >](step25.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 0b4d76491515d15bdf0684bb6d5ef3cd164802ee Mon Sep 17 00:00:00 2001
From: DAB0mB <emanor6@gmail.com>
Date: Thu, 3 Nov 2016 14:38:05 -0200
Subject: [PATCH 304/304] Step 25: Next Steps

---
 manuals/templates/step25.md | 12 ++++++++++++
 manuals/views/step25.md     | 24 ++++++++++++++++++++++++
 2 files changed, 36 insertions(+)
 create mode 100644 manuals/templates/step25.md
 create mode 100644 manuals/views/step25.md

diff --git a/manuals/templates/step25.md b/manuals/templates/step25.md
new file mode 100644
index 0000000..b3babda
--- /dev/null
+++ b/manuals/templates/step25.md
@@ -0,0 +1,12 @@
+# What's next?
+
+Congratulations on your newly built angular-meteor app! Don't forget to deploy it again so your friends can use the new features.
+
+Here are some options for where you can go next:
+
+1. [Full API reference](/api)
+2. [Contribute to our project](https://github.com/Urigo/angular-meteor#contributing)
+3. Follow and comment on our [Roadmap](https://trello.com/b/Wj9U0ulk/angular-meteor)
+4. Join other developers on the [Meteor forum](https://forums.meteor.com/)
+5. If you'd like to deploy this app to a production server, we recommend you check out [https://www.meteor.com/why-meteor/pricing](Meteor Galaxy), the cloud service for hosting and managing Meteor apps.
+6. Try the [WhatsApp clone tutorial](/tutorials/whatsapp/)
diff --git a/manuals/views/step25.md b/manuals/views/step25.md
new file mode 100644
index 0000000..f5d6b5f
--- /dev/null
+++ b/manuals/views/step25.md
@@ -0,0 +1,24 @@
+[{]: <region> (header)
+# Step 25: Next Steps
+[}]: #
+[{]: <region> (body)
+# What's next?
+
+Congratulations on your newly built angular-meteor app! Don't forget to deploy it again so your friends can use the new features.
+
+Here are some options for where you can go next:
+
+1. [Full API reference](/api)
+2. [Contribute to our project](https://github.com/Urigo/angular-meteor#contributing)
+3. Follow and comment on our [Roadmap](https://trello.com/b/Wj9U0ulk/angular-meteor)
+4. Join other developers on the [Meteor forum](https://forums.meteor.com/)
+5. If you'd like to deploy this app to a production server, we recommend you check out [https://www.meteor.com/why-meteor/pricing](Meteor Galaxy), the cloud service for hosting and managing Meteor apps.
+6. Try the [WhatsApp clone tutorial](/tutorials/whatsapp/)
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step24.md) |
+|:----------------------|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2

